/*
 * generated by Xtext 2.10.0
 */
package org.xtext.example.oil.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class OilGrammarAccess extends AbstractGrammarElementFinder {
	
	public class OILFileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.OILFile");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVersionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVersionOILVersionParserRuleCall_0_0 = (RuleCall)cVersionAssignment_0.eContents().get(0);
		private final Assignment cIncludeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIncludeIncludeParserRuleCall_1_0 = (RuleCall)cIncludeAssignment_1.eContents().get(0);
		private final Assignment cImplementationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cImplementationImplementationDefinitionParserRuleCall_2_0 = (RuleCall)cImplementationAssignment_2.eContents().get(0);
		private final Assignment cApplicationAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cApplicationApplicationDefinitionParserRuleCall_3_0 = (RuleCall)cApplicationAssignment_3.eContents().get(0);
		
		//OILFile:
		//	version=OILVersion?
		//	include+=Include*
		//	implementation=ImplementationDefinition?
		//	application=ApplicationDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//version=OILVersion? include+=Include* implementation=ImplementationDefinition? application=ApplicationDefinition
		public Group getGroup() { return cGroup; }
		
		//version=OILVersion?
		public Assignment getVersionAssignment_0() { return cVersionAssignment_0; }
		
		//OILVersion
		public RuleCall getVersionOILVersionParserRuleCall_0_0() { return cVersionOILVersionParserRuleCall_0_0; }
		
		//include+=Include*
		public Assignment getIncludeAssignment_1() { return cIncludeAssignment_1; }
		
		//Include
		public RuleCall getIncludeIncludeParserRuleCall_1_0() { return cIncludeIncludeParserRuleCall_1_0; }
		
		//implementation=ImplementationDefinition?
		public Assignment getImplementationAssignment_2() { return cImplementationAssignment_2; }
		
		//ImplementationDefinition
		public RuleCall getImplementationImplementationDefinitionParserRuleCall_2_0() { return cImplementationImplementationDefinitionParserRuleCall_2_0; }
		
		//application=ApplicationDefinition
		public Assignment getApplicationAssignment_3() { return cApplicationAssignment_3; }
		
		//ApplicationDefinition
		public RuleCall getApplicationApplicationDefinitionParserRuleCall_3_0() { return cApplicationApplicationDefinitionParserRuleCall_3_0; }
	}
	public class IncludeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.Include");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIncludeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cLessThanSignKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cNameAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cNameFileNameParserRuleCall_1_0_1_0 = (RuleCall)cNameAssignment_1_0_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_1_0_2 = (Keyword)cGroup_1_0.eContents().get(2);
		private final Assignment cNameAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cNameAssignment_1_1.eContents().get(0);
		
		//Include: // 수정
		//	"#include" ("<" name=FileName ">" | name=STRING);
		@Override public ParserRule getRule() { return rule; }
		
		//// 수정
		//"#include" ("<" name=FileName ">" | name=STRING)
		public Group getGroup() { return cGroup; }
		
		//// 수정
		//"#include"
		public Keyword getIncludeKeyword_0() { return cIncludeKeyword_0; }
		
		//("<" name=FileName ">" | name=STRING)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//"<" name=FileName ">"
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//"<"
		public Keyword getLessThanSignKeyword_1_0_0() { return cLessThanSignKeyword_1_0_0; }
		
		//name=FileName
		public Assignment getNameAssignment_1_0_1() { return cNameAssignment_1_0_1; }
		
		//FileName
		public RuleCall getNameFileNameParserRuleCall_1_0_1_0() { return cNameFileNameParserRuleCall_1_0_1_0; }
		
		//">"
		public Keyword getGreaterThanSignKeyword_1_0_2() { return cGreaterThanSignKeyword_1_0_2; }
		
		//name=STRING
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_1_0() { return cNameSTRINGTerminalRuleCall_1_1_0; }
	}
	public class FileNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.FileName");
		private final RuleCall cFILEIDTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//FileName:
		//	FILEID;
		@Override public ParserRule getRule() { return rule; }
		
		//FILEID
		public RuleCall getFILEIDTerminalRuleCall() { return cFILEIDTerminalRuleCall; }
	}
	public class OILVersionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.OILVersion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOIL_VERSIONKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cVersionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cVersionSTRINGTerminalRuleCall_2_0 = (RuleCall)cVersionAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_3_1_0 = (RuleCall)cDescriptionAssignment_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//OILVersion:
		//	"OIL_VERSION" "=" version=STRING (":" description=EString)? ";";
		@Override public ParserRule getRule() { return rule; }
		
		//"OIL_VERSION" "=" version=STRING (":" description=EString)? ";"
		public Group getGroup() { return cGroup; }
		
		//"OIL_VERSION"
		public Keyword getOIL_VERSIONKeyword_0() { return cOIL_VERSIONKeyword_0; }
		
		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//version=STRING
		public Assignment getVersionAssignment_2() { return cVersionAssignment_2; }
		
		//STRING
		public RuleCall getVersionSTRINGTerminalRuleCall_2_0() { return cVersionSTRINGTerminalRuleCall_2_0; }
		
		//(":" description=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//":"
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }
		
		//description=EString
		public Assignment getDescriptionAssignment_3_1() { return cDescriptionAssignment_3_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_3_1_0() { return cDescriptionEStringParserRuleCall_3_1_0; }
		
		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class ImplementationDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.ImplementationDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIMPLEMENTATIONKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cImplementationSpecsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cImplementationSpecsImplementationSpecParserRuleCall_3_0 = (RuleCall)cImplementationSpecsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ImplementationDefinition:
		//	"IMPLEMENTATION" name=Name "{" implementationSpecs+=ImplementationSpec "}" ";";
		@Override public ParserRule getRule() { return rule; }
		
		//"IMPLEMENTATION" name=Name "{" implementationSpecs+=ImplementationSpec "}" ";"
		public Group getGroup() { return cGroup; }
		
		//"IMPLEMENTATION"
		public Keyword getIMPLEMENTATIONKeyword_0() { return cIMPLEMENTATIONKeyword_0; }
		
		//name=Name
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_1_0() { return cNameNameParserRuleCall_1_0; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//implementationSpecs+=ImplementationSpec
		public Assignment getImplementationSpecsAssignment_3() { return cImplementationSpecsAssignment_3; }
		
		//ImplementationSpec
		public RuleCall getImplementationSpecsImplementationSpecParserRuleCall_3_0() { return cImplementationSpecsImplementationSpecParserRuleCall_3_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
		
		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class ImplementationSpecElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.ImplementationSpec");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cImplementationSpecAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cOsRuleAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cOsRuleOsRuleParserRuleCall_1_0_0 = (RuleCall)cOsRuleAssignment_1_0.eContents().get(0);
		private final Assignment cTaskRuleAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cTaskRuleTaskRuleParserRuleCall_1_1_0 = (RuleCall)cTaskRuleAssignment_1_1.eContents().get(0);
		private final Assignment cCounterRuleAssignment_1_2 = (Assignment)cAlternatives_1.eContents().get(2);
		private final RuleCall cCounterRuleCounterRuleParserRuleCall_1_2_0 = (RuleCall)cCounterRuleAssignment_1_2.eContents().get(0);
		private final Assignment cIsrRuleAssignment_1_3 = (Assignment)cAlternatives_1.eContents().get(3);
		private final RuleCall cIsrRuleIsrRuleParserRuleCall_1_3_0 = (RuleCall)cIsrRuleAssignment_1_3.eContents().get(0);
		
		//ImplementationSpec:
		//	{ImplementationSpec} (osRule+=OsRule | taskRule+=TaskRule | counterRule+=CounterRule | isrRule+=IsrRule)+;
		@Override public ParserRule getRule() { return rule; }
		
		//{ImplementationSpec} (osRule+=OsRule | taskRule+=TaskRule | counterRule+=CounterRule | isrRule+=IsrRule)+
		public Group getGroup() { return cGroup; }
		
		//{ImplementationSpec}
		public Action getImplementationSpecAction_0() { return cImplementationSpecAction_0; }
		
		//(osRule+=OsRule | taskRule+=TaskRule | counterRule+=CounterRule | isrRule+=IsrRule)+
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//osRule+=OsRule
		public Assignment getOsRuleAssignment_1_0() { return cOsRuleAssignment_1_0; }
		
		//OsRule
		public RuleCall getOsRuleOsRuleParserRuleCall_1_0_0() { return cOsRuleOsRuleParserRuleCall_1_0_0; }
		
		//taskRule+=TaskRule
		public Assignment getTaskRuleAssignment_1_1() { return cTaskRuleAssignment_1_1; }
		
		//TaskRule
		public RuleCall getTaskRuleTaskRuleParserRuleCall_1_1_0() { return cTaskRuleTaskRuleParserRuleCall_1_1_0; }
		
		//counterRule+=CounterRule
		public Assignment getCounterRuleAssignment_1_2() { return cCounterRuleAssignment_1_2; }
		
		//CounterRule
		public RuleCall getCounterRuleCounterRuleParserRuleCall_1_2_0() { return cCounterRuleCounterRuleParserRuleCall_1_2_0; }
		
		//isrRule+=IsrRule
		public Assignment getIsrRuleAssignment_1_3() { return cIsrRuleAssignment_1_3; }
		
		//IsrRule
		public RuleCall getIsrRuleIsrRuleParserRuleCall_1_3_0() { return cIsrRuleIsrRuleParserRuleCall_1_3_0; }
	}
	public class OsRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.OsRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cOsRuleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cOSKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cImplementationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cImplementationsImplementationDefParserRuleCall_3_0 = (RuleCall)cImplementationsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//OsRule:
		//	{OsRule}
		//	"OS" "{" implementations+=ImplementationDef* "}" ";";
		@Override public ParserRule getRule() { return rule; }
		
		//{OsRule} "OS" "{" implementations+=ImplementationDef* "}" ";"
		public Group getGroup() { return cGroup; }
		
		//{OsRule}
		public Action getOsRuleAction_0() { return cOsRuleAction_0; }
		
		//"OS"
		public Keyword getOSKeyword_1() { return cOSKeyword_1; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//implementations+=ImplementationDef*
		public Assignment getImplementationsAssignment_3() { return cImplementationsAssignment_3; }
		
		//ImplementationDef
		public RuleCall getImplementationsImplementationDefParserRuleCall_3_0() { return cImplementationsImplementationDefParserRuleCall_3_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
		
		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class TaskRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.TaskRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTaskRuleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTASKKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cImplementationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cImplementationsImplementationDefParserRuleCall_3_0 = (RuleCall)cImplementationsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//TaskRule:
		//	{TaskRule}
		//	"TASK" "{" implementations+=ImplementationDef* "}" ";";
		@Override public ParserRule getRule() { return rule; }
		
		//{TaskRule} "TASK" "{" implementations+=ImplementationDef* "}" ";"
		public Group getGroup() { return cGroup; }
		
		//{TaskRule}
		public Action getTaskRuleAction_0() { return cTaskRuleAction_0; }
		
		//"TASK"
		public Keyword getTASKKeyword_1() { return cTASKKeyword_1; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//implementations+=ImplementationDef*
		public Assignment getImplementationsAssignment_3() { return cImplementationsAssignment_3; }
		
		//ImplementationDef
		public RuleCall getImplementationsImplementationDefParserRuleCall_3_0() { return cImplementationsImplementationDefParserRuleCall_3_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
		
		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class CounterRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.CounterRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCounterRuleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCOUNTERKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cImplementationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cImplementationsImplementationDefParserRuleCall_3_0 = (RuleCall)cImplementationsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//CounterRule:
		//	{CounterRule}
		//	"COUNTER" "{" implementations+=ImplementationDef* "}" ";";
		@Override public ParserRule getRule() { return rule; }
		
		//{CounterRule} "COUNTER" "{" implementations+=ImplementationDef* "}" ";"
		public Group getGroup() { return cGroup; }
		
		//{CounterRule}
		public Action getCounterRuleAction_0() { return cCounterRuleAction_0; }
		
		//"COUNTER"
		public Keyword getCOUNTERKeyword_1() { return cCOUNTERKeyword_1; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//implementations+=ImplementationDef*
		public Assignment getImplementationsAssignment_3() { return cImplementationsAssignment_3; }
		
		//ImplementationDef
		public RuleCall getImplementationsImplementationDefParserRuleCall_3_0() { return cImplementationsImplementationDefParserRuleCall_3_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
		
		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class ApplicationRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.ApplicationRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cApplicationRuleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAPPLICATIONKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAppSubOrParamAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Alternatives cAppSubOrParamAlternatives_4_0 = (Alternatives)cAppSubOrParamAssignment_4.eContents().get(0);
		private final RuleCall cAppSubOrParamAppSubContainerParserRuleCall_4_0_0 = (RuleCall)cAppSubOrParamAlternatives_4_0.eContents().get(0);
		private final RuleCall cAppSubOrParamApplicationParamParserRuleCall_4_0_1 = (RuleCall)cAppSubOrParamAlternatives_4_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ApplicationRule:
		//	{ApplicationRule}
		//	"APPLICATION"
		//	name=Name? "{" appSubOrParam+=(AppSubContainer | ApplicationParam)* "}" ";";
		@Override public ParserRule getRule() { return rule; }
		
		//{ApplicationRule} "APPLICATION" name=Name? "{" appSubOrParam+=(AppSubContainer | ApplicationParam)* "}" ";"
		public Group getGroup() { return cGroup; }
		
		//{ApplicationRule}
		public Action getApplicationRuleAction_0() { return cApplicationRuleAction_0; }
		
		//"APPLICATION"
		public Keyword getAPPLICATIONKeyword_1() { return cAPPLICATIONKeyword_1; }
		
		//name=Name?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0() { return cNameNameParserRuleCall_2_0; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//appSubOrParam+=(AppSubContainer | ApplicationParam)*
		public Assignment getAppSubOrParamAssignment_4() { return cAppSubOrParamAssignment_4; }
		
		//(AppSubContainer | ApplicationParam)
		public Alternatives getAppSubOrParamAlternatives_4_0() { return cAppSubOrParamAlternatives_4_0; }
		
		//AppSubContainer
		public RuleCall getAppSubOrParamAppSubContainerParserRuleCall_4_0_0() { return cAppSubOrParamAppSubContainerParserRuleCall_4_0_0; }
		
		//ApplicationParam
		public RuleCall getAppSubOrParamApplicationParamParserRuleCall_4_0_1() { return cAppSubOrParamApplicationParamParserRuleCall_4_0_1; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
		
		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}
	public class AppSubContainerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.AppSubContainer");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cHasRestartTaskRuleAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cHasRestartTaskRuleHasRestartTaskRuleParserRuleCall_0_0 = (RuleCall)cHasRestartTaskRuleAssignment_0.eContents().get(0);
		private final Assignment cTrustedRuleAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cTrustedRuleTrustedRuleParserRuleCall_1_0 = (RuleCall)cTrustedRuleAssignment_1.eContents().get(0);
		
		//AppSubContainer:
		//	hasRestartTaskRule=HasRestartTaskRule | trustedRule=TrustedRule;
		@Override public ParserRule getRule() { return rule; }
		
		//hasRestartTaskRule=HasRestartTaskRule | trustedRule=TrustedRule
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//hasRestartTaskRule=HasRestartTaskRule
		public Assignment getHasRestartTaskRuleAssignment_0() { return cHasRestartTaskRuleAssignment_0; }
		
		//HasRestartTaskRule
		public RuleCall getHasRestartTaskRuleHasRestartTaskRuleParserRuleCall_0_0() { return cHasRestartTaskRuleHasRestartTaskRuleParserRuleCall_0_0; }
		
		//trustedRule=TrustedRule
		public Assignment getTrustedRuleAssignment_1() { return cTrustedRuleAssignment_1; }
		
		//TrustedRule
		public RuleCall getTrustedRuleTrustedRuleParserRuleCall_1_0() { return cTrustedRuleTrustedRuleParserRuleCall_1_0; }
	}
	public class HasRestartTaskRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.HasRestartTaskRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHasRestartTaskRuleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHAS_RESTARTTASKKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cAlternatives_4.eContents().get(0);
		private final Keyword cTRUEKeyword_4_0_0 = (Keyword)cGroup_4_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_0_1 = (Keyword)cGroup_4_0.eContents().get(1);
		private final Assignment cRestartTaskRuleAssignment_4_0_2 = (Assignment)cGroup_4_0.eContents().get(2);
		private final RuleCall cRestartTaskRuleRestartTaskRuleParserRuleCall_4_0_2_0 = (RuleCall)cRestartTaskRuleAssignment_4_0_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_0_3 = (Keyword)cGroup_4_0.eContents().get(3);
		private final Keyword cFALSEKeyword_4_1 = (Keyword)cAlternatives_4.eContents().get(1);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//HasRestartTaskRule:
		//	{HasRestartTaskRule}
		//	"HAS_RESTARTTASK"
		//	name=Name? "=" ("TRUE" "{" restartTaskRule=RestartTaskRule "}" | "FALSE") ";";
		@Override public ParserRule getRule() { return rule; }
		
		//{HasRestartTaskRule} "HAS_RESTARTTASK" name=Name? "=" ("TRUE" "{" restartTaskRule=RestartTaskRule "}" | "FALSE") ";"
		public Group getGroup() { return cGroup; }
		
		//{HasRestartTaskRule}
		public Action getHasRestartTaskRuleAction_0() { return cHasRestartTaskRuleAction_0; }
		
		//"HAS_RESTARTTASK"
		public Keyword getHAS_RESTARTTASKKeyword_1() { return cHAS_RESTARTTASKKeyword_1; }
		
		//name=Name?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0() { return cNameNameParserRuleCall_2_0; }
		
		//"="
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//("TRUE" "{" restartTaskRule=RestartTaskRule "}" | "FALSE")
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//"TRUE" "{" restartTaskRule=RestartTaskRule "}"
		public Group getGroup_4_0() { return cGroup_4_0; }
		
		//"TRUE"
		public Keyword getTRUEKeyword_4_0_0() { return cTRUEKeyword_4_0_0; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_0_1() { return cLeftCurlyBracketKeyword_4_0_1; }
		
		//restartTaskRule=RestartTaskRule
		public Assignment getRestartTaskRuleAssignment_4_0_2() { return cRestartTaskRuleAssignment_4_0_2; }
		
		//RestartTaskRule
		public RuleCall getRestartTaskRuleRestartTaskRuleParserRuleCall_4_0_2_0() { return cRestartTaskRuleRestartTaskRuleParserRuleCall_4_0_2_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_4_0_3() { return cRightCurlyBracketKeyword_4_0_3; }
		
		//"FALSE"
		public Keyword getFALSEKeyword_4_1() { return cFALSEKeyword_4_1; }
		
		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class RestartTaskRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.RestartTaskRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRESTARTTASKKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueAttributeValueParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//RestartTaskRule:
		//	"RESTARTTASK"
		//	name=Name? "=" value=AttributeValue ";";
		@Override public ParserRule getRule() { return rule; }
		
		//"RESTARTTASK" name=Name? "=" value=AttributeValue ";"
		public Group getGroup() { return cGroup; }
		
		//"RESTARTTASK"
		public Keyword getRESTARTTASKKeyword_0() { return cRESTARTTASKKeyword_0; }
		
		//name=Name?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_1_0() { return cNameNameParserRuleCall_1_0; }
		
		//"="
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//value=AttributeValue
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//AttributeValue
		public RuleCall getValueAttributeValueParserRuleCall_3_0() { return cValueAttributeValueParserRuleCall_3_0; }
		
		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class TrustedRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.TrustedRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTrustedRuleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTRUSTEDKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Keyword cTRUEKeyword_4_0 = (Keyword)cAlternatives_4.eContents().get(0);
		private final Keyword cFALSEKeyword_4_1 = (Keyword)cAlternatives_4.eContents().get(1);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//TrustedRule:
		//	{TrustedRule}
		//	"TRUSTED" name=Name? "=" ("TRUE" | "FALSE") ";";
		@Override public ParserRule getRule() { return rule; }
		
		//{TrustedRule} "TRUSTED" name=Name? "=" ("TRUE" | "FALSE") ";"
		public Group getGroup() { return cGroup; }
		
		//{TrustedRule}
		public Action getTrustedRuleAction_0() { return cTrustedRuleAction_0; }
		
		//"TRUSTED"
		public Keyword getTRUSTEDKeyword_1() { return cTRUSTEDKeyword_1; }
		
		//name=Name?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0() { return cNameNameParserRuleCall_2_0; }
		
		//"="
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//("TRUE" | "FALSE")
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//"TRUE"
		public Keyword getTRUEKeyword_4_0() { return cTRUEKeyword_4_0; }
		
		//"FALSE"
		public Keyword getFALSEKeyword_4_1() { return cFALSEKeyword_4_1; }
		
		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class ApplicationParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.ApplicationParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeApplicationParamEnumEnumRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueAttributeValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ApplicationParam:
		//	type=ApplicationParamEnum "=" value=AttributeValue ";";
		@Override public ParserRule getRule() { return rule; }
		
		//type=ApplicationParamEnum "=" value=AttributeValue ";"
		public Group getGroup() { return cGroup; }
		
		//type=ApplicationParamEnum
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//ApplicationParamEnum
		public RuleCall getTypeApplicationParamEnumEnumRuleCall_0_0() { return cTypeApplicationParamEnumEnumRuleCall_0_0; }
		
		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//value=AttributeValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//AttributeValue
		public RuleCall getValueAttributeValueParserRuleCall_2_0() { return cValueAttributeValueParserRuleCall_2_0; }
		
		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class IsrRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.IsrRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cIsrRuleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cISRKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeIntTypeEnumEnumRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Assignment cIsrSubOrParamAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Alternatives cIsrSubOrParamAlternatives_5_0 = (Alternatives)cIsrSubOrParamAssignment_5.eContents().get(0);
		private final RuleCall cIsrSubOrParamIsrSubContainerParserRuleCall_5_0_0 = (RuleCall)cIsrSubOrParamAlternatives_5_0.eContents().get(0);
		private final RuleCall cIsrSubOrParamIsrParamParserRuleCall_5_0_1 = (RuleCall)cIsrSubOrParamAlternatives_5_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//IsrRule:
		//	{IsrRule}
		//	"ISR"
		//	name=Name? "{" type=IntTypeEnum? isrSubOrParam+=(IsrSubContainer | IsrParam)* "}" ";";
		@Override public ParserRule getRule() { return rule; }
		
		//{IsrRule} "ISR" name=Name? "{" type=IntTypeEnum? isrSubOrParam+=(IsrSubContainer | IsrParam)* "}" ";"
		public Group getGroup() { return cGroup; }
		
		//{IsrRule}
		public Action getIsrRuleAction_0() { return cIsrRuleAction_0; }
		
		//"ISR"
		public Keyword getISRKeyword_1() { return cISRKeyword_1; }
		
		//name=Name?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0() { return cNameNameParserRuleCall_2_0; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//type=IntTypeEnum?
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//IntTypeEnum
		public RuleCall getTypeIntTypeEnumEnumRuleCall_4_0() { return cTypeIntTypeEnumEnumRuleCall_4_0; }
		
		//isrSubOrParam+=(IsrSubContainer | IsrParam)*
		public Assignment getIsrSubOrParamAssignment_5() { return cIsrSubOrParamAssignment_5; }
		
		//(IsrSubContainer | IsrParam)
		public Alternatives getIsrSubOrParamAlternatives_5_0() { return cIsrSubOrParamAlternatives_5_0; }
		
		//IsrSubContainer
		public RuleCall getIsrSubOrParamIsrSubContainerParserRuleCall_5_0_0() { return cIsrSubOrParamIsrSubContainerParserRuleCall_5_0_0; }
		
		//IsrParam
		public RuleCall getIsrSubOrParamIsrParamParserRuleCall_5_0_1() { return cIsrSubOrParamIsrParamParserRuleCall_5_0_1; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
		
		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}
	public class IsrSubContainerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.IsrSubContainer");
		private final Assignment cTimingProtectionRuleAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cTimingProtectionRuleTimingProtectionRuleParserRuleCall_0 = (RuleCall)cTimingProtectionRuleAssignment.eContents().get(0);
		
		//IsrSubContainer:
		//	timingProtectionRule=TimingProtectionRule;
		@Override public ParserRule getRule() { return rule; }
		
		//timingProtectionRule=TimingProtectionRule
		public Assignment getTimingProtectionRuleAssignment() { return cTimingProtectionRuleAssignment; }
		
		//TimingProtectionRule
		public RuleCall getTimingProtectionRuleTimingProtectionRuleParserRuleCall_0() { return cTimingProtectionRuleTimingProtectionRuleParserRuleCall_0; }
	}
	public class TimingProtectionRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.TimingProtectionRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTimingProtectionRuleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTIMING_PROTECTIONKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cAlternatives_4.eContents().get(0);
		private final Keyword cTRUEKeyword_4_0_0 = (Keyword)cGroup_4_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_0_1 = (Keyword)cGroup_4_0.eContents().get(1);
		private final Assignment cTimingProtectionParamAssignment_4_0_2 = (Assignment)cGroup_4_0.eContents().get(2);
		private final RuleCall cTimingProtectionParamTimingProtectionParamParserRuleCall_4_0_2_0 = (RuleCall)cTimingProtectionParamAssignment_4_0_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_0_3 = (Keyword)cGroup_4_0.eContents().get(3);
		private final Keyword cFALSEKeyword_4_1 = (Keyword)cAlternatives_4.eContents().get(1);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//TimingProtectionRule:
		//	{TimingProtectionRule}
		//	"TIMING_PROTECTION"
		//	name=Name? "=" ("TRUE" "{" timingProtectionParam+=TimingProtectionParam* "}" | "FALSE") ";";
		@Override public ParserRule getRule() { return rule; }
		
		//{TimingProtectionRule} "TIMING_PROTECTION" name=Name? "=" ("TRUE" "{" timingProtectionParam+=TimingProtectionParam* "}"
		//| "FALSE") ";"
		public Group getGroup() { return cGroup; }
		
		//{TimingProtectionRule}
		public Action getTimingProtectionRuleAction_0() { return cTimingProtectionRuleAction_0; }
		
		//"TIMING_PROTECTION"
		public Keyword getTIMING_PROTECTIONKeyword_1() { return cTIMING_PROTECTIONKeyword_1; }
		
		//name=Name?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0() { return cNameNameParserRuleCall_2_0; }
		
		//"="
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//("TRUE" "{" timingProtectionParam+=TimingProtectionParam* "}" | "FALSE")
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//"TRUE" "{" timingProtectionParam+=TimingProtectionParam* "}"
		public Group getGroup_4_0() { return cGroup_4_0; }
		
		//"TRUE"
		public Keyword getTRUEKeyword_4_0_0() { return cTRUEKeyword_4_0_0; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_0_1() { return cLeftCurlyBracketKeyword_4_0_1; }
		
		//timingProtectionParam+=TimingProtectionParam*
		public Assignment getTimingProtectionParamAssignment_4_0_2() { return cTimingProtectionParamAssignment_4_0_2; }
		
		//TimingProtectionParam
		public RuleCall getTimingProtectionParamTimingProtectionParamParserRuleCall_4_0_2_0() { return cTimingProtectionParamTimingProtectionParamParserRuleCall_4_0_2_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_4_0_3() { return cRightCurlyBracketKeyword_4_0_3; }
		
		//"FALSE"
		public Keyword getFALSEKeyword_4_1() { return cFALSEKeyword_4_1; }
		
		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class TimingProtectionParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.TimingProtectionParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeTimingProtectionParamEnumEnumRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueAttributeValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//TimingProtectionParam:
		//	type=TimingProtectionParamEnum "=" value=AttributeValue ";";
		@Override public ParserRule getRule() { return rule; }
		
		//type=TimingProtectionParamEnum "=" value=AttributeValue ";"
		public Group getGroup() { return cGroup; }
		
		//type=TimingProtectionParamEnum
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//TimingProtectionParamEnum
		public RuleCall getTypeTimingProtectionParamEnumEnumRuleCall_0_0() { return cTypeTimingProtectionParamEnumEnumRuleCall_0_0; }
		
		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//value=AttributeValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//AttributeValue
		public RuleCall getValueAttributeValueParserRuleCall_2_0() { return cValueAttributeValueParserRuleCall_2_0; }
		
		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class IsrParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.IsrParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeIsrParamEnumEnumRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueAttributeValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//IsrParam:
		//	type=IsrParamEnum "=" value=AttributeValue ";";
		@Override public ParserRule getRule() { return rule; }
		
		//type=IsrParamEnum "=" value=AttributeValue ";"
		public Group getGroup() { return cGroup; }
		
		//type=IsrParamEnum
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//IsrParamEnum
		public RuleCall getTypeIsrParamEnumEnumRuleCall_0_0() { return cTypeIsrParamEnumEnumRuleCall_0_0; }
		
		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//value=AttributeValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//AttributeValue
		public RuleCall getValueAttributeValueParserRuleCall_2_0() { return cValueAttributeValueParserRuleCall_2_0; }
		
		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class MemoryProtectionRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.MemoryProtectionRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMemoryProtectionRuleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMEMORY_PROTECTIONKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//MemoryProtectionRule:
		//	{MemoryProtectionRule}
		//	"MEMORY_PROTECTION" "{" "}" ";";
		@Override public ParserRule getRule() { return rule; }
		
		//{MemoryProtectionRule} "MEMORY_PROTECTION" "{" "}" ";"
		public Group getGroup() { return cGroup; }
		
		//{MemoryProtectionRule}
		public Action getMemoryProtectionRuleAction_0() { return cMemoryProtectionRuleAction_0; }
		
		//"MEMORY_PROTECTION"
		public Keyword getMEMORY_PROTECTIONKeyword_1() { return cMEMORY_PROTECTIONKeyword_1; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
		
		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class ObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.Object");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cOSKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cTASKKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cCOUNTERKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cALARMKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cRESOURCEKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cEVENTKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cISRKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cMESSAGEKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cCOMKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cNMKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		private final Keyword cAPPMODEKeyword_10 = (Keyword)cAlternatives.eContents().get(10);
		private final Keyword cIPDUKeyword_11 = (Keyword)cAlternatives.eContents().get(11);
		private final Keyword cNETWORKMESSAGEKeyword_12 = (Keyword)cAlternatives.eContents().get(12);
		private final Keyword cAPPLICATIONKeyword_13 = (Keyword)cAlternatives.eContents().get(13);
		private final Keyword cMEMOTY_PROTECTIONKeyword_14 = (Keyword)cAlternatives.eContents().get(14);
		private final Keyword cSPINLOCKKeyword_15 = (Keyword)cAlternatives.eContents().get(15);
		private final Keyword cSCHEDULETABLEKeyword_16 = (Keyword)cAlternatives.eContents().get(16);
		private final Keyword cIOCKeyword_17 = (Keyword)cAlternatives.eContents().get(17);
		private final Keyword cLIBRARYKeyword_18 = (Keyword)cAlternatives.eContents().get(18);
		
		//Object:
		//	"OS" | "TASK" | "COUNTER" | "ALARM" | "RESOURCE" |
		//	"EVENT" | "ISR" | "MESSAGE" | "COM" | "NM" |
		//	"APPMODE" | "IPDU" | "NETWORKMESSAGE" | "APPLICATION" | "MEMOTY_PROTECTION" |
		//	"SPINLOCK" | "SCHEDULETABLE" | "IOC" | "LIBRARY";
		@Override public ParserRule getRule() { return rule; }
		
		//"OS" | "TASK" | "COUNTER" | "ALARM" | "RESOURCE" | "EVENT" | "ISR" | "MESSAGE" | "COM" | "NM" | "APPMODE" | "IPDU" |
		//"NETWORKMESSAGE" | "APPLICATION" | "MEMOTY_PROTECTION" | "SPINLOCK" | "SCHEDULETABLE" | "IOC" | "LIBRARY"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//"OS"
		public Keyword getOSKeyword_0() { return cOSKeyword_0; }
		
		//"TASK"
		public Keyword getTASKKeyword_1() { return cTASKKeyword_1; }
		
		//"COUNTER"
		public Keyword getCOUNTERKeyword_2() { return cCOUNTERKeyword_2; }
		
		//"ALARM"
		public Keyword getALARMKeyword_3() { return cALARMKeyword_3; }
		
		//"RESOURCE"
		public Keyword getRESOURCEKeyword_4() { return cRESOURCEKeyword_4; }
		
		//"EVENT"
		public Keyword getEVENTKeyword_5() { return cEVENTKeyword_5; }
		
		//"ISR"
		public Keyword getISRKeyword_6() { return cISRKeyword_6; }
		
		//"MESSAGE"
		public Keyword getMESSAGEKeyword_7() { return cMESSAGEKeyword_7; }
		
		//"COM"
		public Keyword getCOMKeyword_8() { return cCOMKeyword_8; }
		
		//"NM"
		public Keyword getNMKeyword_9() { return cNMKeyword_9; }
		
		//"APPMODE"
		public Keyword getAPPMODEKeyword_10() { return cAPPMODEKeyword_10; }
		
		//"IPDU"
		public Keyword getIPDUKeyword_11() { return cIPDUKeyword_11; }
		
		//"NETWORKMESSAGE"
		public Keyword getNETWORKMESSAGEKeyword_12() { return cNETWORKMESSAGEKeyword_12; }
		
		//"APPLICATION"
		public Keyword getAPPLICATIONKeyword_13() { return cAPPLICATIONKeyword_13; }
		
		//"MEMOTY_PROTECTION"
		public Keyword getMEMOTY_PROTECTIONKeyword_14() { return cMEMOTY_PROTECTIONKeyword_14; }
		
		//"SPINLOCK"
		public Keyword getSPINLOCKKeyword_15() { return cSPINLOCKKeyword_15; }
		
		//"SCHEDULETABLE"
		public Keyword getSCHEDULETABLEKeyword_16() { return cSCHEDULETABLEKeyword_16; }
		
		//"IOC"
		public Keyword getIOCKeyword_17() { return cIOCKeyword_17; }
		
		//"LIBRARY"
		public Keyword getLIBRARYKeyword_18() { return cLIBRARYKeyword_18; }
	}
	public class ImplementationDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.ImplementationDef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cImplAttrDefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cImplRefDefParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ImplementationDef:
		//	ImplAttrDef | ImplRefDef;
		@Override public ParserRule getRule() { return rule; }
		
		//ImplAttrDef | ImplRefDef
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ImplAttrDef
		public RuleCall getImplAttrDefParserRuleCall_0() { return cImplAttrDefParserRuleCall_0; }
		
		//ImplRefDef
		public RuleCall getImplRefDefParserRuleCall_1() { return cImplRefDefParserRuleCall_1; }
	}
	public class ImplAttrDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.ImplAttrDef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cImplAttrIntDefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cImplAttrFloatDefParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cImplAttrEnumDefParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cImplAttrStringDefParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cImplAttrBooleanDefParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cImplAttrIdentiFierParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//ImplAttrDef:
		//	ImplAttrIntDef | ImplAttrFloatDef | ImplAttrEnumDef | ImplAttrStringDef | ImplAttrBooleanDef | ImplAttrIdentiFier;
		@Override public ParserRule getRule() { return rule; }
		
		//ImplAttrIntDef | ImplAttrFloatDef | ImplAttrEnumDef | ImplAttrStringDef | ImplAttrBooleanDef | ImplAttrIdentiFier
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ImplAttrIntDef
		public RuleCall getImplAttrIntDefParserRuleCall_0() { return cImplAttrIntDefParserRuleCall_0; }
		
		//ImplAttrFloatDef
		public RuleCall getImplAttrFloatDefParserRuleCall_1() { return cImplAttrFloatDefParserRuleCall_1; }
		
		//ImplAttrEnumDef
		public RuleCall getImplAttrEnumDefParserRuleCall_2() { return cImplAttrEnumDefParserRuleCall_2; }
		
		//ImplAttrStringDef
		public RuleCall getImplAttrStringDefParserRuleCall_3() { return cImplAttrStringDefParserRuleCall_3; }
		
		//ImplAttrBooleanDef
		public RuleCall getImplAttrBooleanDefParserRuleCall_4() { return cImplAttrBooleanDefParserRuleCall_4; }
		
		//ImplAttrIdentiFier
		public RuleCall getImplAttrIdentiFierParserRuleCall_5() { return cImplAttrIdentiFierParserRuleCall_5; }
	}
	public class ImplAttrIntDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.ImplAttrIntDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeIntTypeEnumEnumRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cAutoAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cAutoWITH_AUTOKeyword_1_0 = (Keyword)cAutoAssignment_1.eContents().get(0);
		private final Assignment cRangeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRangeRangeParserRuleCall_2_0 = (RuleCall)cRangeAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameAttributeNameParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Assignment cMultipleAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMultipleMultipleSpecifierParserRuleCall_4_0 = (RuleCall)cMultipleAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cEqualsSignKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Alternatives cAlternatives_5_1 = (Alternatives)cGroup_5.eContents().get(1);
		private final Assignment cValueAssignment_5_1_0 = (Assignment)cAlternatives_5_1.eContents().get(0);
		private final RuleCall cValueNumberParserRuleCall_5_1_0_0 = (RuleCall)cValueAssignment_5_1_0.eContents().get(0);
		private final Assignment cDefaultAssignment_5_1_1 = (Assignment)cAlternatives_5_1.eContents().get(1);
		private final RuleCall cDefaultDefaultEnumEnumRuleCall_5_1_1_0 = (RuleCall)cDefaultAssignment_5_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ImplAttrIntDef:
		//	type=IntTypeEnum
		//	auto?="WITH_AUTO"? range=Range? name=AttributeName multiple?=MultipleSpecifier? ("=" (value=Number |
		//	default=DefaultEnum))? ";";
		@Override public ParserRule getRule() { return rule; }
		
		//type=IntTypeEnum auto?="WITH_AUTO"? range=Range? name=AttributeName multiple?=MultipleSpecifier? ("=" (value=Number |
		//default=DefaultEnum))? ";"
		public Group getGroup() { return cGroup; }
		
		//type=IntTypeEnum
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//IntTypeEnum
		public RuleCall getTypeIntTypeEnumEnumRuleCall_0_0() { return cTypeIntTypeEnumEnumRuleCall_0_0; }
		
		//auto?="WITH_AUTO"?
		public Assignment getAutoAssignment_1() { return cAutoAssignment_1; }
		
		//"WITH_AUTO"
		public Keyword getAutoWITH_AUTOKeyword_1_0() { return cAutoWITH_AUTOKeyword_1_0; }
		
		//range=Range?
		public Assignment getRangeAssignment_2() { return cRangeAssignment_2; }
		
		//Range
		public RuleCall getRangeRangeParserRuleCall_2_0() { return cRangeRangeParserRuleCall_2_0; }
		
		//name=AttributeName
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//AttributeName
		public RuleCall getNameAttributeNameParserRuleCall_3_0() { return cNameAttributeNameParserRuleCall_3_0; }
		
		//multiple?=MultipleSpecifier?
		public Assignment getMultipleAssignment_4() { return cMultipleAssignment_4; }
		
		//MultipleSpecifier
		public RuleCall getMultipleMultipleSpecifierParserRuleCall_4_0() { return cMultipleMultipleSpecifierParserRuleCall_4_0; }
		
		//("=" (value=Number | default=DefaultEnum))?
		public Group getGroup_5() { return cGroup_5; }
		
		//"="
		public Keyword getEqualsSignKeyword_5_0() { return cEqualsSignKeyword_5_0; }
		
		//(value=Number | default=DefaultEnum)
		public Alternatives getAlternatives_5_1() { return cAlternatives_5_1; }
		
		//value=Number
		public Assignment getValueAssignment_5_1_0() { return cValueAssignment_5_1_0; }
		
		//Number
		public RuleCall getValueNumberParserRuleCall_5_1_0_0() { return cValueNumberParserRuleCall_5_1_0_0; }
		
		//default=DefaultEnum
		public Assignment getDefaultAssignment_5_1_1() { return cDefaultAssignment_5_1_1; }
		
		//DefaultEnum
		public RuleCall getDefaultDefaultEnumEnumRuleCall_5_1_1_0() { return cDefaultDefaultEnumEnumRuleCall_5_1_1_0; }
		
		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}
	public class ImplAttrFloatDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.ImplAttrFloatDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFLOATKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAutoAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cAutoWITH_AUTOKeyword_1_0 = (Keyword)cAutoAssignment_1.eContents().get(0);
		private final Assignment cRangeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRangeRangeParserRuleCall_2_0 = (RuleCall)cRangeAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameAttributeNameParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Assignment cMultipleAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMultipleMultipleSpecifierParserRuleCall_4_0 = (RuleCall)cMultipleAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cEqualsSignKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Alternatives cAlternatives_5_1 = (Alternatives)cGroup_5.eContents().get(1);
		private final Assignment cValueAssignment_5_1_0 = (Assignment)cAlternatives_5_1.eContents().get(0);
		private final RuleCall cValueEFloatParserRuleCall_5_1_0_0 = (RuleCall)cValueAssignment_5_1_0.eContents().get(0);
		private final Assignment cDefaultAssignment_5_1_1 = (Assignment)cAlternatives_5_1.eContents().get(1);
		private final RuleCall cDefaultDefaultEnumEnumRuleCall_5_1_1_0 = (RuleCall)cDefaultAssignment_5_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ImplAttrFloatDef:
		//	"FLOAT"
		//	auto?="WITH_AUTO"? range=Range? name=AttributeName multiple?=MultipleSpecifier? ("=" (value=EFloat |
		//	default=DefaultEnum))? ";";
		@Override public ParserRule getRule() { return rule; }
		
		//"FLOAT" auto?="WITH_AUTO"? range=Range? name=AttributeName multiple?=MultipleSpecifier? ("=" (value=EFloat |
		//default=DefaultEnum))? ";"
		public Group getGroup() { return cGroup; }
		
		//"FLOAT"
		public Keyword getFLOATKeyword_0() { return cFLOATKeyword_0; }
		
		//auto?="WITH_AUTO"?
		public Assignment getAutoAssignment_1() { return cAutoAssignment_1; }
		
		//"WITH_AUTO"
		public Keyword getAutoWITH_AUTOKeyword_1_0() { return cAutoWITH_AUTOKeyword_1_0; }
		
		//range=Range?
		public Assignment getRangeAssignment_2() { return cRangeAssignment_2; }
		
		//Range
		public RuleCall getRangeRangeParserRuleCall_2_0() { return cRangeRangeParserRuleCall_2_0; }
		
		//name=AttributeName
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//AttributeName
		public RuleCall getNameAttributeNameParserRuleCall_3_0() { return cNameAttributeNameParserRuleCall_3_0; }
		
		//multiple?=MultipleSpecifier?
		public Assignment getMultipleAssignment_4() { return cMultipleAssignment_4; }
		
		//MultipleSpecifier
		public RuleCall getMultipleMultipleSpecifierParserRuleCall_4_0() { return cMultipleMultipleSpecifierParserRuleCall_4_0; }
		
		//("=" (value=EFloat | default=DefaultEnum))?
		public Group getGroup_5() { return cGroup_5; }
		
		//"="
		public Keyword getEqualsSignKeyword_5_0() { return cEqualsSignKeyword_5_0; }
		
		//(value=EFloat | default=DefaultEnum)
		public Alternatives getAlternatives_5_1() { return cAlternatives_5_1; }
		
		//value=EFloat
		public Assignment getValueAssignment_5_1_0() { return cValueAssignment_5_1_0; }
		
		//EFloat
		public RuleCall getValueEFloatParserRuleCall_5_1_0_0() { return cValueEFloatParserRuleCall_5_1_0_0; }
		
		//default=DefaultEnum
		public Assignment getDefaultAssignment_5_1_1() { return cDefaultAssignment_5_1_1; }
		
		//DefaultEnum
		public RuleCall getDefaultDefaultEnumEnumRuleCall_5_1_1_0() { return cDefaultDefaultEnumEnumRuleCall_5_1_1_0; }
		
		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}
	public class ImplAttrEnumDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.ImplAttrEnumDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cENUMKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAutoAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cAutoWITH_AUTOKeyword_1_0 = (Keyword)cAutoAssignment_1.eContents().get(0);
		private final Assignment cEnumerationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEnumerationEnumerationParserRuleCall_2_0 = (RuleCall)cEnumerationAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameAttributeNameParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Assignment cMultipleAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMultipleMultipleSpecifierParserRuleCall_4_0 = (RuleCall)cMultipleAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cEqualsSignKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Alternatives cAlternatives_5_1 = (Alternatives)cGroup_5.eContents().get(1);
		private final Assignment cValueAssignment_5_1_0 = (Assignment)cAlternatives_5_1.eContents().get(0);
		private final RuleCall cValueNameParserRuleCall_5_1_0_0 = (RuleCall)cValueAssignment_5_1_0.eContents().get(0);
		private final Assignment cDefaultAssignment_5_1_1 = (Assignment)cAlternatives_5_1.eContents().get(1);
		private final RuleCall cDefaultDefaultEnumEnumRuleCall_5_1_1_0 = (RuleCall)cDefaultAssignment_5_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ImplAttrEnumDef:
		//	"ENUM"
		//	auto?="WITH_AUTO"? enumeration=Enumeration? name=AttributeName multiple?=MultipleSpecifier? ("=" (value=Name |
		//	default=DefaultEnum))? ";";
		@Override public ParserRule getRule() { return rule; }
		
		//"ENUM" auto?="WITH_AUTO"? enumeration=Enumeration? name=AttributeName multiple?=MultipleSpecifier? ("=" (value=Name |
		//default=DefaultEnum))? ";"
		public Group getGroup() { return cGroup; }
		
		//"ENUM"
		public Keyword getENUMKeyword_0() { return cENUMKeyword_0; }
		
		//auto?="WITH_AUTO"?
		public Assignment getAutoAssignment_1() { return cAutoAssignment_1; }
		
		//"WITH_AUTO"
		public Keyword getAutoWITH_AUTOKeyword_1_0() { return cAutoWITH_AUTOKeyword_1_0; }
		
		//enumeration=Enumeration?
		public Assignment getEnumerationAssignment_2() { return cEnumerationAssignment_2; }
		
		//Enumeration
		public RuleCall getEnumerationEnumerationParserRuleCall_2_0() { return cEnumerationEnumerationParserRuleCall_2_0; }
		
		//name=AttributeName
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//AttributeName
		public RuleCall getNameAttributeNameParserRuleCall_3_0() { return cNameAttributeNameParserRuleCall_3_0; }
		
		//multiple?=MultipleSpecifier?
		public Assignment getMultipleAssignment_4() { return cMultipleAssignment_4; }
		
		//MultipleSpecifier
		public RuleCall getMultipleMultipleSpecifierParserRuleCall_4_0() { return cMultipleMultipleSpecifierParserRuleCall_4_0; }
		
		//("=" (value=Name | default=DefaultEnum))?
		public Group getGroup_5() { return cGroup_5; }
		
		//"="
		public Keyword getEqualsSignKeyword_5_0() { return cEqualsSignKeyword_5_0; }
		
		//(value=Name | default=DefaultEnum)
		public Alternatives getAlternatives_5_1() { return cAlternatives_5_1; }
		
		//value=Name
		public Assignment getValueAssignment_5_1_0() { return cValueAssignment_5_1_0; }
		
		//Name
		public RuleCall getValueNameParserRuleCall_5_1_0_0() { return cValueNameParserRuleCall_5_1_0_0; }
		
		//default=DefaultEnum
		public Assignment getDefaultAssignment_5_1_1() { return cDefaultAssignment_5_1_1; }
		
		//DefaultEnum
		public RuleCall getDefaultDefaultEnumEnumRuleCall_5_1_1_0() { return cDefaultDefaultEnumEnumRuleCall_5_1_1_0; }
		
		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}
	public class ImplAttrStringDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.ImplAttrStringDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSTRINGKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAutoAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cAutoWITH_AUTOKeyword_1_0 = (Keyword)cAutoAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameAttributeNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cMultipleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMultipleMultipleSpecifierParserRuleCall_3_0 = (RuleCall)cMultipleAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cEqualsSignKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Alternatives cAlternatives_4_1 = (Alternatives)cGroup_4.eContents().get(1);
		private final Assignment cValueAssignment_4_1_0 = (Assignment)cAlternatives_4_1.eContents().get(0);
		private final RuleCall cValueEStringParserRuleCall_4_1_0_0 = (RuleCall)cValueAssignment_4_1_0.eContents().get(0);
		private final Assignment cDefaultAssignment_4_1_1 = (Assignment)cAlternatives_4_1.eContents().get(1);
		private final RuleCall cDefaultDefaultEnumEnumRuleCall_4_1_1_0 = (RuleCall)cDefaultAssignment_4_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ImplAttrStringDef:
		//	"STRING"
		//	auto?="WITH_AUTO"? name=AttributeName multiple?=MultipleSpecifier? ("=" (value=EString | default=DefaultEnum))? ";";
		@Override public ParserRule getRule() { return rule; }
		
		//"STRING" auto?="WITH_AUTO"? name=AttributeName multiple?=MultipleSpecifier? ("=" (value=EString | default=DefaultEnum))?
		//";"
		public Group getGroup() { return cGroup; }
		
		//"STRING"
		public Keyword getSTRINGKeyword_0() { return cSTRINGKeyword_0; }
		
		//auto?="WITH_AUTO"?
		public Assignment getAutoAssignment_1() { return cAutoAssignment_1; }
		
		//"WITH_AUTO"
		public Keyword getAutoWITH_AUTOKeyword_1_0() { return cAutoWITH_AUTOKeyword_1_0; }
		
		//name=AttributeName
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//AttributeName
		public RuleCall getNameAttributeNameParserRuleCall_2_0() { return cNameAttributeNameParserRuleCall_2_0; }
		
		//multiple?=MultipleSpecifier?
		public Assignment getMultipleAssignment_3() { return cMultipleAssignment_3; }
		
		//MultipleSpecifier
		public RuleCall getMultipleMultipleSpecifierParserRuleCall_3_0() { return cMultipleMultipleSpecifierParserRuleCall_3_0; }
		
		//("=" (value=EString | default=DefaultEnum))?
		public Group getGroup_4() { return cGroup_4; }
		
		//"="
		public Keyword getEqualsSignKeyword_4_0() { return cEqualsSignKeyword_4_0; }
		
		//(value=EString | default=DefaultEnum)
		public Alternatives getAlternatives_4_1() { return cAlternatives_4_1; }
		
		//value=EString
		public Assignment getValueAssignment_4_1_0() { return cValueAssignment_4_1_0; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_4_1_0_0() { return cValueEStringParserRuleCall_4_1_0_0; }
		
		//default=DefaultEnum
		public Assignment getDefaultAssignment_4_1_1() { return cDefaultAssignment_4_1_1; }
		
		//DefaultEnum
		public RuleCall getDefaultDefaultEnumEnumRuleCall_4_1_1_0() { return cDefaultDefaultEnumEnumRuleCall_4_1_1_0; }
		
		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class ImplAttrBooleanDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.ImplAttrBooleanDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBOOLEANKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAutoAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cAutoWITH_AUTOKeyword_1_0 = (Keyword)cAutoAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cTRUEKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cTrueParameterListAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cTrueParameterListImplementationDefParserRuleCall_2_2_1_0 = (RuleCall)cTrueParameterListAssignment_2_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_2_2 = (Keyword)cGroup_2_2.eContents().get(2);
		private final Assignment cTrueDescriptionAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cTrueDescriptionEStringParserRuleCall_2_3_0 = (RuleCall)cTrueDescriptionAssignment_2_3.eContents().get(0);
		private final Keyword cCommaKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Keyword cFALSEKeyword_2_5 = (Keyword)cGroup_2.eContents().get(5);
		private final Group cGroup_2_6 = (Group)cGroup_2.eContents().get(6);
		private final Keyword cLeftCurlyBracketKeyword_2_6_0 = (Keyword)cGroup_2_6.eContents().get(0);
		private final Assignment cFalseParameterListAssignment_2_6_1 = (Assignment)cGroup_2_6.eContents().get(1);
		private final RuleCall cFalseParameterListImplementationDefParserRuleCall_2_6_1_0 = (RuleCall)cFalseParameterListAssignment_2_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_6_2 = (Keyword)cGroup_2_6.eContents().get(2);
		private final Assignment cFalseDescriptionAssignment_2_7 = (Assignment)cGroup_2.eContents().get(7);
		private final RuleCall cFalseDescriptionEStringParserRuleCall_2_7_0 = (RuleCall)cFalseDescriptionAssignment_2_7.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2_8 = (Keyword)cGroup_2.eContents().get(8);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Alternatives cNameAlternatives_3_0 = (Alternatives)cNameAssignment_3.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_3_0_0 = (RuleCall)cNameAlternatives_3_0.eContents().get(0);
		private final RuleCall cNameObjectParserRuleCall_3_0_1 = (RuleCall)cNameAlternatives_3_0.eContents().get(1);
		private final Assignment cMultipleAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMultipleMultipleSpecifierParserRuleCall_4_0 = (RuleCall)cMultipleAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cEqualsSignKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Alternatives cAlternatives_5_1 = (Alternatives)cGroup_5.eContents().get(1);
		private final Assignment cValueAssignment_5_1_0 = (Assignment)cAlternatives_5_1.eContents().get(0);
		private final Alternatives cValueAlternatives_5_1_0_0 = (Alternatives)cValueAssignment_5_1_0.eContents().get(0);
		private final Keyword cValueTRUEKeyword_5_1_0_0_0 = (Keyword)cValueAlternatives_5_1_0_0.eContents().get(0);
		private final Keyword cValueFALSEKeyword_5_1_0_0_1 = (Keyword)cValueAlternatives_5_1_0_0.eContents().get(1);
		private final Assignment cDefaultAssignment_5_1_1 = (Assignment)cAlternatives_5_1.eContents().get(1);
		private final RuleCall cDefaultDefaultEnumEnumRuleCall_5_1_1_0 = (RuleCall)cDefaultAssignment_5_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ImplAttrBooleanDef:
		//	"BOOLEAN"
		//	auto?="WITH_AUTO"? ("[" "TRUE" ("{" trueParameterList+=ImplementationDef* "}")?
		//	trueDescription=EString? ","
		//	"FALSE" ("{" falseParameterList+=ImplementationDef* "}")? falseDescription=EString? "]")? name=(Name | Object)
		//	multiple?=MultipleSpecifier? ("=" (value=("TRUE" | "FALSE") | default=DefaultEnum))? ";";
		@Override public ParserRule getRule() { return rule; }
		
		//"BOOLEAN" auto?="WITH_AUTO"? ("[" "TRUE" ("{" trueParameterList+=ImplementationDef* "}")? trueDescription=EString? ","
		//"FALSE" ("{" falseParameterList+=ImplementationDef* "}")? falseDescription=EString? "]")? name=(Name | Object)
		//multiple?=MultipleSpecifier? ("=" (value=("TRUE" | "FALSE") | default=DefaultEnum))? ";"
		public Group getGroup() { return cGroup; }
		
		//"BOOLEAN"
		public Keyword getBOOLEANKeyword_0() { return cBOOLEANKeyword_0; }
		
		//auto?="WITH_AUTO"?
		public Assignment getAutoAssignment_1() { return cAutoAssignment_1; }
		
		//"WITH_AUTO"
		public Keyword getAutoWITH_AUTOKeyword_1_0() { return cAutoWITH_AUTOKeyword_1_0; }
		
		//("[" "TRUE" ("{" trueParameterList+=ImplementationDef* "}")? trueDescription=EString? "," "FALSE" ("{"
		//falseParameterList+=ImplementationDef* "}")? falseDescription=EString? "]")?
		public Group getGroup_2() { return cGroup_2; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_2_0() { return cLeftSquareBracketKeyword_2_0; }
		
		//"TRUE"
		public Keyword getTRUEKeyword_2_1() { return cTRUEKeyword_2_1; }
		
		//("{" trueParameterList+=ImplementationDef* "}")?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_2_0() { return cLeftCurlyBracketKeyword_2_2_0; }
		
		//trueParameterList+=ImplementationDef*
		public Assignment getTrueParameterListAssignment_2_2_1() { return cTrueParameterListAssignment_2_2_1; }
		
		//ImplementationDef
		public RuleCall getTrueParameterListImplementationDefParserRuleCall_2_2_1_0() { return cTrueParameterListImplementationDefParserRuleCall_2_2_1_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_2_2_2() { return cRightCurlyBracketKeyword_2_2_2; }
		
		//trueDescription=EString?
		public Assignment getTrueDescriptionAssignment_2_3() { return cTrueDescriptionAssignment_2_3; }
		
		//EString
		public RuleCall getTrueDescriptionEStringParserRuleCall_2_3_0() { return cTrueDescriptionEStringParserRuleCall_2_3_0; }
		
		//","
		public Keyword getCommaKeyword_2_4() { return cCommaKeyword_2_4; }
		
		//"FALSE"
		public Keyword getFALSEKeyword_2_5() { return cFALSEKeyword_2_5; }
		
		//("{" falseParameterList+=ImplementationDef* "}")?
		public Group getGroup_2_6() { return cGroup_2_6; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_6_0() { return cLeftCurlyBracketKeyword_2_6_0; }
		
		//falseParameterList+=ImplementationDef*
		public Assignment getFalseParameterListAssignment_2_6_1() { return cFalseParameterListAssignment_2_6_1; }
		
		//ImplementationDef
		public RuleCall getFalseParameterListImplementationDefParserRuleCall_2_6_1_0() { return cFalseParameterListImplementationDefParserRuleCall_2_6_1_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_2_6_2() { return cRightCurlyBracketKeyword_2_6_2; }
		
		//falseDescription=EString?
		public Assignment getFalseDescriptionAssignment_2_7() { return cFalseDescriptionAssignment_2_7; }
		
		//EString
		public RuleCall getFalseDescriptionEStringParserRuleCall_2_7_0() { return cFalseDescriptionEStringParserRuleCall_2_7_0; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_2_8() { return cRightSquareBracketKeyword_2_8; }
		
		//name=(Name | Object)
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//(Name | Object)
		public Alternatives getNameAlternatives_3_0() { return cNameAlternatives_3_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_3_0_0() { return cNameNameParserRuleCall_3_0_0; }
		
		//Object
		public RuleCall getNameObjectParserRuleCall_3_0_1() { return cNameObjectParserRuleCall_3_0_1; }
		
		//multiple?=MultipleSpecifier?
		public Assignment getMultipleAssignment_4() { return cMultipleAssignment_4; }
		
		//MultipleSpecifier
		public RuleCall getMultipleMultipleSpecifierParserRuleCall_4_0() { return cMultipleMultipleSpecifierParserRuleCall_4_0; }
		
		//("=" (value=("TRUE" | "FALSE") | default=DefaultEnum))?
		public Group getGroup_5() { return cGroup_5; }
		
		//"="
		public Keyword getEqualsSignKeyword_5_0() { return cEqualsSignKeyword_5_0; }
		
		//(value=("TRUE" | "FALSE") | default=DefaultEnum)
		public Alternatives getAlternatives_5_1() { return cAlternatives_5_1; }
		
		//value=("TRUE" | "FALSE")
		public Assignment getValueAssignment_5_1_0() { return cValueAssignment_5_1_0; }
		
		//("TRUE" | "FALSE")
		public Alternatives getValueAlternatives_5_1_0_0() { return cValueAlternatives_5_1_0_0; }
		
		//"TRUE"
		public Keyword getValueTRUEKeyword_5_1_0_0_0() { return cValueTRUEKeyword_5_1_0_0_0; }
		
		//"FALSE"
		public Keyword getValueFALSEKeyword_5_1_0_0_1() { return cValueFALSEKeyword_5_1_0_0_1; }
		
		//default=DefaultEnum
		public Assignment getDefaultAssignment_5_1_1() { return cDefaultAssignment_5_1_1; }
		
		//DefaultEnum
		public RuleCall getDefaultDefaultEnumEnumRuleCall_5_1_1_0() { return cDefaultDefaultEnumEnumRuleCall_5_1_1_0; }
		
		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}
	public class ImplAttrIdentiFierElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.ImplAttrIdentiFier");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIDENTIFIERKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAutoAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cAutoWITH_AUTOKeyword_1_0 = (Keyword)cAutoAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameAttributeNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueIDTerminalRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ImplAttrIdentiFier: // possibly change according to implementation grammar.
		//	"IDENTIFIER" auto?="WITH_AUTO"? name=AttributeName "=" value=ID ";";
		@Override public ParserRule getRule() { return rule; }
		
		//// possibly change according to implementation grammar.
		//"IDENTIFIER" auto?="WITH_AUTO"? name=AttributeName "=" value=ID ";"
		public Group getGroup() { return cGroup; }
		
		//// possibly change according to implementation grammar.
		//"IDENTIFIER"
		public Keyword getIDENTIFIERKeyword_0() { return cIDENTIFIERKeyword_0; }
		
		//auto?="WITH_AUTO"?
		public Assignment getAutoAssignment_1() { return cAutoAssignment_1; }
		
		//"WITH_AUTO"
		public Keyword getAutoWITH_AUTOKeyword_1_0() { return cAutoWITH_AUTOKeyword_1_0; }
		
		//name=AttributeName
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//AttributeName
		public RuleCall getNameAttributeNameParserRuleCall_2_0() { return cNameAttributeNameParserRuleCall_2_0; }
		
		//"="
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//value=ID
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }
		
		//ID
		public RuleCall getValueIDTerminalRuleCall_4_0() { return cValueIDTerminalRuleCall_4_0; }
		
		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class RangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.Range");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cValueNumberParserRuleCall_1_0_0 = (RuleCall)cValueAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Assignment cBeginAssignment_1_1_0 = (Assignment)cGroup_1_1.eContents().get(0);
		private final RuleCall cBeginNumberParserRuleCall_1_1_0_0 = (RuleCall)cBeginAssignment_1_1_0.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_1_1_1 = (Keyword)cGroup_1_1.eContents().get(1);
		private final Assignment cEndAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final RuleCall cEndNumberParserRuleCall_1_1_2_0 = (RuleCall)cEndAssignment_1_1_2.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cAlternatives_1.eContents().get(2);
		private final Assignment cNumbersAssignment_1_2_0 = (Assignment)cGroup_1_2.eContents().get(0);
		private final RuleCall cNumbersNumberParserRuleCall_1_2_0_0 = (RuleCall)cNumbersAssignment_1_2_0.eContents().get(0);
		private final Group cGroup_1_2_1 = (Group)cGroup_1_2.eContents().get(1);
		private final Keyword cCommaKeyword_1_2_1_0 = (Keyword)cGroup_1_2_1.eContents().get(0);
		private final Assignment cNumbersAssignment_1_2_1_1 = (Assignment)cGroup_1_2_1.eContents().get(1);
		private final RuleCall cNumbersNumberParserRuleCall_1_2_1_1_0 = (RuleCall)cNumbersAssignment_1_2_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Range:
		//	"[" (value=Number | begin=Number ".." end=Number | numbers+=Number ("," numbers+=Number)+) "]";
		@Override public ParserRule getRule() { return rule; }
		
		//"[" (value=Number | begin=Number ".." end=Number | numbers+=Number ("," numbers+=Number)+) "]"
		public Group getGroup() { return cGroup; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }
		
		//(value=Number | begin=Number ".." end=Number | numbers+=Number ("," numbers+=Number)+)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//value=Number
		public Assignment getValueAssignment_1_0() { return cValueAssignment_1_0; }
		
		//Number
		public RuleCall getValueNumberParserRuleCall_1_0_0() { return cValueNumberParserRuleCall_1_0_0; }
		
		//begin=Number ".." end=Number
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//begin=Number
		public Assignment getBeginAssignment_1_1_0() { return cBeginAssignment_1_1_0; }
		
		//Number
		public RuleCall getBeginNumberParserRuleCall_1_1_0_0() { return cBeginNumberParserRuleCall_1_1_0_0; }
		
		//".."
		public Keyword getFullStopFullStopKeyword_1_1_1() { return cFullStopFullStopKeyword_1_1_1; }
		
		//end=Number
		public Assignment getEndAssignment_1_1_2() { return cEndAssignment_1_1_2; }
		
		//Number
		public RuleCall getEndNumberParserRuleCall_1_1_2_0() { return cEndNumberParserRuleCall_1_1_2_0; }
		
		//numbers+=Number ("," numbers+=Number)+
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//numbers+=Number
		public Assignment getNumbersAssignment_1_2_0() { return cNumbersAssignment_1_2_0; }
		
		//Number
		public RuleCall getNumbersNumberParserRuleCall_1_2_0_0() { return cNumbersNumberParserRuleCall_1_2_0_0; }
		
		//("," numbers+=Number)+
		public Group getGroup_1_2_1() { return cGroup_1_2_1; }
		
		//","
		public Keyword getCommaKeyword_1_2_1_0() { return cCommaKeyword_1_2_1_0; }
		
		//numbers+=Number
		public Assignment getNumbersAssignment_1_2_1_1() { return cNumbersAssignment_1_2_1_1; }
		
		//Number
		public RuleCall getNumbersNumberParserRuleCall_1_2_1_1_0() { return cNumbersNumberParserRuleCall_1_2_1_1_0; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_2() { return cRightSquareBracketKeyword_2; }
	}
	public class EnumerationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.Enumeration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cListAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cListEnumeratorParserRuleCall_1_0 = (RuleCall)cListAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cListAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cListEnumeratorParserRuleCall_2_1_0 = (RuleCall)cListAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Enumeration:
		//	"[" list+=Enumerator ("," list+=Enumerator)* "]";
		@Override public ParserRule getRule() { return rule; }
		
		//"[" list+=Enumerator ("," list+=Enumerator)* "]"
		public Group getGroup() { return cGroup; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }
		
		//list+=Enumerator
		public Assignment getListAssignment_1() { return cListAssignment_1; }
		
		//Enumerator
		public RuleCall getListEnumeratorParserRuleCall_1_0() { return cListEnumeratorParserRuleCall_1_0; }
		
		//("," list+=Enumerator)*
		public Group getGroup_2() { return cGroup_2; }
		
		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }
		
		//list+=Enumerator
		public Assignment getListAssignment_2_1() { return cListAssignment_2_1; }
		
		//Enumerator
		public RuleCall getListEnumeratorParserRuleCall_2_1_0() { return cListEnumeratorParserRuleCall_2_1_0; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class EnumeratorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.Enumerator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cImplParameterListAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cImplParameterListImplementationDefParserRuleCall_1_1_0 = (RuleCall)cImplParameterListAssignment_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cDescriptionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDescriptionEStringParserRuleCall_2_0 = (RuleCall)cDescriptionAssignment_2.eContents().get(0);
		
		//Enumerator:
		//	name=Name ("{" implParameterList+=ImplementationDef* "}")? description=EString?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=Name ("{" implParameterList+=ImplementationDef* "}")? description=EString?
		public Group getGroup() { return cGroup; }
		
		//name=Name
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0() { return cNameNameParserRuleCall_0_0; }
		
		//("{" implParameterList+=ImplementationDef* "}")?
		public Group getGroup_1() { return cGroup_1; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//implParameterList+=ImplementationDef*
		public Assignment getImplParameterListAssignment_1_1() { return cImplParameterListAssignment_1_1; }
		
		//ImplementationDef
		public RuleCall getImplParameterListImplementationDefParserRuleCall_1_1_0() { return cImplParameterListImplementationDefParserRuleCall_1_1_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
		
		//description=EString?
		public Assignment getDescriptionAssignment_2() { return cDescriptionAssignment_2; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_2_0() { return cDescriptionEStringParserRuleCall_2_0; }
	}
	public class ImplRefDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.ImplRefDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeObjectRefTypeEnumEnumRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameAttributeNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cMultipleAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMultipleMultipleSpecifierParserRuleCall_2_0 = (RuleCall)cMultipleAssignment_2.eContents().get(0);
		private final Assignment cDescriptionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDescriptionEStringParserRuleCall_3_0 = (RuleCall)cDescriptionAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ImplRefDef:
		//	type=ObjectRefTypeEnum name=AttributeName multiple?=MultipleSpecifier? description=EString? ";";
		@Override public ParserRule getRule() { return rule; }
		
		//type=ObjectRefTypeEnum name=AttributeName multiple?=MultipleSpecifier? description=EString? ";"
		public Group getGroup() { return cGroup; }
		
		//type=ObjectRefTypeEnum
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//ObjectRefTypeEnum
		public RuleCall getTypeObjectRefTypeEnumEnumRuleCall_0_0() { return cTypeObjectRefTypeEnumEnumRuleCall_0_0; }
		
		//name=AttributeName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//AttributeName
		public RuleCall getNameAttributeNameParserRuleCall_1_0() { return cNameAttributeNameParserRuleCall_1_0; }
		
		//multiple?=MultipleSpecifier?
		public Assignment getMultipleAssignment_2() { return cMultipleAssignment_2; }
		
		//MultipleSpecifier
		public RuleCall getMultipleMultipleSpecifierParserRuleCall_2_0() { return cMultipleMultipleSpecifierParserRuleCall_2_0; }
		
		//description=EString?
		public Assignment getDescriptionAssignment_3() { return cDescriptionAssignment_3; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_3_0() { return cDescriptionEStringParserRuleCall_3_0; }
		
		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class MultipleSpecifierElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.MultipleSpecifier");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//MultipleSpecifier:
		//	"[" "]";
		@Override public ParserRule getRule() { return rule; }
		
		//"[" "]"
		public Group getGroup() { return cGroup; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_1() { return cRightSquareBracketKeyword_1; }
	}
	public class ApplicationDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.ApplicationDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCPUKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cObjectDefinitionListAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cObjectDefinitionListObjectDefinitionParserRuleCall_3_0 = (RuleCall)cObjectDefinitionListAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ApplicationDefinition:
		//	"CPU" name=Name "{" objectDefinitionList+=ObjectDefinition* "}" ";";
		@Override public ParserRule getRule() { return rule; }
		
		//"CPU" name=Name "{" objectDefinitionList+=ObjectDefinition* "}" ";"
		public Group getGroup() { return cGroup; }
		
		//"CPU"
		public Keyword getCPUKeyword_0() { return cCPUKeyword_0; }
		
		//name=Name
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_1_0() { return cNameNameParserRuleCall_1_0; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//objectDefinitionList+=ObjectDefinition*
		public Assignment getObjectDefinitionListAssignment_3() { return cObjectDefinitionListAssignment_3; }
		
		//ObjectDefinition
		public RuleCall getObjectDefinitionListObjectDefinitionParserRuleCall_3_0() { return cObjectDefinitionListObjectDefinitionParserRuleCall_3_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
		
		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class ObjectDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.ObjectDefinition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cLIBRARYKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cNameAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cNameNameParserRuleCall_0_1_0 = (RuleCall)cNameAssignment_0_1.eContents().get(0);
		private final Group cGroup_0_2 = (Group)cGroup_0.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_0_2_0 = (Keyword)cGroup_0_2.eContents().get(0);
		private final Assignment cLibraryListAssignment_0_2_1 = (Assignment)cGroup_0_2.eContents().get(1);
		private final RuleCall cLibraryListLibrayattributeParserRuleCall_0_2_1_0 = (RuleCall)cLibraryListAssignment_0_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_0_2_2 = (Keyword)cGroup_0_2.eContents().get(2);
		private final Keyword cSemicolonKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final RuleCall cApplicationRuleParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cObjectAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cObjectObjectParserRuleCall_2_0_0 = (RuleCall)cObjectAssignment_2_0.eContents().get(0);
		private final Assignment cNameAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cNameNameParserRuleCall_2_1_0 = (RuleCall)cNameAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cParameterListAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cParameterListAttributeParserRuleCall_2_2_1_0 = (RuleCall)cParameterListAssignment_2_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_2_2 = (Keyword)cGroup_2_2.eContents().get(2);
		private final Assignment cDescrptionAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cDescrptionEStringParserRuleCall_2_3_0 = (RuleCall)cDescrptionAssignment_2_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		
		//ObjectDefinition:
		//	"LIBRARY" name=Name ("{" LibraryList+=Librayattribute* "}")? ";" | ApplicationRule | object=Object name=Name ("{"
		//	parameterList+=Attribute* "}")? descrption=EString? ";";
		@Override public ParserRule getRule() { return rule; }
		
		//"LIBRARY" name=Name ("{" LibraryList+=Librayattribute* "}")? ";" | ApplicationRule | object=Object name=Name ("{"
		//parameterList+=Attribute* "}")? descrption=EString? ";"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//"LIBRARY" name=Name ("{" LibraryList+=Librayattribute* "}")? ";"
		public Group getGroup_0() { return cGroup_0; }
		
		//"LIBRARY"
		public Keyword getLIBRARYKeyword_0_0() { return cLIBRARYKeyword_0_0; }
		
		//name=Name
		public Assignment getNameAssignment_0_1() { return cNameAssignment_0_1; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_1_0() { return cNameNameParserRuleCall_0_1_0; }
		
		//("{" LibraryList+=Librayattribute* "}")?
		public Group getGroup_0_2() { return cGroup_0_2; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_0_2_0() { return cLeftCurlyBracketKeyword_0_2_0; }
		
		//LibraryList+=Librayattribute*
		public Assignment getLibraryListAssignment_0_2_1() { return cLibraryListAssignment_0_2_1; }
		
		//Librayattribute
		public RuleCall getLibraryListLibrayattributeParserRuleCall_0_2_1_0() { return cLibraryListLibrayattributeParserRuleCall_0_2_1_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_0_2_2() { return cRightCurlyBracketKeyword_0_2_2; }
		
		//";"
		public Keyword getSemicolonKeyword_0_3() { return cSemicolonKeyword_0_3; }
		
		//ApplicationRule
		public RuleCall getApplicationRuleParserRuleCall_1() { return cApplicationRuleParserRuleCall_1; }
		
		//object=Object name=Name ("{" parameterList+=Attribute* "}")? descrption=EString? ";"
		public Group getGroup_2() { return cGroup_2; }
		
		//object=Object
		public Assignment getObjectAssignment_2_0() { return cObjectAssignment_2_0; }
		
		//Object
		public RuleCall getObjectObjectParserRuleCall_2_0_0() { return cObjectObjectParserRuleCall_2_0_0; }
		
		//name=Name
		public Assignment getNameAssignment_2_1() { return cNameAssignment_2_1; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_1_0() { return cNameNameParserRuleCall_2_1_0; }
		
		//("{" parameterList+=Attribute* "}")?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_2_0() { return cLeftCurlyBracketKeyword_2_2_0; }
		
		//parameterList+=Attribute*
		public Assignment getParameterListAssignment_2_2_1() { return cParameterListAssignment_2_2_1; }
		
		//Attribute
		public RuleCall getParameterListAttributeParserRuleCall_2_2_1_0() { return cParameterListAttributeParserRuleCall_2_2_1_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_2_2_2() { return cRightCurlyBracketKeyword_2_2_2; }
		
		//descrption=EString?
		public Assignment getDescrptionAssignment_2_3() { return cDescrptionAssignment_2_3; }
		
		//EString
		public RuleCall getDescrptionEStringParserRuleCall_2_3_0() { return cDescrptionEStringParserRuleCall_2_3_0; }
		
		//";"
		public Keyword getSemicolonKeyword_2_4() { return cSemicolonKeyword_2_4; }
	}
	public class LibrayattributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.Librayattribute");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cPATHKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cDescriptionAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cDescriptionEStringParserRuleCall_0_2_0 = (RuleCall)cDescriptionAssignment_0_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cCHEADERKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cDescriptionAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cDescriptionEStringParserRuleCall_1_2_0 = (RuleCall)cDescriptionAssignment_1_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cCFILEKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cDescriptionAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cDescriptionEStringParserRuleCall_2_2_0 = (RuleCall)cDescriptionAssignment_2_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		
		//Librayattribute:
		//	"PATH" "=" description=EString ";" |
		//	"CHEADER" "=" description=EString ";" |
		//	"CFILE" "=" description=EString ";";
		@Override public ParserRule getRule() { return rule; }
		
		//"PATH" "=" description=EString ";" | "CHEADER" "=" description=EString ";" | "CFILE" "=" description=EString ";"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//"PATH" "=" description=EString ";"
		public Group getGroup_0() { return cGroup_0; }
		
		//"PATH"
		public Keyword getPATHKeyword_0_0() { return cPATHKeyword_0_0; }
		
		//"="
		public Keyword getEqualsSignKeyword_0_1() { return cEqualsSignKeyword_0_1; }
		
		//description=EString
		public Assignment getDescriptionAssignment_0_2() { return cDescriptionAssignment_0_2; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_0_2_0() { return cDescriptionEStringParserRuleCall_0_2_0; }
		
		//";"
		public Keyword getSemicolonKeyword_0_3() { return cSemicolonKeyword_0_3; }
		
		//"CHEADER" "=" description=EString ";"
		public Group getGroup_1() { return cGroup_1; }
		
		//"CHEADER"
		public Keyword getCHEADERKeyword_1_0() { return cCHEADERKeyword_1_0; }
		
		//"="
		public Keyword getEqualsSignKeyword_1_1() { return cEqualsSignKeyword_1_1; }
		
		//description=EString
		public Assignment getDescriptionAssignment_1_2() { return cDescriptionAssignment_1_2; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_1_2_0() { return cDescriptionEStringParserRuleCall_1_2_0; }
		
		//";"
		public Keyword getSemicolonKeyword_1_3() { return cSemicolonKeyword_1_3; }
		
		//"CFILE" "=" description=EString ";"
		public Group getGroup_2() { return cGroup_2; }
		
		//"CFILE"
		public Keyword getCFILEKeyword_2_0() { return cCFILEKeyword_2_0; }
		
		//"="
		public Keyword getEqualsSignKeyword_2_1() { return cEqualsSignKeyword_2_1; }
		
		//description=EString
		public Assignment getDescriptionAssignment_2_2() { return cDescriptionAssignment_2_2; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_2_2_0() { return cDescriptionEStringParserRuleCall_2_2_0; }
		
		//";"
		public Keyword getSemicolonKeyword_2_3() { return cSemicolonKeyword_2_3; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameAttributeNameParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueAttributeValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		private final Assignment cDescriptionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDescriptionEStringParserRuleCall_3_0 = (RuleCall)cDescriptionAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		/// ************************ 
		//object=Object name=Name (BLOCKBEGIN (parameterList+=Attribute
		//   )* (reObjectDefinition=ReObjectDefinition)* BLOCKEND)? (descrption=EString)? SEMICOLON;
		//
		//ReObjectDefinition://
		//   reobject=ReObject name=Name (BLOCKBEGIN (parameterList+=Attribute)* BLOCKEND)? (descrption=EString)? SEMICOLON;
		//Attribute:
		//   name=AttributeName "=" value=AttributeValue (description=EString)? SEMICOLON;
		//
		// ************************* / Attribute:
		//	name=AttributeName "="? value=AttributeValue description=EString? ";";
		@Override public ParserRule getRule() { return rule; }
		
		//name=AttributeName "="? value=AttributeValue description=EString? ";"
		public Group getGroup() { return cGroup; }
		
		//name=AttributeName
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//AttributeName
		public RuleCall getNameAttributeNameParserRuleCall_0_0() { return cNameAttributeNameParserRuleCall_0_0; }
		
		//"="?
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//value=AttributeValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//AttributeValue
		public RuleCall getValueAttributeValueParserRuleCall_2_0() { return cValueAttributeValueParserRuleCall_2_0; }
		
		//description=EString?
		public Assignment getDescriptionAssignment_3() { return cDescriptionAssignment_3; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_3_0() { return cDescriptionEStringParserRuleCall_3_0; }
		
		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class AttributeNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.AttributeName");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cValueAlternatives_0 = (Alternatives)cValueAssignment.eContents().get(0);
		private final RuleCall cValueNameParserRuleCall_0_0 = (RuleCall)cValueAlternatives_0.eContents().get(0);
		private final RuleCall cValueObjectParserRuleCall_0_1 = (RuleCall)cValueAlternatives_0.eContents().get(1);
		
		//AttributeName:
		//	value=(Name | Object);
		@Override public ParserRule getRule() { return rule; }
		
		//value=(Name | Object)
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//(Name | Object)
		public Alternatives getValueAlternatives_0() { return cValueAlternatives_0; }
		
		//Name
		public RuleCall getValueNameParserRuleCall_0_0() { return cValueNameParserRuleCall_0_0; }
		
		//Object
		public RuleCall getValueObjectParserRuleCall_0_1() { return cValueObjectParserRuleCall_0_1; }
	}
	public class AttributeValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.AttributeValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNameAttributeValueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBooleanAttributeValueParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cNumberAttributeValueParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cFloatAttributeValueParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cStringAttributeValueParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cAutoAttributeValueParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//AttributeValue:
		//	NameAttributeValue | BooleanAttributeValue | NumberAttributeValue | FloatAttributeValue | StringAttributeValue |
		//	AutoAttributeValue;
		@Override public ParserRule getRule() { return rule; }
		
		//NameAttributeValue | BooleanAttributeValue | NumberAttributeValue | FloatAttributeValue | StringAttributeValue |
		//AutoAttributeValue
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NameAttributeValue
		public RuleCall getNameAttributeValueParserRuleCall_0() { return cNameAttributeValueParserRuleCall_0; }
		
		//BooleanAttributeValue
		public RuleCall getBooleanAttributeValueParserRuleCall_1() { return cBooleanAttributeValueParserRuleCall_1; }
		
		//NumberAttributeValue
		public RuleCall getNumberAttributeValueParserRuleCall_2() { return cNumberAttributeValueParserRuleCall_2; }
		
		//FloatAttributeValue
		public RuleCall getFloatAttributeValueParserRuleCall_3() { return cFloatAttributeValueParserRuleCall_3; }
		
		//StringAttributeValue
		public RuleCall getStringAttributeValueParserRuleCall_4() { return cStringAttributeValueParserRuleCall_4; }
		
		//AutoAttributeValue
		public RuleCall getAutoAttributeValueParserRuleCall_5() { return cAutoAttributeValueParserRuleCall_5; }
	}
	public class NameAttributeValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.NameAttributeValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueNameParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//NameAttributeValue:
		//	value=Name;
		@Override public ParserRule getRule() { return rule; }
		
		//value=Name
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//Name
		public RuleCall getValueNameParserRuleCall_0() { return cValueNameParserRuleCall_0; }
	}
	public class BooleanAttributeValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.BooleanAttributeValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cValueAlternatives_0 = (Alternatives)cValueAssignment.eContents().get(0);
		private final Keyword cValueTRUEKeyword_0_0 = (Keyword)cValueAlternatives_0.eContents().get(0);
		private final Keyword cValueFALSEKeyword_0_1 = (Keyword)cValueAlternatives_0.eContents().get(1);
		
		//BooleanAttributeValue:
		//	value=("TRUE" | "FALSE");
		@Override public ParserRule getRule() { return rule; }
		
		//value=("TRUE" | "FALSE")
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//("TRUE" | "FALSE")
		public Alternatives getValueAlternatives_0() { return cValueAlternatives_0; }
		
		//"TRUE"
		public Keyword getValueTRUEKeyword_0_0() { return cValueTRUEKeyword_0_0; }
		
		//"FALSE"
		public Keyword getValueFALSEKeyword_0_1() { return cValueFALSEKeyword_0_1; }
	}
	public class NumberAttributeValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.NumberAttributeValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueNumberParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//NumberAttributeValue:
		//	value=Number;
		@Override public ParserRule getRule() { return rule; }
		
		//value=Number
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//Number
		public RuleCall getValueNumberParserRuleCall_0() { return cValueNumberParserRuleCall_0; }
	}
	public class FloatAttributeValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.FloatAttributeValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueEFloatParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//FloatAttributeValue:
		//	value=EFloat;
		@Override public ParserRule getRule() { return rule; }
		
		//value=EFloat
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//EFloat
		public RuleCall getValueEFloatParserRuleCall_0() { return cValueEFloatParserRuleCall_0; }
	}
	public class StringAttributeValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.StringAttributeValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueEStringParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//StringAttributeValue:
		//	value=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//value=EString
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_0() { return cValueEStringParserRuleCall_0; }
	}
	public class AutoAttributeValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.AutoAttributeValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cValueAUTOKeyword_0 = (Keyword)cValueAssignment.eContents().get(0);
		
		//AutoAttributeValue:
		//	value?="AUTO";
		@Override public ParserRule getRule() { return rule; }
		
		//value?="AUTO"
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//"AUTO"
		public Keyword getValueAUTOKeyword_0() { return cValueAUTOKeyword_0; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.EString");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//EString:
		//	STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}
	public class NumberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.Number");
		private final RuleCall cT_NUMBERTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Number ecore::EInt:
		//	T_NUMBER
		@Override public ParserRule getRule() { return rule; }
		
		//T_NUMBER
		public RuleCall getT_NUMBERTerminalRuleCall() { return cT_NUMBERTerminalRuleCall; }
	}
	public class EFloatElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.EFloat");
		private final RuleCall cT_FLOATTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//EFloat ecore::EFloatObject:
		//	T_FLOAT
		@Override public ParserRule getRule() { return rule; }
		
		//T_FLOAT
		public RuleCall getT_FLOATTerminalRuleCall() { return cT_FLOATTerminalRuleCall; }
	}
	public class NameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.Name");
		private final RuleCall cIDTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Name:
		//	ID;
		@Override public ParserRule getRule() { return rule; }
		
		//ID
		public RuleCall getIDTerminalRuleCall() { return cIDTerminalRuleCall; }
	}
	
	public class ApplicationParamEnumElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.ApplicationParamEnum");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCOREEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCORECOREKeyword_0_0 = (Keyword)cCOREEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cALARMEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cALARMALARMKeyword_1_0 = (Keyword)cALARMEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCOUNTEREnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCOUNTERCOUNTERKeyword_2_0 = (Keyword)cCOUNTEREnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cRESOURCEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cRESOURCERESOURCEKeyword_3_0 = (Keyword)cRESOURCEEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cTASKEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cTASKTASKKeyword_4_0 = (Keyword)cTASKEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cISREnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cISRISRKeyword_5_0 = (Keyword)cISREnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cMESSAGEEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cMESSAGEMESSAGEKeyword_6_0 = (Keyword)cMESSAGEEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cSCHEDULETABLEEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cSCHEDULETABLESCHEDULETABLEKeyword_7_0 = (Keyword)cSCHEDULETABLEEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cIOCEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cIOCIOCKeyword_8_0 = (Keyword)cIOCEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cERRORHOOKEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cERRORHOOKERRORHOOKKeyword_9_0 = (Keyword)cERRORHOOKEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cSHUTDOWNHOOKEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cSHUTDOWNHOOKSHUTDOWNHOOKKeyword_10_0 = (Keyword)cSHUTDOWNHOOKEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cSTARTUPHOOKEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cSTARTUPHOOKSTARTUPHOOKKeyword_11_0 = (Keyword)cSTARTUPHOOKEnumLiteralDeclaration_11.eContents().get(0);
		
		//enum ApplicationParamEnum:
		//	CORE | ALARM | COUNTER | RESOURCE | TASK | ISR | MESSAGE |
		//	SCHEDULETABLE | IOC | ERRORHOOK | SHUTDOWNHOOK | STARTUPHOOK;
		public EnumRule getRule() { return rule; }
		
		//CORE | ALARM | COUNTER | RESOURCE | TASK | ISR | MESSAGE | SCHEDULETABLE | IOC | ERRORHOOK | SHUTDOWNHOOK | STARTUPHOOK
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CORE
		public EnumLiteralDeclaration getCOREEnumLiteralDeclaration_0() { return cCOREEnumLiteralDeclaration_0; }
		
		//"CORE"
		public Keyword getCORECOREKeyword_0_0() { return cCORECOREKeyword_0_0; }
		
		//ALARM
		public EnumLiteralDeclaration getALARMEnumLiteralDeclaration_1() { return cALARMEnumLiteralDeclaration_1; }
		
		//"ALARM"
		public Keyword getALARMALARMKeyword_1_0() { return cALARMALARMKeyword_1_0; }
		
		//COUNTER
		public EnumLiteralDeclaration getCOUNTEREnumLiteralDeclaration_2() { return cCOUNTEREnumLiteralDeclaration_2; }
		
		//"COUNTER"
		public Keyword getCOUNTERCOUNTERKeyword_2_0() { return cCOUNTERCOUNTERKeyword_2_0; }
		
		//RESOURCE
		public EnumLiteralDeclaration getRESOURCEEnumLiteralDeclaration_3() { return cRESOURCEEnumLiteralDeclaration_3; }
		
		//"RESOURCE"
		public Keyword getRESOURCERESOURCEKeyword_3_0() { return cRESOURCERESOURCEKeyword_3_0; }
		
		//TASK
		public EnumLiteralDeclaration getTASKEnumLiteralDeclaration_4() { return cTASKEnumLiteralDeclaration_4; }
		
		//"TASK"
		public Keyword getTASKTASKKeyword_4_0() { return cTASKTASKKeyword_4_0; }
		
		//ISR
		public EnumLiteralDeclaration getISREnumLiteralDeclaration_5() { return cISREnumLiteralDeclaration_5; }
		
		//"ISR"
		public Keyword getISRISRKeyword_5_0() { return cISRISRKeyword_5_0; }
		
		//MESSAGE
		public EnumLiteralDeclaration getMESSAGEEnumLiteralDeclaration_6() { return cMESSAGEEnumLiteralDeclaration_6; }
		
		//"MESSAGE"
		public Keyword getMESSAGEMESSAGEKeyword_6_0() { return cMESSAGEMESSAGEKeyword_6_0; }
		
		//SCHEDULETABLE
		public EnumLiteralDeclaration getSCHEDULETABLEEnumLiteralDeclaration_7() { return cSCHEDULETABLEEnumLiteralDeclaration_7; }
		
		//"SCHEDULETABLE"
		public Keyword getSCHEDULETABLESCHEDULETABLEKeyword_7_0() { return cSCHEDULETABLESCHEDULETABLEKeyword_7_0; }
		
		//IOC
		public EnumLiteralDeclaration getIOCEnumLiteralDeclaration_8() { return cIOCEnumLiteralDeclaration_8; }
		
		//"IOC"
		public Keyword getIOCIOCKeyword_8_0() { return cIOCIOCKeyword_8_0; }
		
		//ERRORHOOK
		public EnumLiteralDeclaration getERRORHOOKEnumLiteralDeclaration_9() { return cERRORHOOKEnumLiteralDeclaration_9; }
		
		//"ERRORHOOK"
		public Keyword getERRORHOOKERRORHOOKKeyword_9_0() { return cERRORHOOKERRORHOOKKeyword_9_0; }
		
		//SHUTDOWNHOOK
		public EnumLiteralDeclaration getSHUTDOWNHOOKEnumLiteralDeclaration_10() { return cSHUTDOWNHOOKEnumLiteralDeclaration_10; }
		
		//"SHUTDOWNHOOK"
		public Keyword getSHUTDOWNHOOKSHUTDOWNHOOKKeyword_10_0() { return cSHUTDOWNHOOKSHUTDOWNHOOKKeyword_10_0; }
		
		//STARTUPHOOK
		public EnumLiteralDeclaration getSTARTUPHOOKEnumLiteralDeclaration_11() { return cSTARTUPHOOKEnumLiteralDeclaration_11; }
		
		//"STARTUPHOOK"
		public Keyword getSTARTUPHOOKSTARTUPHOOKKeyword_11_0() { return cSTARTUPHOOKSTARTUPHOOKKeyword_11_0; }
	}
	public class TimingProtectionParamEnumElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.TimingProtectionParamEnum");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMAXALLINTERRUPTLOCKTIMEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMAXALLINTERRUPTLOCKTIMEMAXALLINTERRUPTLOCKTIMEKeyword_0_0 = (Keyword)cMAXALLINTERRUPTLOCKTIMEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMAXOSINTERRUPTLOCKTIMEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMAXOSINTERRUPTLOCKTIMEMAXOSINTERRUPTLOCKTIMEKeyword_1_0 = (Keyword)cMAXOSINTERRUPTLOCKTIMEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cEXECUTIONTIMEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cEXECUTIONTIMEEXECUTIONTIMEKeyword_2_0 = (Keyword)cEXECUTIONTIMEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cTIMEFRAMEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cTIMEFRAMETIMEFRAMEKeyword_3_0 = (Keyword)cTIMEFRAMEEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum TimingProtectionParamEnum:
		//	MAXALLINTERRUPTLOCKTIME | MAXOSINTERRUPTLOCKTIME | EXECUTIONTIME | TIMEFRAME;
		public EnumRule getRule() { return rule; }
		
		//MAXALLINTERRUPTLOCKTIME | MAXOSINTERRUPTLOCKTIME | EXECUTIONTIME | TIMEFRAME
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MAXALLINTERRUPTLOCKTIME
		public EnumLiteralDeclaration getMAXALLINTERRUPTLOCKTIMEEnumLiteralDeclaration_0() { return cMAXALLINTERRUPTLOCKTIMEEnumLiteralDeclaration_0; }
		
		//"MAXALLINTERRUPTLOCKTIME"
		public Keyword getMAXALLINTERRUPTLOCKTIMEMAXALLINTERRUPTLOCKTIMEKeyword_0_0() { return cMAXALLINTERRUPTLOCKTIMEMAXALLINTERRUPTLOCKTIMEKeyword_0_0; }
		
		//MAXOSINTERRUPTLOCKTIME
		public EnumLiteralDeclaration getMAXOSINTERRUPTLOCKTIMEEnumLiteralDeclaration_1() { return cMAXOSINTERRUPTLOCKTIMEEnumLiteralDeclaration_1; }
		
		//"MAXOSINTERRUPTLOCKTIME"
		public Keyword getMAXOSINTERRUPTLOCKTIMEMAXOSINTERRUPTLOCKTIMEKeyword_1_0() { return cMAXOSINTERRUPTLOCKTIMEMAXOSINTERRUPTLOCKTIMEKeyword_1_0; }
		
		//EXECUTIONTIME
		public EnumLiteralDeclaration getEXECUTIONTIMEEnumLiteralDeclaration_2() { return cEXECUTIONTIMEEnumLiteralDeclaration_2; }
		
		//"EXECUTIONTIME"
		public Keyword getEXECUTIONTIMEEXECUTIONTIMEKeyword_2_0() { return cEXECUTIONTIMEEXECUTIONTIMEKeyword_2_0; }
		
		//TIMEFRAME
		public EnumLiteralDeclaration getTIMEFRAMEEnumLiteralDeclaration_3() { return cTIMEFRAMEEnumLiteralDeclaration_3; }
		
		//"TIMEFRAME"
		public Keyword getTIMEFRAMETIMEFRAMEKeyword_3_0() { return cTIMEFRAMETIMEFRAMEKeyword_3_0; }
	}
	public class IsrParamEnumElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.IsrParamEnum");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCATEGORYEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCATEGORYCATEGORYKeyword_0_0 = (Keyword)cCATEGORYEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cRESOURCEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cRESOURCERESOURCEKeyword_1_0 = (Keyword)cRESOURCEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMESSAGEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMESSAGEMESSAGEKeyword_2_0 = (Keyword)cMESSAGEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cPRIORITYEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cPRIORITYPRIORITYKeyword_3_0 = (Keyword)cPRIORITYEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cENTRYEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cENTRYENTRYKeyword_4_0 = (Keyword)cENTRYEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cSTACKSIZEEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cSTACKSIZESTACKSIZEKeyword_5_0 = (Keyword)cSTACKSIZEEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cSOURCEEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cSOURCESOURCEKeyword_6_0 = (Keyword)cSOURCEEnumLiteralDeclaration_6.eContents().get(0);
		
		//enum IsrParamEnum:
		//	CATEGORY | RESOURCE | MESSAGE | PRIORITY | ENTRY | STACKSIZE | SOURCE;
		public EnumRule getRule() { return rule; }
		
		//CATEGORY | RESOURCE | MESSAGE | PRIORITY | ENTRY | STACKSIZE | SOURCE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CATEGORY
		public EnumLiteralDeclaration getCATEGORYEnumLiteralDeclaration_0() { return cCATEGORYEnumLiteralDeclaration_0; }
		
		//"CATEGORY"
		public Keyword getCATEGORYCATEGORYKeyword_0_0() { return cCATEGORYCATEGORYKeyword_0_0; }
		
		//RESOURCE
		public EnumLiteralDeclaration getRESOURCEEnumLiteralDeclaration_1() { return cRESOURCEEnumLiteralDeclaration_1; }
		
		//"RESOURCE"
		public Keyword getRESOURCERESOURCEKeyword_1_0() { return cRESOURCERESOURCEKeyword_1_0; }
		
		//MESSAGE
		public EnumLiteralDeclaration getMESSAGEEnumLiteralDeclaration_2() { return cMESSAGEEnumLiteralDeclaration_2; }
		
		//"MESSAGE"
		public Keyword getMESSAGEMESSAGEKeyword_2_0() { return cMESSAGEMESSAGEKeyword_2_0; }
		
		//PRIORITY
		public EnumLiteralDeclaration getPRIORITYEnumLiteralDeclaration_3() { return cPRIORITYEnumLiteralDeclaration_3; }
		
		//"PRIORITY"
		public Keyword getPRIORITYPRIORITYKeyword_3_0() { return cPRIORITYPRIORITYKeyword_3_0; }
		
		//ENTRY
		public EnumLiteralDeclaration getENTRYEnumLiteralDeclaration_4() { return cENTRYEnumLiteralDeclaration_4; }
		
		//"ENTRY"
		public Keyword getENTRYENTRYKeyword_4_0() { return cENTRYENTRYKeyword_4_0; }
		
		//STACKSIZE
		public EnumLiteralDeclaration getSTACKSIZEEnumLiteralDeclaration_5() { return cSTACKSIZEEnumLiteralDeclaration_5; }
		
		//"STACKSIZE"
		public Keyword getSTACKSIZESTACKSIZEKeyword_5_0() { return cSTACKSIZESTACKSIZEKeyword_5_0; }
		
		//SOURCE
		public EnumLiteralDeclaration getSOURCEEnumLiteralDeclaration_6() { return cSOURCEEnumLiteralDeclaration_6; }
		
		//"SOURCE"
		public Keyword getSOURCESOURCEKeyword_6_0() { return cSOURCESOURCEKeyword_6_0; }
	}
	public class IntTypeEnumElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.IntTypeEnum");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cUINT32EnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cUINT32UINT32Keyword_0_0 = (Keyword)cUINT32EnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cINT32EnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cINT32INT32Keyword_1_0 = (Keyword)cINT32EnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cUINT64EnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cUINT64UINT64Keyword_2_0 = (Keyword)cUINT64EnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cINT64EnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cINT64INT64Keyword_3_0 = (Keyword)cINT64EnumLiteralDeclaration_3.eContents().get(0);
		
		//enum IntTypeEnum:
		//	UINT32 | INT32 | UINT64 | INT64;
		public EnumRule getRule() { return rule; }
		
		//UINT32 | INT32 | UINT64 | INT64
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//UINT32
		public EnumLiteralDeclaration getUINT32EnumLiteralDeclaration_0() { return cUINT32EnumLiteralDeclaration_0; }
		
		//"UINT32"
		public Keyword getUINT32UINT32Keyword_0_0() { return cUINT32UINT32Keyword_0_0; }
		
		//INT32
		public EnumLiteralDeclaration getINT32EnumLiteralDeclaration_1() { return cINT32EnumLiteralDeclaration_1; }
		
		//"INT32"
		public Keyword getINT32INT32Keyword_1_0() { return cINT32INT32Keyword_1_0; }
		
		//UINT64
		public EnumLiteralDeclaration getUINT64EnumLiteralDeclaration_2() { return cUINT64EnumLiteralDeclaration_2; }
		
		//"UINT64"
		public Keyword getUINT64UINT64Keyword_2_0() { return cUINT64UINT64Keyword_2_0; }
		
		//INT64
		public EnumLiteralDeclaration getINT64EnumLiteralDeclaration_3() { return cINT64EnumLiteralDeclaration_3; }
		
		//"INT64"
		public Keyword getINT64INT64Keyword_3_0() { return cINT64INT64Keyword_3_0; }
	}
	public class DefaultEnumElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.DefaultEnum");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNO_DEFAULTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNO_DEFAULTNO_DEFAULTKeyword_0_0 = (Keyword)cNO_DEFAULTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cAUTOEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cAUTOAUTOKeyword_1_0 = (Keyword)cAUTOEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum DefaultEnum:
		//	NO_DEFAULT | AUTO;
		public EnumRule getRule() { return rule; }
		
		//NO_DEFAULT | AUTO
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NO_DEFAULT
		public EnumLiteralDeclaration getNO_DEFAULTEnumLiteralDeclaration_0() { return cNO_DEFAULTEnumLiteralDeclaration_0; }
		
		//"NO_DEFAULT"
		public Keyword getNO_DEFAULTNO_DEFAULTKeyword_0_0() { return cNO_DEFAULTNO_DEFAULTKeyword_0_0; }
		
		//AUTO
		public EnumLiteralDeclaration getAUTOEnumLiteralDeclaration_1() { return cAUTOEnumLiteralDeclaration_1; }
		
		//"AUTO"
		public Keyword getAUTOAUTOKeyword_1_0() { return cAUTOAUTOKeyword_1_0; }
	}
	public class ObjectRefTypeEnumElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.ObjectRefTypeEnum");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cOS_TYPEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cOS_TYPEOS_TYPEKeyword_0_0 = (Keyword)cOS_TYPEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cTASK_TYPEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cTASK_TYPETASK_TYPEKeyword_1_0 = (Keyword)cTASK_TYPEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCOUNTER_TYPEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCOUNTER_TYPECOUNTER_TYPEKeyword_2_0 = (Keyword)cCOUNTER_TYPEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cALARM_TYPEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cALARM_TYPEALARM_TYPEKeyword_3_0 = (Keyword)cALARM_TYPEEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cRESOURCE_TYPEEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cRESOURCE_TYPERESOURCE_TYPEKeyword_4_0 = (Keyword)cRESOURCE_TYPEEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cEVENT_TYPEEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cEVENT_TYPEEVENT_TYPEKeyword_5_0 = (Keyword)cEVENT_TYPEEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cISR_TYPEEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cISR_TYPEISR_TYPEKeyword_6_0 = (Keyword)cISR_TYPEEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cMESSAGE_TYPEEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cMESSAGE_TYPEMESSAGE_TYPEKeyword_7_0 = (Keyword)cMESSAGE_TYPEEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cCOM_TYPEEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cCOM_TYPECOM_TYPEKeyword_8_0 = (Keyword)cCOM_TYPEEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cNM_TYPEEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cNM_TYPENM_TYPEKeyword_9_0 = (Keyword)cNM_TYPEEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cAPPMODE_TYPEEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cAPPMODE_TYPEAPPMODE_TYPEKeyword_10_0 = (Keyword)cAPPMODE_TYPEEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cIPDU_TYPEEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cIPDU_TYPEIPDU_TYPEKeyword_11_0 = (Keyword)cIPDU_TYPEEnumLiteralDeclaration_11.eContents().get(0);
		private final EnumLiteralDeclaration cNETWORKMESSAGE_TYPEEnumLiteralDeclaration_12 = (EnumLiteralDeclaration)cAlternatives.eContents().get(12);
		private final Keyword cNETWORKMESSAGE_TYPENETWORKMESSAGE_TYPEKeyword_12_0 = (Keyword)cNETWORKMESSAGE_TYPEEnumLiteralDeclaration_12.eContents().get(0);
		private final EnumLiteralDeclaration cAPPLICATION_TYPEEnumLiteralDeclaration_13 = (EnumLiteralDeclaration)cAlternatives.eContents().get(13);
		private final Keyword cAPPLICATION_TYPEAPPLICATION_TYPEKeyword_13_0 = (Keyword)cAPPLICATION_TYPEEnumLiteralDeclaration_13.eContents().get(0);
		private final EnumLiteralDeclaration cMEMOTY_PROTECTION_TYPEEnumLiteralDeclaration_14 = (EnumLiteralDeclaration)cAlternatives.eContents().get(14);
		private final Keyword cMEMOTY_PROTECTION_TYPEMEMOTY_PROTECTION_TYPEKeyword_14_0 = (Keyword)cMEMOTY_PROTECTION_TYPEEnumLiteralDeclaration_14.eContents().get(0);
		private final EnumLiteralDeclaration cSPINLOCK_TYPEEnumLiteralDeclaration_15 = (EnumLiteralDeclaration)cAlternatives.eContents().get(15);
		private final Keyword cSPINLOCK_TYPESPINLOCK_TYPEKeyword_15_0 = (Keyword)cSPINLOCK_TYPEEnumLiteralDeclaration_15.eContents().get(0);
		private final EnumLiteralDeclaration cSCHEDULETABLE_TYPEEnumLiteralDeclaration_16 = (EnumLiteralDeclaration)cAlternatives.eContents().get(16);
		private final Keyword cSCHEDULETABLE_TYPESCHEDULETABLE_TYPEKeyword_16_0 = (Keyword)cSCHEDULETABLE_TYPEEnumLiteralDeclaration_16.eContents().get(0);
		private final EnumLiteralDeclaration cIOC_TYPEEnumLiteralDeclaration_17 = (EnumLiteralDeclaration)cAlternatives.eContents().get(17);
		private final Keyword cIOC_TYPEIOC_TYPEKeyword_17_0 = (Keyword)cIOC_TYPEEnumLiteralDeclaration_17.eContents().get(0);
		private final EnumLiteralDeclaration cAPICONFIG_TYPEEnumLiteralDeclaration_18 = (EnumLiteralDeclaration)cAlternatives.eContents().get(18);
		private final Keyword cAPICONFIG_TYPEAPICONFIG_TYPEKeyword_18_0 = (Keyword)cAPICONFIG_TYPEEnumLiteralDeclaration_18.eContents().get(0);
		private final EnumLiteralDeclaration cLIBRARY_TYPEEnumLiteralDeclaration_19 = (EnumLiteralDeclaration)cAlternatives.eContents().get(19);
		private final Keyword cLIBRARY_TYPELIBRARY_TYPEKeyword_19_0 = (Keyword)cLIBRARY_TYPEEnumLiteralDeclaration_19.eContents().get(0);
		
		//enum ObjectRefTypeEnum:
		//	OS_TYPE | TASK_TYPE | COUNTER_TYPE | ALARM_TYPE | RESOURCE_TYPE |
		//	EVENT_TYPE | ISR_TYPE | MESSAGE_TYPE | COM_TYPE | NM_TYPE |
		//	APPMODE_TYPE | IPDU_TYPE | NETWORKMESSAGE_TYPE | APPLICATION_TYPE | MEMOTY_PROTECTION_TYPE |
		//	SPINLOCK_TYPE | SCHEDULETABLE_TYPE | IOC_TYPE | APICONFIG_TYPE | LIBRARY_TYPE;
		public EnumRule getRule() { return rule; }
		
		//OS_TYPE | TASK_TYPE | COUNTER_TYPE | ALARM_TYPE | RESOURCE_TYPE | EVENT_TYPE | ISR_TYPE | MESSAGE_TYPE | COM_TYPE |
		//NM_TYPE | APPMODE_TYPE | IPDU_TYPE | NETWORKMESSAGE_TYPE | APPLICATION_TYPE | MEMOTY_PROTECTION_TYPE | SPINLOCK_TYPE |
		//SCHEDULETABLE_TYPE | IOC_TYPE | APICONFIG_TYPE | LIBRARY_TYPE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//OS_TYPE
		public EnumLiteralDeclaration getOS_TYPEEnumLiteralDeclaration_0() { return cOS_TYPEEnumLiteralDeclaration_0; }
		
		//"OS_TYPE"
		public Keyword getOS_TYPEOS_TYPEKeyword_0_0() { return cOS_TYPEOS_TYPEKeyword_0_0; }
		
		//TASK_TYPE
		public EnumLiteralDeclaration getTASK_TYPEEnumLiteralDeclaration_1() { return cTASK_TYPEEnumLiteralDeclaration_1; }
		
		//"TASK_TYPE"
		public Keyword getTASK_TYPETASK_TYPEKeyword_1_0() { return cTASK_TYPETASK_TYPEKeyword_1_0; }
		
		//COUNTER_TYPE
		public EnumLiteralDeclaration getCOUNTER_TYPEEnumLiteralDeclaration_2() { return cCOUNTER_TYPEEnumLiteralDeclaration_2; }
		
		//"COUNTER_TYPE"
		public Keyword getCOUNTER_TYPECOUNTER_TYPEKeyword_2_0() { return cCOUNTER_TYPECOUNTER_TYPEKeyword_2_0; }
		
		//ALARM_TYPE
		public EnumLiteralDeclaration getALARM_TYPEEnumLiteralDeclaration_3() { return cALARM_TYPEEnumLiteralDeclaration_3; }
		
		//"ALARM_TYPE"
		public Keyword getALARM_TYPEALARM_TYPEKeyword_3_0() { return cALARM_TYPEALARM_TYPEKeyword_3_0; }
		
		//RESOURCE_TYPE
		public EnumLiteralDeclaration getRESOURCE_TYPEEnumLiteralDeclaration_4() { return cRESOURCE_TYPEEnumLiteralDeclaration_4; }
		
		//"RESOURCE_TYPE"
		public Keyword getRESOURCE_TYPERESOURCE_TYPEKeyword_4_0() { return cRESOURCE_TYPERESOURCE_TYPEKeyword_4_0; }
		
		//EVENT_TYPE
		public EnumLiteralDeclaration getEVENT_TYPEEnumLiteralDeclaration_5() { return cEVENT_TYPEEnumLiteralDeclaration_5; }
		
		//"EVENT_TYPE"
		public Keyword getEVENT_TYPEEVENT_TYPEKeyword_5_0() { return cEVENT_TYPEEVENT_TYPEKeyword_5_0; }
		
		//ISR_TYPE
		public EnumLiteralDeclaration getISR_TYPEEnumLiteralDeclaration_6() { return cISR_TYPEEnumLiteralDeclaration_6; }
		
		//"ISR_TYPE"
		public Keyword getISR_TYPEISR_TYPEKeyword_6_0() { return cISR_TYPEISR_TYPEKeyword_6_0; }
		
		//MESSAGE_TYPE
		public EnumLiteralDeclaration getMESSAGE_TYPEEnumLiteralDeclaration_7() { return cMESSAGE_TYPEEnumLiteralDeclaration_7; }
		
		//"MESSAGE_TYPE"
		public Keyword getMESSAGE_TYPEMESSAGE_TYPEKeyword_7_0() { return cMESSAGE_TYPEMESSAGE_TYPEKeyword_7_0; }
		
		//COM_TYPE
		public EnumLiteralDeclaration getCOM_TYPEEnumLiteralDeclaration_8() { return cCOM_TYPEEnumLiteralDeclaration_8; }
		
		//"COM_TYPE"
		public Keyword getCOM_TYPECOM_TYPEKeyword_8_0() { return cCOM_TYPECOM_TYPEKeyword_8_0; }
		
		//NM_TYPE
		public EnumLiteralDeclaration getNM_TYPEEnumLiteralDeclaration_9() { return cNM_TYPEEnumLiteralDeclaration_9; }
		
		//"NM_TYPE"
		public Keyword getNM_TYPENM_TYPEKeyword_9_0() { return cNM_TYPENM_TYPEKeyword_9_0; }
		
		//APPMODE_TYPE
		public EnumLiteralDeclaration getAPPMODE_TYPEEnumLiteralDeclaration_10() { return cAPPMODE_TYPEEnumLiteralDeclaration_10; }
		
		//"APPMODE_TYPE"
		public Keyword getAPPMODE_TYPEAPPMODE_TYPEKeyword_10_0() { return cAPPMODE_TYPEAPPMODE_TYPEKeyword_10_0; }
		
		//IPDU_TYPE
		public EnumLiteralDeclaration getIPDU_TYPEEnumLiteralDeclaration_11() { return cIPDU_TYPEEnumLiteralDeclaration_11; }
		
		//"IPDU_TYPE"
		public Keyword getIPDU_TYPEIPDU_TYPEKeyword_11_0() { return cIPDU_TYPEIPDU_TYPEKeyword_11_0; }
		
		//NETWORKMESSAGE_TYPE
		public EnumLiteralDeclaration getNETWORKMESSAGE_TYPEEnumLiteralDeclaration_12() { return cNETWORKMESSAGE_TYPEEnumLiteralDeclaration_12; }
		
		//"NETWORKMESSAGE_TYPE"
		public Keyword getNETWORKMESSAGE_TYPENETWORKMESSAGE_TYPEKeyword_12_0() { return cNETWORKMESSAGE_TYPENETWORKMESSAGE_TYPEKeyword_12_0; }
		
		//APPLICATION_TYPE
		public EnumLiteralDeclaration getAPPLICATION_TYPEEnumLiteralDeclaration_13() { return cAPPLICATION_TYPEEnumLiteralDeclaration_13; }
		
		//"APPLICATION_TYPE"
		public Keyword getAPPLICATION_TYPEAPPLICATION_TYPEKeyword_13_0() { return cAPPLICATION_TYPEAPPLICATION_TYPEKeyword_13_0; }
		
		//MEMOTY_PROTECTION_TYPE
		public EnumLiteralDeclaration getMEMOTY_PROTECTION_TYPEEnumLiteralDeclaration_14() { return cMEMOTY_PROTECTION_TYPEEnumLiteralDeclaration_14; }
		
		//"MEMOTY_PROTECTION_TYPE"
		public Keyword getMEMOTY_PROTECTION_TYPEMEMOTY_PROTECTION_TYPEKeyword_14_0() { return cMEMOTY_PROTECTION_TYPEMEMOTY_PROTECTION_TYPEKeyword_14_0; }
		
		//SPINLOCK_TYPE
		public EnumLiteralDeclaration getSPINLOCK_TYPEEnumLiteralDeclaration_15() { return cSPINLOCK_TYPEEnumLiteralDeclaration_15; }
		
		//"SPINLOCK_TYPE"
		public Keyword getSPINLOCK_TYPESPINLOCK_TYPEKeyword_15_0() { return cSPINLOCK_TYPESPINLOCK_TYPEKeyword_15_0; }
		
		//SCHEDULETABLE_TYPE
		public EnumLiteralDeclaration getSCHEDULETABLE_TYPEEnumLiteralDeclaration_16() { return cSCHEDULETABLE_TYPEEnumLiteralDeclaration_16; }
		
		//"SCHEDULETABLE_TYPE"
		public Keyword getSCHEDULETABLE_TYPESCHEDULETABLE_TYPEKeyword_16_0() { return cSCHEDULETABLE_TYPESCHEDULETABLE_TYPEKeyword_16_0; }
		
		//IOC_TYPE
		public EnumLiteralDeclaration getIOC_TYPEEnumLiteralDeclaration_17() { return cIOC_TYPEEnumLiteralDeclaration_17; }
		
		//"IOC_TYPE"
		public Keyword getIOC_TYPEIOC_TYPEKeyword_17_0() { return cIOC_TYPEIOC_TYPEKeyword_17_0; }
		
		//APICONFIG_TYPE
		public EnumLiteralDeclaration getAPICONFIG_TYPEEnumLiteralDeclaration_18() { return cAPICONFIG_TYPEEnumLiteralDeclaration_18; }
		
		//"APICONFIG_TYPE"
		public Keyword getAPICONFIG_TYPEAPICONFIG_TYPEKeyword_18_0() { return cAPICONFIG_TYPEAPICONFIG_TYPEKeyword_18_0; }
		
		//LIBRARY_TYPE
		public EnumLiteralDeclaration getLIBRARY_TYPEEnumLiteralDeclaration_19() { return cLIBRARY_TYPEEnumLiteralDeclaration_19; }
		
		//"LIBRARY_TYPE"
		public Keyword getLIBRARY_TYPELIBRARY_TYPEKeyword_19_0() { return cLIBRARY_TYPELIBRARY_TYPEKeyword_19_0; }
	}
	
	private final OILFileElements pOILFile;
	private final IncludeElements pInclude;
	private final FileNameElements pFileName;
	private final OILVersionElements pOILVersion;
	private final ImplementationDefinitionElements pImplementationDefinition;
	private final ImplementationSpecElements pImplementationSpec;
	private final OsRuleElements pOsRule;
	private final TaskRuleElements pTaskRule;
	private final CounterRuleElements pCounterRule;
	private final ApplicationRuleElements pApplicationRule;
	private final AppSubContainerElements pAppSubContainer;
	private final HasRestartTaskRuleElements pHasRestartTaskRule;
	private final RestartTaskRuleElements pRestartTaskRule;
	private final TrustedRuleElements pTrustedRule;
	private final ApplicationParamElements pApplicationParam;
	private final ApplicationParamEnumElements eApplicationParamEnum;
	private final IsrRuleElements pIsrRule;
	private final IsrSubContainerElements pIsrSubContainer;
	private final TimingProtectionRuleElements pTimingProtectionRule;
	private final TimingProtectionParamElements pTimingProtectionParam;
	private final TimingProtectionParamEnumElements eTimingProtectionParamEnum;
	private final IsrParamElements pIsrParam;
	private final IsrParamEnumElements eIsrParamEnum;
	private final MemoryProtectionRuleElements pMemoryProtectionRule;
	private final ObjectElements pObject;
	private final ImplementationDefElements pImplementationDef;
	private final ImplAttrDefElements pImplAttrDef;
	private final ImplAttrIntDefElements pImplAttrIntDef;
	private final IntTypeEnumElements eIntTypeEnum;
	private final ImplAttrFloatDefElements pImplAttrFloatDef;
	private final ImplAttrEnumDefElements pImplAttrEnumDef;
	private final ImplAttrStringDefElements pImplAttrStringDef;
	private final ImplAttrBooleanDefElements pImplAttrBooleanDef;
	private final ImplAttrIdentiFierElements pImplAttrIdentiFier;
	private final RangeElements pRange;
	private final DefaultEnumElements eDefaultEnum;
	private final EnumerationElements pEnumeration;
	private final EnumeratorElements pEnumerator;
	private final ImplRefDefElements pImplRefDef;
	private final ObjectRefTypeEnumElements eObjectRefTypeEnum;
	private final MultipleSpecifierElements pMultipleSpecifier;
	private final ApplicationDefinitionElements pApplicationDefinition;
	private final ObjectDefinitionElements pObjectDefinition;
	private final LibrayattributeElements pLibrayattribute;
	private final AttributeElements pAttribute;
	private final AttributeNameElements pAttributeName;
	private final AttributeValueElements pAttributeValue;
	private final NameAttributeValueElements pNameAttributeValue;
	private final BooleanAttributeValueElements pBooleanAttributeValue;
	private final NumberAttributeValueElements pNumberAttributeValue;
	private final FloatAttributeValueElements pFloatAttributeValue;
	private final StringAttributeValueElements pStringAttributeValue;
	private final AutoAttributeValueElements pAutoAttributeValue;
	private final EStringElements pEString;
	private final NumberElements pNumber;
	private final TerminalRule tT_NUMBER;
	private final EFloatElements pEFloat;
	private final TerminalRule tT_FLOAT;
	private final NameElements pName;
	private final TerminalRule tID;
	private final TerminalRule tFILEID;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public OilGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pOILFile = new OILFileElements();
		this.pInclude = new IncludeElements();
		this.pFileName = new FileNameElements();
		this.pOILVersion = new OILVersionElements();
		this.pImplementationDefinition = new ImplementationDefinitionElements();
		this.pImplementationSpec = new ImplementationSpecElements();
		this.pOsRule = new OsRuleElements();
		this.pTaskRule = new TaskRuleElements();
		this.pCounterRule = new CounterRuleElements();
		this.pApplicationRule = new ApplicationRuleElements();
		this.pAppSubContainer = new AppSubContainerElements();
		this.pHasRestartTaskRule = new HasRestartTaskRuleElements();
		this.pRestartTaskRule = new RestartTaskRuleElements();
		this.pTrustedRule = new TrustedRuleElements();
		this.pApplicationParam = new ApplicationParamElements();
		this.eApplicationParamEnum = new ApplicationParamEnumElements();
		this.pIsrRule = new IsrRuleElements();
		this.pIsrSubContainer = new IsrSubContainerElements();
		this.pTimingProtectionRule = new TimingProtectionRuleElements();
		this.pTimingProtectionParam = new TimingProtectionParamElements();
		this.eTimingProtectionParamEnum = new TimingProtectionParamEnumElements();
		this.pIsrParam = new IsrParamElements();
		this.eIsrParamEnum = new IsrParamEnumElements();
		this.pMemoryProtectionRule = new MemoryProtectionRuleElements();
		this.pObject = new ObjectElements();
		this.pImplementationDef = new ImplementationDefElements();
		this.pImplAttrDef = new ImplAttrDefElements();
		this.pImplAttrIntDef = new ImplAttrIntDefElements();
		this.eIntTypeEnum = new IntTypeEnumElements();
		this.pImplAttrFloatDef = new ImplAttrFloatDefElements();
		this.pImplAttrEnumDef = new ImplAttrEnumDefElements();
		this.pImplAttrStringDef = new ImplAttrStringDefElements();
		this.pImplAttrBooleanDef = new ImplAttrBooleanDefElements();
		this.pImplAttrIdentiFier = new ImplAttrIdentiFierElements();
		this.pRange = new RangeElements();
		this.eDefaultEnum = new DefaultEnumElements();
		this.pEnumeration = new EnumerationElements();
		this.pEnumerator = new EnumeratorElements();
		this.pImplRefDef = new ImplRefDefElements();
		this.eObjectRefTypeEnum = new ObjectRefTypeEnumElements();
		this.pMultipleSpecifier = new MultipleSpecifierElements();
		this.pApplicationDefinition = new ApplicationDefinitionElements();
		this.pObjectDefinition = new ObjectDefinitionElements();
		this.pLibrayattribute = new LibrayattributeElements();
		this.pAttribute = new AttributeElements();
		this.pAttributeName = new AttributeNameElements();
		this.pAttributeValue = new AttributeValueElements();
		this.pNameAttributeValue = new NameAttributeValueElements();
		this.pBooleanAttributeValue = new BooleanAttributeValueElements();
		this.pNumberAttributeValue = new NumberAttributeValueElements();
		this.pFloatAttributeValue = new FloatAttributeValueElements();
		this.pStringAttributeValue = new StringAttributeValueElements();
		this.pAutoAttributeValue = new AutoAttributeValueElements();
		this.pEString = new EStringElements();
		this.pNumber = new NumberElements();
		this.tT_NUMBER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.T_NUMBER");
		this.pEFloat = new EFloatElements();
		this.tT_FLOAT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.T_FLOAT");
		this.pName = new NameElements();
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.ID");
		this.tFILEID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.oil.Oil.FILEID");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.oil.Oil".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//OILFile:
	//	version=OILVersion?
	//	include+=Include*
	//	implementation=ImplementationDefinition?
	//	application=ApplicationDefinition;
	public OILFileElements getOILFileAccess() {
		return pOILFile;
	}
	
	public ParserRule getOILFileRule() {
		return getOILFileAccess().getRule();
	}
	
	//Include: // 수정
	//	"#include" ("<" name=FileName ">" | name=STRING);
	public IncludeElements getIncludeAccess() {
		return pInclude;
	}
	
	public ParserRule getIncludeRule() {
		return getIncludeAccess().getRule();
	}
	
	//FileName:
	//	FILEID;
	public FileNameElements getFileNameAccess() {
		return pFileName;
	}
	
	public ParserRule getFileNameRule() {
		return getFileNameAccess().getRule();
	}
	
	//OILVersion:
	//	"OIL_VERSION" "=" version=STRING (":" description=EString)? ";";
	public OILVersionElements getOILVersionAccess() {
		return pOILVersion;
	}
	
	public ParserRule getOILVersionRule() {
		return getOILVersionAccess().getRule();
	}
	
	//ImplementationDefinition:
	//	"IMPLEMENTATION" name=Name "{" implementationSpecs+=ImplementationSpec "}" ";";
	public ImplementationDefinitionElements getImplementationDefinitionAccess() {
		return pImplementationDefinition;
	}
	
	public ParserRule getImplementationDefinitionRule() {
		return getImplementationDefinitionAccess().getRule();
	}
	
	//ImplementationSpec:
	//	{ImplementationSpec} (osRule+=OsRule | taskRule+=TaskRule | counterRule+=CounterRule | isrRule+=IsrRule)+;
	public ImplementationSpecElements getImplementationSpecAccess() {
		return pImplementationSpec;
	}
	
	public ParserRule getImplementationSpecRule() {
		return getImplementationSpecAccess().getRule();
	}
	
	//OsRule:
	//	{OsRule}
	//	"OS" "{" implementations+=ImplementationDef* "}" ";";
	public OsRuleElements getOsRuleAccess() {
		return pOsRule;
	}
	
	public ParserRule getOsRuleRule() {
		return getOsRuleAccess().getRule();
	}
	
	//TaskRule:
	//	{TaskRule}
	//	"TASK" "{" implementations+=ImplementationDef* "}" ";";
	public TaskRuleElements getTaskRuleAccess() {
		return pTaskRule;
	}
	
	public ParserRule getTaskRuleRule() {
		return getTaskRuleAccess().getRule();
	}
	
	//CounterRule:
	//	{CounterRule}
	//	"COUNTER" "{" implementations+=ImplementationDef* "}" ";";
	public CounterRuleElements getCounterRuleAccess() {
		return pCounterRule;
	}
	
	public ParserRule getCounterRuleRule() {
		return getCounterRuleAccess().getRule();
	}
	
	//ApplicationRule:
	//	{ApplicationRule}
	//	"APPLICATION"
	//	name=Name? "{" appSubOrParam+=(AppSubContainer | ApplicationParam)* "}" ";";
	public ApplicationRuleElements getApplicationRuleAccess() {
		return pApplicationRule;
	}
	
	public ParserRule getApplicationRuleRule() {
		return getApplicationRuleAccess().getRule();
	}
	
	//AppSubContainer:
	//	hasRestartTaskRule=HasRestartTaskRule | trustedRule=TrustedRule;
	public AppSubContainerElements getAppSubContainerAccess() {
		return pAppSubContainer;
	}
	
	public ParserRule getAppSubContainerRule() {
		return getAppSubContainerAccess().getRule();
	}
	
	//HasRestartTaskRule:
	//	{HasRestartTaskRule}
	//	"HAS_RESTARTTASK"
	//	name=Name? "=" ("TRUE" "{" restartTaskRule=RestartTaskRule "}" | "FALSE") ";";
	public HasRestartTaskRuleElements getHasRestartTaskRuleAccess() {
		return pHasRestartTaskRule;
	}
	
	public ParserRule getHasRestartTaskRuleRule() {
		return getHasRestartTaskRuleAccess().getRule();
	}
	
	//RestartTaskRule:
	//	"RESTARTTASK"
	//	name=Name? "=" value=AttributeValue ";";
	public RestartTaskRuleElements getRestartTaskRuleAccess() {
		return pRestartTaskRule;
	}
	
	public ParserRule getRestartTaskRuleRule() {
		return getRestartTaskRuleAccess().getRule();
	}
	
	//TrustedRule:
	//	{TrustedRule}
	//	"TRUSTED" name=Name? "=" ("TRUE" | "FALSE") ";";
	public TrustedRuleElements getTrustedRuleAccess() {
		return pTrustedRule;
	}
	
	public ParserRule getTrustedRuleRule() {
		return getTrustedRuleAccess().getRule();
	}
	
	//ApplicationParam:
	//	type=ApplicationParamEnum "=" value=AttributeValue ";";
	public ApplicationParamElements getApplicationParamAccess() {
		return pApplicationParam;
	}
	
	public ParserRule getApplicationParamRule() {
		return getApplicationParamAccess().getRule();
	}
	
	//enum ApplicationParamEnum:
	//	CORE | ALARM | COUNTER | RESOURCE | TASK | ISR | MESSAGE |
	//	SCHEDULETABLE | IOC | ERRORHOOK | SHUTDOWNHOOK | STARTUPHOOK;
	public ApplicationParamEnumElements getApplicationParamEnumAccess() {
		return eApplicationParamEnum;
	}
	
	public EnumRule getApplicationParamEnumRule() {
		return getApplicationParamEnumAccess().getRule();
	}
	
	//IsrRule:
	//	{IsrRule}
	//	"ISR"
	//	name=Name? "{" type=IntTypeEnum? isrSubOrParam+=(IsrSubContainer | IsrParam)* "}" ";";
	public IsrRuleElements getIsrRuleAccess() {
		return pIsrRule;
	}
	
	public ParserRule getIsrRuleRule() {
		return getIsrRuleAccess().getRule();
	}
	
	//IsrSubContainer:
	//	timingProtectionRule=TimingProtectionRule;
	public IsrSubContainerElements getIsrSubContainerAccess() {
		return pIsrSubContainer;
	}
	
	public ParserRule getIsrSubContainerRule() {
		return getIsrSubContainerAccess().getRule();
	}
	
	//TimingProtectionRule:
	//	{TimingProtectionRule}
	//	"TIMING_PROTECTION"
	//	name=Name? "=" ("TRUE" "{" timingProtectionParam+=TimingProtectionParam* "}" | "FALSE") ";";
	public TimingProtectionRuleElements getTimingProtectionRuleAccess() {
		return pTimingProtectionRule;
	}
	
	public ParserRule getTimingProtectionRuleRule() {
		return getTimingProtectionRuleAccess().getRule();
	}
	
	//TimingProtectionParam:
	//	type=TimingProtectionParamEnum "=" value=AttributeValue ";";
	public TimingProtectionParamElements getTimingProtectionParamAccess() {
		return pTimingProtectionParam;
	}
	
	public ParserRule getTimingProtectionParamRule() {
		return getTimingProtectionParamAccess().getRule();
	}
	
	//enum TimingProtectionParamEnum:
	//	MAXALLINTERRUPTLOCKTIME | MAXOSINTERRUPTLOCKTIME | EXECUTIONTIME | TIMEFRAME;
	public TimingProtectionParamEnumElements getTimingProtectionParamEnumAccess() {
		return eTimingProtectionParamEnum;
	}
	
	public EnumRule getTimingProtectionParamEnumRule() {
		return getTimingProtectionParamEnumAccess().getRule();
	}
	
	//IsrParam:
	//	type=IsrParamEnum "=" value=AttributeValue ";";
	public IsrParamElements getIsrParamAccess() {
		return pIsrParam;
	}
	
	public ParserRule getIsrParamRule() {
		return getIsrParamAccess().getRule();
	}
	
	//enum IsrParamEnum:
	//	CATEGORY | RESOURCE | MESSAGE | PRIORITY | ENTRY | STACKSIZE | SOURCE;
	public IsrParamEnumElements getIsrParamEnumAccess() {
		return eIsrParamEnum;
	}
	
	public EnumRule getIsrParamEnumRule() {
		return getIsrParamEnumAccess().getRule();
	}
	
	//MemoryProtectionRule:
	//	{MemoryProtectionRule}
	//	"MEMORY_PROTECTION" "{" "}" ";";
	public MemoryProtectionRuleElements getMemoryProtectionRuleAccess() {
		return pMemoryProtectionRule;
	}
	
	public ParserRule getMemoryProtectionRuleRule() {
		return getMemoryProtectionRuleAccess().getRule();
	}
	
	//Object:
	//	"OS" | "TASK" | "COUNTER" | "ALARM" | "RESOURCE" |
	//	"EVENT" | "ISR" | "MESSAGE" | "COM" | "NM" |
	//	"APPMODE" | "IPDU" | "NETWORKMESSAGE" | "APPLICATION" | "MEMOTY_PROTECTION" |
	//	"SPINLOCK" | "SCHEDULETABLE" | "IOC" | "LIBRARY";
	public ObjectElements getObjectAccess() {
		return pObject;
	}
	
	public ParserRule getObjectRule() {
		return getObjectAccess().getRule();
	}
	
	//ImplementationDef:
	//	ImplAttrDef | ImplRefDef;
	public ImplementationDefElements getImplementationDefAccess() {
		return pImplementationDef;
	}
	
	public ParserRule getImplementationDefRule() {
		return getImplementationDefAccess().getRule();
	}
	
	//ImplAttrDef:
	//	ImplAttrIntDef | ImplAttrFloatDef | ImplAttrEnumDef | ImplAttrStringDef | ImplAttrBooleanDef | ImplAttrIdentiFier;
	public ImplAttrDefElements getImplAttrDefAccess() {
		return pImplAttrDef;
	}
	
	public ParserRule getImplAttrDefRule() {
		return getImplAttrDefAccess().getRule();
	}
	
	//ImplAttrIntDef:
	//	type=IntTypeEnum
	//	auto?="WITH_AUTO"? range=Range? name=AttributeName multiple?=MultipleSpecifier? ("=" (value=Number |
	//	default=DefaultEnum))? ";";
	public ImplAttrIntDefElements getImplAttrIntDefAccess() {
		return pImplAttrIntDef;
	}
	
	public ParserRule getImplAttrIntDefRule() {
		return getImplAttrIntDefAccess().getRule();
	}
	
	//enum IntTypeEnum:
	//	UINT32 | INT32 | UINT64 | INT64;
	public IntTypeEnumElements getIntTypeEnumAccess() {
		return eIntTypeEnum;
	}
	
	public EnumRule getIntTypeEnumRule() {
		return getIntTypeEnumAccess().getRule();
	}
	
	//ImplAttrFloatDef:
	//	"FLOAT"
	//	auto?="WITH_AUTO"? range=Range? name=AttributeName multiple?=MultipleSpecifier? ("=" (value=EFloat |
	//	default=DefaultEnum))? ";";
	public ImplAttrFloatDefElements getImplAttrFloatDefAccess() {
		return pImplAttrFloatDef;
	}
	
	public ParserRule getImplAttrFloatDefRule() {
		return getImplAttrFloatDefAccess().getRule();
	}
	
	//ImplAttrEnumDef:
	//	"ENUM"
	//	auto?="WITH_AUTO"? enumeration=Enumeration? name=AttributeName multiple?=MultipleSpecifier? ("=" (value=Name |
	//	default=DefaultEnum))? ";";
	public ImplAttrEnumDefElements getImplAttrEnumDefAccess() {
		return pImplAttrEnumDef;
	}
	
	public ParserRule getImplAttrEnumDefRule() {
		return getImplAttrEnumDefAccess().getRule();
	}
	
	//ImplAttrStringDef:
	//	"STRING"
	//	auto?="WITH_AUTO"? name=AttributeName multiple?=MultipleSpecifier? ("=" (value=EString | default=DefaultEnum))? ";";
	public ImplAttrStringDefElements getImplAttrStringDefAccess() {
		return pImplAttrStringDef;
	}
	
	public ParserRule getImplAttrStringDefRule() {
		return getImplAttrStringDefAccess().getRule();
	}
	
	//ImplAttrBooleanDef:
	//	"BOOLEAN"
	//	auto?="WITH_AUTO"? ("[" "TRUE" ("{" trueParameterList+=ImplementationDef* "}")?
	//	trueDescription=EString? ","
	//	"FALSE" ("{" falseParameterList+=ImplementationDef* "}")? falseDescription=EString? "]")? name=(Name | Object)
	//	multiple?=MultipleSpecifier? ("=" (value=("TRUE" | "FALSE") | default=DefaultEnum))? ";";
	public ImplAttrBooleanDefElements getImplAttrBooleanDefAccess() {
		return pImplAttrBooleanDef;
	}
	
	public ParserRule getImplAttrBooleanDefRule() {
		return getImplAttrBooleanDefAccess().getRule();
	}
	
	//ImplAttrIdentiFier: // possibly change according to implementation grammar.
	//	"IDENTIFIER" auto?="WITH_AUTO"? name=AttributeName "=" value=ID ";";
	public ImplAttrIdentiFierElements getImplAttrIdentiFierAccess() {
		return pImplAttrIdentiFier;
	}
	
	public ParserRule getImplAttrIdentiFierRule() {
		return getImplAttrIdentiFierAccess().getRule();
	}
	
	//Range:
	//	"[" (value=Number | begin=Number ".." end=Number | numbers+=Number ("," numbers+=Number)+) "]";
	public RangeElements getRangeAccess() {
		return pRange;
	}
	
	public ParserRule getRangeRule() {
		return getRangeAccess().getRule();
	}
	
	//enum DefaultEnum:
	//	NO_DEFAULT | AUTO;
	public DefaultEnumElements getDefaultEnumAccess() {
		return eDefaultEnum;
	}
	
	public EnumRule getDefaultEnumRule() {
		return getDefaultEnumAccess().getRule();
	}
	
	//Enumeration:
	//	"[" list+=Enumerator ("," list+=Enumerator)* "]";
	public EnumerationElements getEnumerationAccess() {
		return pEnumeration;
	}
	
	public ParserRule getEnumerationRule() {
		return getEnumerationAccess().getRule();
	}
	
	//Enumerator:
	//	name=Name ("{" implParameterList+=ImplementationDef* "}")? description=EString?;
	public EnumeratorElements getEnumeratorAccess() {
		return pEnumerator;
	}
	
	public ParserRule getEnumeratorRule() {
		return getEnumeratorAccess().getRule();
	}
	
	//ImplRefDef:
	//	type=ObjectRefTypeEnum name=AttributeName multiple?=MultipleSpecifier? description=EString? ";";
	public ImplRefDefElements getImplRefDefAccess() {
		return pImplRefDef;
	}
	
	public ParserRule getImplRefDefRule() {
		return getImplRefDefAccess().getRule();
	}
	
	//enum ObjectRefTypeEnum:
	//	OS_TYPE | TASK_TYPE | COUNTER_TYPE | ALARM_TYPE | RESOURCE_TYPE |
	//	EVENT_TYPE | ISR_TYPE | MESSAGE_TYPE | COM_TYPE | NM_TYPE |
	//	APPMODE_TYPE | IPDU_TYPE | NETWORKMESSAGE_TYPE | APPLICATION_TYPE | MEMOTY_PROTECTION_TYPE |
	//	SPINLOCK_TYPE | SCHEDULETABLE_TYPE | IOC_TYPE | APICONFIG_TYPE | LIBRARY_TYPE;
	public ObjectRefTypeEnumElements getObjectRefTypeEnumAccess() {
		return eObjectRefTypeEnum;
	}
	
	public EnumRule getObjectRefTypeEnumRule() {
		return getObjectRefTypeEnumAccess().getRule();
	}
	
	//MultipleSpecifier:
	//	"[" "]";
	public MultipleSpecifierElements getMultipleSpecifierAccess() {
		return pMultipleSpecifier;
	}
	
	public ParserRule getMultipleSpecifierRule() {
		return getMultipleSpecifierAccess().getRule();
	}
	
	//ApplicationDefinition:
	//	"CPU" name=Name "{" objectDefinitionList+=ObjectDefinition* "}" ";";
	public ApplicationDefinitionElements getApplicationDefinitionAccess() {
		return pApplicationDefinition;
	}
	
	public ParserRule getApplicationDefinitionRule() {
		return getApplicationDefinitionAccess().getRule();
	}
	
	//ObjectDefinition:
	//	"LIBRARY" name=Name ("{" LibraryList+=Librayattribute* "}")? ";" | ApplicationRule | object=Object name=Name ("{"
	//	parameterList+=Attribute* "}")? descrption=EString? ";";
	public ObjectDefinitionElements getObjectDefinitionAccess() {
		return pObjectDefinition;
	}
	
	public ParserRule getObjectDefinitionRule() {
		return getObjectDefinitionAccess().getRule();
	}
	
	//Librayattribute:
	//	"PATH" "=" description=EString ";" |
	//	"CHEADER" "=" description=EString ";" |
	//	"CFILE" "=" description=EString ";";
	public LibrayattributeElements getLibrayattributeAccess() {
		return pLibrayattribute;
	}
	
	public ParserRule getLibrayattributeRule() {
		return getLibrayattributeAccess().getRule();
	}
	
	/// ************************ 
	//object=Object name=Name (BLOCKBEGIN (parameterList+=Attribute
	//   )* (reObjectDefinition=ReObjectDefinition)* BLOCKEND)? (descrption=EString)? SEMICOLON;
	//
	//ReObjectDefinition://
	//   reobject=ReObject name=Name (BLOCKBEGIN (parameterList+=Attribute)* BLOCKEND)? (descrption=EString)? SEMICOLON;
	//Attribute:
	//   name=AttributeName "=" value=AttributeValue (description=EString)? SEMICOLON;
	//
	// ************************* / Attribute:
	//	name=AttributeName "="? value=AttributeValue description=EString? ";";
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//AttributeName:
	//	value=(Name | Object);
	public AttributeNameElements getAttributeNameAccess() {
		return pAttributeName;
	}
	
	public ParserRule getAttributeNameRule() {
		return getAttributeNameAccess().getRule();
	}
	
	//AttributeValue:
	//	NameAttributeValue | BooleanAttributeValue | NumberAttributeValue | FloatAttributeValue | StringAttributeValue |
	//	AutoAttributeValue;
	public AttributeValueElements getAttributeValueAccess() {
		return pAttributeValue;
	}
	
	public ParserRule getAttributeValueRule() {
		return getAttributeValueAccess().getRule();
	}
	
	//NameAttributeValue:
	//	value=Name;
	public NameAttributeValueElements getNameAttributeValueAccess() {
		return pNameAttributeValue;
	}
	
	public ParserRule getNameAttributeValueRule() {
		return getNameAttributeValueAccess().getRule();
	}
	
	//BooleanAttributeValue:
	//	value=("TRUE" | "FALSE");
	public BooleanAttributeValueElements getBooleanAttributeValueAccess() {
		return pBooleanAttributeValue;
	}
	
	public ParserRule getBooleanAttributeValueRule() {
		return getBooleanAttributeValueAccess().getRule();
	}
	
	//NumberAttributeValue:
	//	value=Number;
	public NumberAttributeValueElements getNumberAttributeValueAccess() {
		return pNumberAttributeValue;
	}
	
	public ParserRule getNumberAttributeValueRule() {
		return getNumberAttributeValueAccess().getRule();
	}
	
	//FloatAttributeValue:
	//	value=EFloat;
	public FloatAttributeValueElements getFloatAttributeValueAccess() {
		return pFloatAttributeValue;
	}
	
	public ParserRule getFloatAttributeValueRule() {
		return getFloatAttributeValueAccess().getRule();
	}
	
	//StringAttributeValue:
	//	value=EString;
	public StringAttributeValueElements getStringAttributeValueAccess() {
		return pStringAttributeValue;
	}
	
	public ParserRule getStringAttributeValueRule() {
		return getStringAttributeValueAccess().getRule();
	}
	
	//AutoAttributeValue:
	//	value?="AUTO";
	public AutoAttributeValueElements getAutoAttributeValueAccess() {
		return pAutoAttributeValue;
	}
	
	public ParserRule getAutoAttributeValueRule() {
		return getAutoAttributeValueAccess().getRule();
	}
	
	//EString:
	//	STRING;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Number ecore::EInt:
	//	T_NUMBER
	public NumberElements getNumberAccess() {
		return pNumber;
	}
	
	public ParserRule getNumberRule() {
		return getNumberAccess().getRule();
	}
	
	//terminal T_NUMBER:
	//	("+" | "-")? ("0x" ("0".."9" | "a".."f" | "A".."F")+ | "1".."9" "0".."9"* | "0");
	public TerminalRule getT_NUMBERRule() {
		return tT_NUMBER;
	}
	
	//EFloat ecore::EFloatObject:
	//	T_FLOAT
	public EFloatElements getEFloatAccess() {
		return pEFloat;
	}
	
	public ParserRule getEFloatRule() {
		return getEFloatAccess().getRule();
	}
	
	//terminal T_FLOAT:
	//	("+" | "-")? "0"..'9'* "." "0".."9"* (("e" | "E") ("+" | "-")? "0".."9"+)?;
	public TerminalRule getT_FLOATRule() {
		return tT_FLOAT;
	}
	
	//Name:
	//	ID;
	public NameElements getNameAccess() {
		return pName;
	}
	
	public ParserRule getNameRule() {
		return getNameAccess().getRule();
	}
	
	//terminal ID:
	//	("_" | "a".."z" | "A".."Z") ("_" | "a".."z" | "A".."Z" | "0".."9")*;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	//terminal FILEID:
	//	("_" | "a".."z" | "A".."Z") ("_" | "a".."z" | "A".."Z" | "0".."9")* "." ("a".."z" | "A".."Z") ("a".."z" | "A".."Z")*;
	public TerminalRule getFILEIDRule() {
		return tFILEID;
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
