/**
 * generated by Xtext 2.10.0
 */
package org.xtext.example.oil.oil.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.xtext.example.oil.oil.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.xtext.example.oil.oil.OilPackage
 * @generated
 */
public class OilSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static OilPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OilSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = OilPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @parameter ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case OilPackage.OIL_FILE:
      {
        OILFile oilFile = (OILFile)theEObject;
        T result = caseOILFile(oilFile);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.INCLUDE:
      {
        Include include = (Include)theEObject;
        T result = caseInclude(include);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.OIL_VERSION:
      {
        OILVersion oilVersion = (OILVersion)theEObject;
        T result = caseOILVersion(oilVersion);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMPLEMENTATION_DEFINITION:
      {
        ImplementationDefinition implementationDefinition = (ImplementationDefinition)theEObject;
        T result = caseImplementationDefinition(implementationDefinition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMPLEMENTATION_SPEC:
      {
        ImplementationSpec implementationSpec = (ImplementationSpec)theEObject;
        T result = caseImplementationSpec(implementationSpec);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.OS_RULE:
      {
        OsRule osRule = (OsRule)theEObject;
        T result = caseOsRule(osRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.TASK_RULE:
      {
        TaskRule taskRule = (TaskRule)theEObject;
        T result = caseTaskRule(taskRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.COUNTER_RULE:
      {
        CounterRule counterRule = (CounterRule)theEObject;
        T result = caseCounterRule(counterRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.ISR_RULE:
      {
        IsrRule isrRule = (IsrRule)theEObject;
        T result = caseIsrRule(isrRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMPLEMENTATION_DEF:
      {
        ImplementationDef implementationDef = (ImplementationDef)theEObject;
        T result = caseImplementationDef(implementationDef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMPL_ATTR_DEF:
      {
        ImplAttrDef implAttrDef = (ImplAttrDef)theEObject;
        T result = caseImplAttrDef(implAttrDef);
        if (result == null) result = caseImplementationDef(implAttrDef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMPL_ATTR_INT_DEF:
      {
        ImplAttrIntDef implAttrIntDef = (ImplAttrIntDef)theEObject;
        T result = caseImplAttrIntDef(implAttrIntDef);
        if (result == null) result = caseImplAttrDef(implAttrIntDef);
        if (result == null) result = caseImplementationDef(implAttrIntDef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMPL_ATTR_FLOAT_DEF:
      {
        ImplAttrFloatDef implAttrFloatDef = (ImplAttrFloatDef)theEObject;
        T result = caseImplAttrFloatDef(implAttrFloatDef);
        if (result == null) result = caseImplAttrDef(implAttrFloatDef);
        if (result == null) result = caseImplementationDef(implAttrFloatDef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMPL_ATTR_ENUM_DEF:
      {
        ImplAttrEnumDef implAttrEnumDef = (ImplAttrEnumDef)theEObject;
        T result = caseImplAttrEnumDef(implAttrEnumDef);
        if (result == null) result = caseImplAttrDef(implAttrEnumDef);
        if (result == null) result = caseImplementationDef(implAttrEnumDef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMPL_ATTR_STRING_DEF:
      {
        ImplAttrStringDef implAttrStringDef = (ImplAttrStringDef)theEObject;
        T result = caseImplAttrStringDef(implAttrStringDef);
        if (result == null) result = caseImplAttrDef(implAttrStringDef);
        if (result == null) result = caseImplementationDef(implAttrStringDef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMPL_ATTR_BOOLEAN_DEF:
      {
        ImplAttrBooleanDef implAttrBooleanDef = (ImplAttrBooleanDef)theEObject;
        T result = caseImplAttrBooleanDef(implAttrBooleanDef);
        if (result == null) result = caseImplAttrDef(implAttrBooleanDef);
        if (result == null) result = caseImplementationDef(implAttrBooleanDef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMPL_ATTR_IDENTI_FIER:
      {
        ImplAttrIdentiFier implAttrIdentiFier = (ImplAttrIdentiFier)theEObject;
        T result = caseImplAttrIdentiFier(implAttrIdentiFier);
        if (result == null) result = caseImplAttrDef(implAttrIdentiFier);
        if (result == null) result = caseImplementationDef(implAttrIdentiFier);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.RANGE:
      {
        Range range = (Range)theEObject;
        T result = caseRange(range);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.ENUMERATION:
      {
        Enumeration enumeration = (Enumeration)theEObject;
        T result = caseEnumeration(enumeration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.ENUMERATOR:
      {
        Enumerator enumerator = (Enumerator)theEObject;
        T result = caseEnumerator(enumerator);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMPL_REF_DEF:
      {
        ImplRefDef implRefDef = (ImplRefDef)theEObject;
        T result = caseImplRefDef(implRefDef);
        if (result == null) result = caseImplementationDef(implRefDef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.APPLICATION_DEFINITION:
      {
        ApplicationDefinition applicationDefinition = (ApplicationDefinition)theEObject;
        T result = caseApplicationDefinition(applicationDefinition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.OBJECT_DEFINITION:
      {
        ObjectDefinition objectDefinition = (ObjectDefinition)theEObject;
        T result = caseObjectDefinition(objectDefinition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.LIBRAYATTRIBUTE:
      {
        Librayattribute librayattribute = (Librayattribute)theEObject;
        T result = caseLibrayattribute(librayattribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.ATTRIBUTE:
      {
        Attribute attribute = (Attribute)theEObject;
        T result = caseAttribute(attribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.ATTRIBUTE_NAME:
      {
        AttributeName attributeName = (AttributeName)theEObject;
        T result = caseAttributeName(attributeName);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.ATTRIBUTE_VALUE:
      {
        AttributeValue attributeValue = (AttributeValue)theEObject;
        T result = caseAttributeValue(attributeValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.NAME_ATTRIBUTE_VALUE:
      {
        NameAttributeValue nameAttributeValue = (NameAttributeValue)theEObject;
        T result = caseNameAttributeValue(nameAttributeValue);
        if (result == null) result = caseAttributeValue(nameAttributeValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.BOOLEAN_ATTRIBUTE_VALUE:
      {
        BooleanAttributeValue booleanAttributeValue = (BooleanAttributeValue)theEObject;
        T result = caseBooleanAttributeValue(booleanAttributeValue);
        if (result == null) result = caseAttributeValue(booleanAttributeValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.NUMBER_ATTRIBUTE_VALUE:
      {
        NumberAttributeValue numberAttributeValue = (NumberAttributeValue)theEObject;
        T result = caseNumberAttributeValue(numberAttributeValue);
        if (result == null) result = caseAttributeValue(numberAttributeValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.FLOAT_ATTRIBUTE_VALUE:
      {
        FloatAttributeValue floatAttributeValue = (FloatAttributeValue)theEObject;
        T result = caseFloatAttributeValue(floatAttributeValue);
        if (result == null) result = caseAttributeValue(floatAttributeValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.STRING_ATTRIBUTE_VALUE:
      {
        StringAttributeValue stringAttributeValue = (StringAttributeValue)theEObject;
        T result = caseStringAttributeValue(stringAttributeValue);
        if (result == null) result = caseAttributeValue(stringAttributeValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.AUTO_ATTRIBUTE_VALUE:
      {
        AutoAttributeValue autoAttributeValue = (AutoAttributeValue)theEObject;
        T result = caseAutoAttributeValue(autoAttributeValue);
        if (result == null) result = caseAttributeValue(autoAttributeValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>OIL File</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>OIL File</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOILFile(OILFile object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Include</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Include</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInclude(Include object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>OIL Version</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>OIL Version</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOILVersion(OILVersion object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Implementation Definition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Implementation Definition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImplementationDefinition(ImplementationDefinition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Implementation Spec</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Implementation Spec</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImplementationSpec(ImplementationSpec object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Os Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Os Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOsRule(OsRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Task Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Task Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTaskRule(TaskRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Counter Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Counter Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCounterRule(CounterRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Isr Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Isr Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIsrRule(IsrRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Implementation Def</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Implementation Def</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImplementationDef(ImplementationDef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Impl Attr Def</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Impl Attr Def</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImplAttrDef(ImplAttrDef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Impl Attr Int Def</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Impl Attr Int Def</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImplAttrIntDef(ImplAttrIntDef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Impl Attr Float Def</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Impl Attr Float Def</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImplAttrFloatDef(ImplAttrFloatDef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Impl Attr Enum Def</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Impl Attr Enum Def</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImplAttrEnumDef(ImplAttrEnumDef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Impl Attr String Def</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Impl Attr String Def</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImplAttrStringDef(ImplAttrStringDef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Impl Attr Boolean Def</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Impl Attr Boolean Def</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImplAttrBooleanDef(ImplAttrBooleanDef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Impl Attr Identi Fier</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Impl Attr Identi Fier</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImplAttrIdentiFier(ImplAttrIdentiFier object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Range</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Range</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRange(Range object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Enumeration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Enumeration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnumeration(Enumeration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Enumerator</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Enumerator</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnumerator(Enumerator object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Impl Ref Def</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Impl Ref Def</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImplRefDef(ImplRefDef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Application Definition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Application Definition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseApplicationDefinition(ApplicationDefinition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Object Definition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Object Definition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseObjectDefinition(ObjectDefinition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Librayattribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Librayattribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLibrayattribute(Librayattribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Attribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Attribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAttribute(Attribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Attribute Name</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Attribute Name</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAttributeName(AttributeName object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Attribute Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Attribute Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAttributeValue(AttributeValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Name Attribute Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Name Attribute Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNameAttributeValue(NameAttributeValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Boolean Attribute Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Boolean Attribute Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBooleanAttributeValue(BooleanAttributeValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Number Attribute Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Number Attribute Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNumberAttributeValue(NumberAttributeValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Float Attribute Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Float Attribute Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFloatAttributeValue(FloatAttributeValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>String Attribute Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>String Attribute Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStringAttributeValue(StringAttributeValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Auto Attribute Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Auto Attribute Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAutoAttributeValue(AutoAttributeValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //OilSwitch
