/**
 * generated by Xtext 2.10.0
 */
package org.xtext.example.oil.oil.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.xtext.example.oil.oil.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.xtext.example.oil.oil.OilPackage
 * @generated
 */
public class OilSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static OilPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OilSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = OilPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @parameter ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case OilPackage.OIL_FILE:
      {
        OILFile oilFile = (OILFile)theEObject;
        T result = caseOILFile(oilFile);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.INCLUDE:
      {
        Include include = (Include)theEObject;
        T result = caseInclude(include);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.OIL_VERSION:
      {
        OILVersion oilVersion = (OILVersion)theEObject;
        T result = caseOILVersion(oilVersion);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMPLEMENTATION_DEFINITION:
      {
        ImplementationDefinition implementationDefinition = (ImplementationDefinition)theEObject;
        T result = caseImplementationDefinition(implementationDefinition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMPLEMENTATION_SPEC:
      {
        ImplementationSpec implementationSpec = (ImplementationSpec)theEObject;
        T result = caseImplementationSpec(implementationSpec);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMP_TASK_RULE:
      {
        ImpTaskRule impTaskRule = (ImpTaskRule)theEObject;
        T result = caseImpTaskRule(impTaskRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMP_TASK_PARAM:
      {
        ImpTaskParam impTaskParam = (ImpTaskParam)theEObject;
        T result = caseImpTaskParam(impTaskParam);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMP_OS_RULE:
      {
        ImpOsRule impOsRule = (ImpOsRule)theEObject;
        T result = caseImpOsRule(impOsRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMP_OS_PARAM:
      {
        ImpOsParam impOsParam = (ImpOsParam)theEObject;
        T result = caseImpOsParam(impOsParam);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMP_COUNTER_RULE:
      {
        ImpCounterRule impCounterRule = (ImpCounterRule)theEObject;
        T result = caseImpCounterRule(impCounterRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMP_COUNTER_PARAM:
      {
        ImpCounterParam impCounterParam = (ImpCounterParam)theEObject;
        T result = caseImpCounterParam(impCounterParam);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.APPLICATION_RULE:
      {
        ApplicationRule applicationRule = (ApplicationRule)theEObject;
        T result = caseApplicationRule(applicationRule);
        if (result == null) result = caseObjectDefinition(applicationRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.APP_SUB_CONTAINER:
      {
        AppSubContainer appSubContainer = (AppSubContainer)theEObject;
        T result = caseAppSubContainer(appSubContainer);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.APPLICATION_PARAM:
      {
        ApplicationParam applicationParam = (ApplicationParam)theEObject;
        T result = caseApplicationParam(applicationParam);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.HAS_RESTART_TASK_RULE:
      {
        HasRestartTaskRule hasRestartTaskRule = (HasRestartTaskRule)theEObject;
        T result = caseHasRestartTaskRule(hasRestartTaskRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.RESTART_TASK_RULE:
      {
        RestartTaskRule restartTaskRule = (RestartTaskRule)theEObject;
        T result = caseRestartTaskRule(restartTaskRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.TRUSTED_RULE:
      {
        TrustedRule trustedRule = (TrustedRule)theEObject;
        T result = caseTrustedRule(trustedRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.TRUSTED_FUC_RULE:
      {
        TrustedFucRule trustedFucRule = (TrustedFucRule)theEObject;
        T result = caseTrustedFucRule(trustedFucRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.ISR_RULE:
      {
        IsrRule isrRule = (IsrRule)theEObject;
        T result = caseIsrRule(isrRule);
        if (result == null) result = caseObjectDefinition(isrRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.ISR_SUB_CONTAINER:
      {
        IsrSubContainer isrSubContainer = (IsrSubContainer)theEObject;
        T result = caseIsrSubContainer(isrSubContainer);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.TIMING_PROTECTION_RULE:
      {
        TimingProtectionRule timingProtectionRule = (TimingProtectionRule)theEObject;
        T result = caseTimingProtectionRule(timingProtectionRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.TIMING_PROTECTION_PARAM:
      {
        TimingProtectionParam timingProtectionParam = (TimingProtectionParam)theEObject;
        T result = caseTimingProtectionParam(timingProtectionParam);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.ISR_PARAM:
      {
        IsrParam isrParam = (IsrParam)theEObject;
        T result = caseIsrParam(isrParam);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MEMORY_PROTECTION_RULE:
      {
        MemoryProtectionRule memoryProtectionRule = (MemoryProtectionRule)theEObject;
        T result = caseMemoryProtectionRule(memoryProtectionRule);
        if (result == null) result = caseObjectDefinition(memoryProtectionRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMPLEMENTATION_DEF:
      {
        ImplementationDef implementationDef = (ImplementationDef)theEObject;
        T result = caseImplementationDef(implementationDef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMPL_ATTR_DEF:
      {
        ImplAttrDef implAttrDef = (ImplAttrDef)theEObject;
        T result = caseImplAttrDef(implAttrDef);
        if (result == null) result = caseImplementationDef(implAttrDef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMPL_ATTR_INT_DEF:
      {
        ImplAttrIntDef implAttrIntDef = (ImplAttrIntDef)theEObject;
        T result = caseImplAttrIntDef(implAttrIntDef);
        if (result == null) result = caseImplAttrDef(implAttrIntDef);
        if (result == null) result = caseImplementationDef(implAttrIntDef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMPL_ATTR_FLOAT_DEF:
      {
        ImplAttrFloatDef implAttrFloatDef = (ImplAttrFloatDef)theEObject;
        T result = caseImplAttrFloatDef(implAttrFloatDef);
        if (result == null) result = caseImplAttrDef(implAttrFloatDef);
        if (result == null) result = caseImplementationDef(implAttrFloatDef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMPL_ATTR_ENUM_DEF:
      {
        ImplAttrEnumDef implAttrEnumDef = (ImplAttrEnumDef)theEObject;
        T result = caseImplAttrEnumDef(implAttrEnumDef);
        if (result == null) result = caseImplAttrDef(implAttrEnumDef);
        if (result == null) result = caseImplementationDef(implAttrEnumDef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMPL_ATTR_STRING_DEF:
      {
        ImplAttrStringDef implAttrStringDef = (ImplAttrStringDef)theEObject;
        T result = caseImplAttrStringDef(implAttrStringDef);
        if (result == null) result = caseImplAttrDef(implAttrStringDef);
        if (result == null) result = caseImplementationDef(implAttrStringDef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMPL_ATTR_BOOLEAN_DEF:
      {
        ImplAttrBooleanDef implAttrBooleanDef = (ImplAttrBooleanDef)theEObject;
        T result = caseImplAttrBooleanDef(implAttrBooleanDef);
        if (result == null) result = caseImplAttrDef(implAttrBooleanDef);
        if (result == null) result = caseImplementationDef(implAttrBooleanDef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMPL_ATTR_IDENTI_FIER:
      {
        ImplAttrIdentiFier implAttrIdentiFier = (ImplAttrIdentiFier)theEObject;
        T result = caseImplAttrIdentiFier(implAttrIdentiFier);
        if (result == null) result = caseImplAttrDef(implAttrIdentiFier);
        if (result == null) result = caseImplementationDef(implAttrIdentiFier);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.RANGE:
      {
        Range range = (Range)theEObject;
        T result = caseRange(range);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.ENUMERATION:
      {
        Enumeration enumeration = (Enumeration)theEObject;
        T result = caseEnumeration(enumeration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.ENUMERATOR:
      {
        Enumerator enumerator = (Enumerator)theEObject;
        T result = caseEnumerator(enumerator);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IMPL_REF_DEF:
      {
        ImplRefDef implRefDef = (ImplRefDef)theEObject;
        T result = caseImplRefDef(implRefDef);
        if (result == null) result = caseImplementationDef(implRefDef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.APPLICATION_DEFINITION:
      {
        ApplicationDefinition applicationDefinition = (ApplicationDefinition)theEObject;
        T result = caseApplicationDefinition(applicationDefinition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.OBJECT_DEFINITION:
      {
        ObjectDefinition objectDefinition = (ObjectDefinition)theEObject;
        T result = caseObjectDefinition(objectDefinition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.EVENT_RULE:
      {
        EventRule eventRule = (EventRule)theEObject;
        T result = caseEventRule(eventRule);
        if (result == null) result = caseObjectDefinition(eventRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.APPMODE_RULE:
      {
        AppmodeRule appmodeRule = (AppmodeRule)theEObject;
        T result = caseAppmodeRule(appmodeRule);
        if (result == null) result = caseObjectDefinition(appmodeRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MESSAGE_RULE:
      {
        MessageRule messageRule = (MessageRule)theEObject;
        T result = caseMessageRule(messageRule);
        if (result == null) result = caseObjectDefinition(messageRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MESSAGEATTRIBUTE:
      {
        Messageattribute messageattribute = (Messageattribute)theEObject;
        T result = caseMessageattribute(messageattribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MESSAGEATTRIBUTE3:
      {
        Messageattribute3 messageattribute3 = (Messageattribute3)theEObject;
        T result = caseMessageattribute3(messageattribute3);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MESSAGE_SETEVENT:
      {
        MessageSETEVENT messageSETEVENT = (MessageSETEVENT)theEObject;
        T result = caseMessageSETEVENT(messageSETEVENT);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MESSAGE_COMCALLBACK:
      {
        MessageCOMCALLBACK messageCOMCALLBACK = (MessageCOMCALLBACK)theEObject;
        T result = caseMessageCOMCALLBACK(messageCOMCALLBACK);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MESSAGEATTRIBUTE2:
      {
        Messageattribute2 messageattribute2 = (Messageattribute2)theEObject;
        T result = caseMessageattribute2(messageattribute2);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MESSAGE_SEND_STATIC_EXTERNAL:
      {
        Message_SEND_STATIC_EXTERNAL message_SEND_STATIC_EXTERNAL = (Message_SEND_STATIC_EXTERNAL)theEObject;
        T result = caseMessage_SEND_STATIC_EXTERNAL(message_SEND_STATIC_EXTERNAL);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MESSAGE_SEND_DYNAMIC_EXTERNAL:
      {
        Message_SEND_DYNAMIC_EXTERNAL message_SEND_DYNAMIC_EXTERNAL = (Message_SEND_DYNAMIC_EXTERNAL)theEObject;
        T result = caseMessage_SEND_DYNAMIC_EXTERNAL(message_SEND_DYNAMIC_EXTERNAL);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MESSAGE_SEND_ZERO_EXTERNAL:
      {
        Message_SEND_ZERO_EXTERNAL message_SEND_ZERO_EXTERNAL = (Message_SEND_ZERO_EXTERNAL)theEObject;
        T result = caseMessage_SEND_ZERO_EXTERNAL(message_SEND_ZERO_EXTERNAL);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MESSAGE_RECEIVE_ZERO_INTERNAL:
      {
        Message_RECEIVE_ZERO_INTERNAL message_RECEIVE_ZERO_INTERNAL = (Message_RECEIVE_ZERO_INTERNAL)theEObject;
        T result = caseMessage_RECEIVE_ZERO_INTERNAL(message_RECEIVE_ZERO_INTERNAL);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MESSAGE_RECEIVE_ZERO_EXTERNAL:
      {
        Message_RECEIVE_ZERO_EXTERNAL message_RECEIVE_ZERO_EXTERNAL = (Message_RECEIVE_ZERO_EXTERNAL)theEObject;
        T result = caseMessage_RECEIVE_ZERO_EXTERNAL(message_RECEIVE_ZERO_EXTERNAL);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MESSAGE_RECEIVE_UNQUEUED_INTERNAL:
      {
        Message_RECEIVE_UNQUEUED_INTERNAL message_RECEIVE_UNQUEUED_INTERNAL = (Message_RECEIVE_UNQUEUED_INTERNAL)theEObject;
        T result = caseMessage_RECEIVE_UNQUEUED_INTERNAL(message_RECEIVE_UNQUEUED_INTERNAL);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MESSAGE_RECEIVE_QUEUED_INTERNAL:
      {
        Message_RECEIVE_QUEUED_INTERNAL message_RECEIVE_QUEUED_INTERNAL = (Message_RECEIVE_QUEUED_INTERNAL)theEObject;
        T result = caseMessage_RECEIVE_QUEUED_INTERNAL(message_RECEIVE_QUEUED_INTERNAL);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MESSAGE_RECEIVE_UNQUEUED_EXTERNAL:
      {
        Message_RECEIVE_UNQUEUED_EXTERNAL message_RECEIVE_UNQUEUED_EXTERNAL = (Message_RECEIVE_UNQUEUED_EXTERNAL)theEObject;
        T result = caseMessage_RECEIVE_UNQUEUED_EXTERNAL(message_RECEIVE_UNQUEUED_EXTERNAL);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MESSAGE_RECEIVE_QUEUED_EXTERNAL:
      {
        Message_RECEIVE_QUEUED_EXTERNAL message_RECEIVE_QUEUED_EXTERNAL = (Message_RECEIVE_QUEUED_EXTERNAL)theEObject;
        T result = caseMessage_RECEIVE_QUEUED_EXTERNAL(message_RECEIVE_QUEUED_EXTERNAL);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MESSAGE_RECEIVE_DYNAMIC_EXTERNAL:
      {
        Message_RECEIVE_DYNAMIC_EXTERNAL message_RECEIVE_DYNAMIC_EXTERNAL = (Message_RECEIVE_DYNAMIC_EXTERNAL)theEObject;
        T result = caseMessage_RECEIVE_DYNAMIC_EXTERNAL(message_RECEIVE_DYNAMIC_EXTERNAL);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MESSAGE_RECEIVE_ZERO_SENDERS:
      {
        Message_RECEIVE_ZERO_SENDERS message_RECEIVE_ZERO_SENDERS = (Message_RECEIVE_ZERO_SENDERS)theEObject;
        T result = caseMessage_RECEIVE_ZERO_SENDERS(message_RECEIVE_ZERO_SENDERS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MESSAGE_CDATATYPE:
      {
        MessageCDATATYPE messageCDATATYPE = (MessageCDATATYPE)theEObject;
        T result = caseMessageCDATATYPE(messageCDATATYPE);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MESSAGE_TRANSFERPROPERTY:
      {
        MessageTRANSFERPROPERTY messageTRANSFERPROPERTY = (MessageTRANSFERPROPERTY)theEObject;
        T result = caseMessageTRANSFERPROPERTY(messageTRANSFERPROPERTY);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MESSAGE_NETWORKORDERCALLOUT:
      {
        MessageNETWORKORDERCALLOUT messageNETWORKORDERCALLOUT = (MessageNETWORKORDERCALLOUT)theEObject;
        T result = caseMessageNETWORKORDERCALLOUT(messageNETWORKORDERCALLOUT);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MESSAGE_CPUORDERCALLOUT:
      {
        MessageCPUORDERCALLOUT messageCPUORDERCALLOUT = (MessageCPUORDERCALLOUT)theEObject;
        T result = caseMessageCPUORDERCALLOUT(messageCPUORDERCALLOUT);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MESSAGE_INITIALVALUE:
      {
        MessageINITIALVALUE messageINITIALVALUE = (MessageINITIALVALUE)theEObject;
        T result = caseMessageINITIALVALUE(messageINITIALVALUE);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MESSAGE_NETWORKMESSAGE:
      {
        MessageNETWORKMESSAGE messageNETWORKMESSAGE = (MessageNETWORKMESSAGE)theEObject;
        T result = caseMessageNETWORKMESSAGE(messageNETWORKMESSAGE);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MESSAGE_SENDINGMESSAGE:
      {
        MessageSENDINGMESSAGE messageSENDINGMESSAGE = (MessageSENDINGMESSAGE)theEObject;
        T result = caseMessageSENDINGMESSAGE(messageSENDINGMESSAGE);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MESSAGE_QUEUESIZE:
      {
        MessageQUEUESIZE messageQUEUESIZE = (MessageQUEUESIZE)theEObject;
        T result = caseMessageQUEUESIZE(messageQUEUESIZE);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MESSAGEFILTER:
      {
        Messagefilter messagefilter = (Messagefilter)theEObject;
        T result = caseMessagefilter(messagefilter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.MESSAGE_LINK:
      {
        MessageLINK messageLINK = (MessageLINK)theEObject;
        T result = caseMessageLINK(messageLINK);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.LIBRAYATTRIBUTE:
      {
        Librayattribute librayattribute = (Librayattribute)theEObject;
        T result = caseLibrayattribute(librayattribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.COM_RULE:
      {
        ComRule comRule = (ComRule)theEObject;
        T result = caseComRule(comRule);
        if (result == null) result = caseObjectDefinition(comRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.COMATTRIBUTE:
      {
        Comattribute comattribute = (Comattribute)theEObject;
        T result = caseComattribute(comattribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.TASK_RULE:
      {
        TaskRule taskRule = (TaskRule)theEObject;
        T result = caseTaskRule(taskRule);
        if (result == null) result = caseImpTaskRule(taskRule);
        if (result == null) result = caseObjectDefinition(taskRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.TASKATTRIBUTE:
      {
        Taskattribute taskattribute = (Taskattribute)theEObject;
        T result = caseTaskattribute(taskattribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.TASK_TIMING_ATTRIBUTE:
      {
        TaskTimingAttribute taskTimingAttribute = (TaskTimingAttribute)theEObject;
        T result = caseTaskTimingAttribute(taskTimingAttribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.TASK_AUTOSTART_ATTRIBUTE:
      {
        TaskAutostartAttribute taskAutostartAttribute = (TaskAutostartAttribute)theEObject;
        T result = caseTaskAutostartAttribute(taskAutostartAttribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.RESOURCE_RULE:
      {
        ResourceRule resourceRule = (ResourceRule)theEObject;
        T result = caseResourceRule(resourceRule);
        if (result == null) result = caseObjectDefinition(resourceRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.RESOURCEATTRIBUTE:
      {
        Resourceattribute resourceattribute = (Resourceattribute)theEObject;
        T result = caseResourceattribute(resourceattribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.ALARM_RULE:
      {
        AlarmRule alarmRule = (AlarmRule)theEObject;
        T result = caseAlarmRule(alarmRule);
        if (result == null) result = caseObjectDefinition(alarmRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.ALARM_ATTRIBUTE:
      {
        AlarmAttribute alarmAttribute = (AlarmAttribute)theEObject;
        T result = caseAlarmAttribute(alarmAttribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.ALARM_ACTION_ATTRIBUTE:
      {
        AlarmActionAttribute alarmActionAttribute = (AlarmActionAttribute)theEObject;
        T result = caseAlarmActionAttribute(alarmActionAttribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.ALARM_AUTOSTART_ATTRIBUTE:
      {
        AlarmAutostartAttribute alarmAutostartAttribute = (AlarmAutostartAttribute)theEObject;
        T result = caseAlarmAutostartAttribute(alarmAutostartAttribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.SCHEDULE_TABLE_RULE:
      {
        ScheduleTableRule scheduleTableRule = (ScheduleTableRule)theEObject;
        T result = caseScheduleTableRule(scheduleTableRule);
        if (result == null) result = caseObjectDefinition(scheduleTableRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.SCHEDULE_TABLE_ATTRIBUTE:
      {
        ScheduleTableAttribute scheduleTableAttribute = (ScheduleTableAttribute)theEObject;
        T result = caseScheduleTableAttribute(scheduleTableAttribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.SCHEDULE_AUTO_START_ATTRIBUTE:
      {
        ScheduleAutoStartAttribute scheduleAutoStartAttribute = (ScheduleAutoStartAttribute)theEObject;
        T result = caseScheduleAutoStartAttribute(scheduleAutoStartAttribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.SCHDULE_SYN_ATTRIBUTE:
      {
        SchduleSynAttribute schduleSynAttribute = (SchduleSynAttribute)theEObject;
        T result = caseSchduleSynAttribute(schduleSynAttribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.EXPIRY_ATTRIBUTE:
      {
        ExpiryAttribute expiryAttribute = (ExpiryAttribute)theEObject;
        T result = caseExpiryAttribute(expiryAttribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.SCHDULE_ACTION_ATTRIBUTE:
      {
        SchduleActionAttribute schduleActionAttribute = (SchduleActionAttribute)theEObject;
        T result = caseSchduleActionAttribute(schduleActionAttribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IOC_RULE:
      {
        IocRule iocRule = (IocRule)theEObject;
        T result = caseIocRule(iocRule);
        if (result == null) result = caseObjectDefinition(iocRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IOC_ATTRIBUTE:
      {
        IocAttribute iocAttribute = (IocAttribute)theEObject;
        T result = caseIocAttribute(iocAttribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IOC_SENDER:
      {
        IocSender iocSender = (IocSender)theEObject;
        T result = caseIocSender(iocSender);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IOC_RECEIVER:
      {
        IocReceiver iocReceiver = (IocReceiver)theEObject;
        T result = caseIocReceiver(iocReceiver);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IOC_DATA_TYPE_ATTR:
      {
        IocDataTypeAttr iocDataTypeAttr = (IocDataTypeAttr)theEObject;
        T result = caseIocDataTypeAttr(iocDataTypeAttr);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.IOC_SEMANTICS:
      {
        IocSemantics iocSemantics = (IocSemantics)theEObject;
        T result = caseIocSemantics(iocSemantics);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.ATTRIBUTE:
      {
        Attribute attribute = (Attribute)theEObject;
        T result = caseAttribute(attribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.ATTRIBUTE_NAME:
      {
        AttributeName attributeName = (AttributeName)theEObject;
        T result = caseAttributeName(attributeName);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.ATTRIBUTE_VALUE:
      {
        AttributeValue attributeValue = (AttributeValue)theEObject;
        T result = caseAttributeValue(attributeValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.NAME_ATTRIBUTE_VALUE:
      {
        NameAttributeValue nameAttributeValue = (NameAttributeValue)theEObject;
        T result = caseNameAttributeValue(nameAttributeValue);
        if (result == null) result = caseAttributeValue(nameAttributeValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.BOOLEAN_ATTRIBUTE_VALUE:
      {
        BooleanAttributeValue booleanAttributeValue = (BooleanAttributeValue)theEObject;
        T result = caseBooleanAttributeValue(booleanAttributeValue);
        if (result == null) result = caseAttributeValue(booleanAttributeValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.NUMBER_ATTRIBUTE_VALUE:
      {
        NumberAttributeValue numberAttributeValue = (NumberAttributeValue)theEObject;
        T result = caseNumberAttributeValue(numberAttributeValue);
        if (result == null) result = caseAttributeValue(numberAttributeValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.FLOAT_ATTRIBUTE_VALUE:
      {
        FloatAttributeValue floatAttributeValue = (FloatAttributeValue)theEObject;
        T result = caseFloatAttributeValue(floatAttributeValue);
        if (result == null) result = caseAttributeValue(floatAttributeValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.STRING_ATTRIBUTE_VALUE:
      {
        StringAttributeValue stringAttributeValue = (StringAttributeValue)theEObject;
        T result = caseStringAttributeValue(stringAttributeValue);
        if (result == null) result = caseAttributeValue(stringAttributeValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.AUTO_ATTRIBUTE_VALUE:
      {
        AutoAttributeValue autoAttributeValue = (AutoAttributeValue)theEObject;
        T result = caseAutoAttributeValue(autoAttributeValue);
        if (result == null) result = caseAttributeValue(autoAttributeValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.OS_RULE:
      {
        OsRule osRule = (OsRule)theEObject;
        T result = caseOsRule(osRule);
        if (result == null) result = caseImpOsRule(osRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OilPackage.COUNTER_RULE:
      {
        CounterRule counterRule = (CounterRule)theEObject;
        T result = caseCounterRule(counterRule);
        if (result == null) result = caseImpCounterRule(counterRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>OIL File</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>OIL File</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOILFile(OILFile object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Include</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Include</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInclude(Include object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>OIL Version</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>OIL Version</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOILVersion(OILVersion object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Implementation Definition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Implementation Definition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImplementationDefinition(ImplementationDefinition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Implementation Spec</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Implementation Spec</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImplementationSpec(ImplementationSpec object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Imp Task Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Imp Task Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImpTaskRule(ImpTaskRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Imp Task Param</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Imp Task Param</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImpTaskParam(ImpTaskParam object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Imp Os Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Imp Os Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImpOsRule(ImpOsRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Imp Os Param</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Imp Os Param</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImpOsParam(ImpOsParam object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Imp Counter Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Imp Counter Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImpCounterRule(ImpCounterRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Imp Counter Param</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Imp Counter Param</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImpCounterParam(ImpCounterParam object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Application Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Application Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseApplicationRule(ApplicationRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>App Sub Container</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>App Sub Container</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAppSubContainer(AppSubContainer object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Application Param</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Application Param</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseApplicationParam(ApplicationParam object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Has Restart Task Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Has Restart Task Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseHasRestartTaskRule(HasRestartTaskRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Restart Task Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Restart Task Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRestartTaskRule(RestartTaskRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Trusted Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Trusted Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTrustedRule(TrustedRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Trusted Fuc Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Trusted Fuc Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTrustedFucRule(TrustedFucRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Isr Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Isr Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIsrRule(IsrRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Isr Sub Container</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Isr Sub Container</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIsrSubContainer(IsrSubContainer object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Timing Protection Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Timing Protection Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTimingProtectionRule(TimingProtectionRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Timing Protection Param</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Timing Protection Param</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTimingProtectionParam(TimingProtectionParam object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Isr Param</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Isr Param</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIsrParam(IsrParam object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Memory Protection Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Memory Protection Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMemoryProtectionRule(MemoryProtectionRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Implementation Def</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Implementation Def</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImplementationDef(ImplementationDef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Impl Attr Def</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Impl Attr Def</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImplAttrDef(ImplAttrDef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Impl Attr Int Def</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Impl Attr Int Def</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImplAttrIntDef(ImplAttrIntDef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Impl Attr Float Def</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Impl Attr Float Def</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImplAttrFloatDef(ImplAttrFloatDef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Impl Attr Enum Def</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Impl Attr Enum Def</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImplAttrEnumDef(ImplAttrEnumDef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Impl Attr String Def</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Impl Attr String Def</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImplAttrStringDef(ImplAttrStringDef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Impl Attr Boolean Def</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Impl Attr Boolean Def</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImplAttrBooleanDef(ImplAttrBooleanDef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Impl Attr Identi Fier</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Impl Attr Identi Fier</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImplAttrIdentiFier(ImplAttrIdentiFier object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Range</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Range</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRange(Range object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Enumeration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Enumeration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnumeration(Enumeration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Enumerator</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Enumerator</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnumerator(Enumerator object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Impl Ref Def</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Impl Ref Def</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImplRefDef(ImplRefDef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Application Definition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Application Definition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseApplicationDefinition(ApplicationDefinition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Object Definition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Object Definition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseObjectDefinition(ObjectDefinition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Event Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Event Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEventRule(EventRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Appmode Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Appmode Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAppmodeRule(AppmodeRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Message Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Message Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessageRule(MessageRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Messageattribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Messageattribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessageattribute(Messageattribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Messageattribute3</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Messageattribute3</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessageattribute3(Messageattribute3 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Message SETEVENT</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Message SETEVENT</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessageSETEVENT(MessageSETEVENT object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Message COMCALLBACK</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Message COMCALLBACK</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessageCOMCALLBACK(MessageCOMCALLBACK object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Messageattribute2</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Messageattribute2</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessageattribute2(Messageattribute2 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Message SEND STATIC EXTERNAL</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Message SEND STATIC EXTERNAL</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessage_SEND_STATIC_EXTERNAL(Message_SEND_STATIC_EXTERNAL object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Message SEND DYNAMIC EXTERNAL</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Message SEND DYNAMIC EXTERNAL</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessage_SEND_DYNAMIC_EXTERNAL(Message_SEND_DYNAMIC_EXTERNAL object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Message SEND ZERO EXTERNAL</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Message SEND ZERO EXTERNAL</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessage_SEND_ZERO_EXTERNAL(Message_SEND_ZERO_EXTERNAL object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Message RECEIVE ZERO INTERNAL</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Message RECEIVE ZERO INTERNAL</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessage_RECEIVE_ZERO_INTERNAL(Message_RECEIVE_ZERO_INTERNAL object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Message RECEIVE ZERO EXTERNAL</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Message RECEIVE ZERO EXTERNAL</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessage_RECEIVE_ZERO_EXTERNAL(Message_RECEIVE_ZERO_EXTERNAL object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Message RECEIVE UNQUEUED INTERNAL</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Message RECEIVE UNQUEUED INTERNAL</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessage_RECEIVE_UNQUEUED_INTERNAL(Message_RECEIVE_UNQUEUED_INTERNAL object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Message RECEIVE QUEUED INTERNAL</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Message RECEIVE QUEUED INTERNAL</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessage_RECEIVE_QUEUED_INTERNAL(Message_RECEIVE_QUEUED_INTERNAL object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Message RECEIVE UNQUEUED EXTERNAL</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Message RECEIVE UNQUEUED EXTERNAL</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessage_RECEIVE_UNQUEUED_EXTERNAL(Message_RECEIVE_UNQUEUED_EXTERNAL object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Message RECEIVE QUEUED EXTERNAL</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Message RECEIVE QUEUED EXTERNAL</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessage_RECEIVE_QUEUED_EXTERNAL(Message_RECEIVE_QUEUED_EXTERNAL object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Message RECEIVE DYNAMIC EXTERNAL</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Message RECEIVE DYNAMIC EXTERNAL</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessage_RECEIVE_DYNAMIC_EXTERNAL(Message_RECEIVE_DYNAMIC_EXTERNAL object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Message RECEIVE ZERO SENDERS</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Message RECEIVE ZERO SENDERS</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessage_RECEIVE_ZERO_SENDERS(Message_RECEIVE_ZERO_SENDERS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Message CDATATYPE</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Message CDATATYPE</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessageCDATATYPE(MessageCDATATYPE object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Message TRANSFERPROPERTY</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Message TRANSFERPROPERTY</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessageTRANSFERPROPERTY(MessageTRANSFERPROPERTY object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Message NETWORKORDERCALLOUT</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Message NETWORKORDERCALLOUT</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessageNETWORKORDERCALLOUT(MessageNETWORKORDERCALLOUT object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Message CPUORDERCALLOUT</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Message CPUORDERCALLOUT</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessageCPUORDERCALLOUT(MessageCPUORDERCALLOUT object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Message INITIALVALUE</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Message INITIALVALUE</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessageINITIALVALUE(MessageINITIALVALUE object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Message NETWORKMESSAGE</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Message NETWORKMESSAGE</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessageNETWORKMESSAGE(MessageNETWORKMESSAGE object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Message SENDINGMESSAGE</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Message SENDINGMESSAGE</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessageSENDINGMESSAGE(MessageSENDINGMESSAGE object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Message QUEUESIZE</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Message QUEUESIZE</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessageQUEUESIZE(MessageQUEUESIZE object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Messagefilter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Messagefilter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessagefilter(Messagefilter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Message LINK</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Message LINK</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMessageLINK(MessageLINK object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Librayattribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Librayattribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLibrayattribute(Librayattribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Com Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Com Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseComRule(ComRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Comattribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Comattribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseComattribute(Comattribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Task Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Task Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTaskRule(TaskRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Taskattribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Taskattribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTaskattribute(Taskattribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Task Timing Attribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Task Timing Attribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTaskTimingAttribute(TaskTimingAttribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Task Autostart Attribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Task Autostart Attribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTaskAutostartAttribute(TaskAutostartAttribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Resource Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Resource Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseResourceRule(ResourceRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Resourceattribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Resourceattribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseResourceattribute(Resourceattribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Alarm Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Alarm Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAlarmRule(AlarmRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Alarm Attribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Alarm Attribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAlarmAttribute(AlarmAttribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Alarm Action Attribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Alarm Action Attribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAlarmActionAttribute(AlarmActionAttribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Alarm Autostart Attribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Alarm Autostart Attribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAlarmAutostartAttribute(AlarmAutostartAttribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Schedule Table Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Schedule Table Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseScheduleTableRule(ScheduleTableRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Schedule Table Attribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Schedule Table Attribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseScheduleTableAttribute(ScheduleTableAttribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Schedule Auto Start Attribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Schedule Auto Start Attribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseScheduleAutoStartAttribute(ScheduleAutoStartAttribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Schdule Syn Attribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Schdule Syn Attribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSchduleSynAttribute(SchduleSynAttribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Expiry Attribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Expiry Attribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExpiryAttribute(ExpiryAttribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Schdule Action Attribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Schdule Action Attribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSchduleActionAttribute(SchduleActionAttribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Ioc Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Ioc Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIocRule(IocRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Ioc Attribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Ioc Attribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIocAttribute(IocAttribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Ioc Sender</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Ioc Sender</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIocSender(IocSender object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Ioc Receiver</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Ioc Receiver</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIocReceiver(IocReceiver object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Ioc Data Type Attr</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Ioc Data Type Attr</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIocDataTypeAttr(IocDataTypeAttr object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Ioc Semantics</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Ioc Semantics</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIocSemantics(IocSemantics object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Attribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Attribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAttribute(Attribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Attribute Name</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Attribute Name</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAttributeName(AttributeName object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Attribute Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Attribute Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAttributeValue(AttributeValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Name Attribute Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Name Attribute Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNameAttributeValue(NameAttributeValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Boolean Attribute Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Boolean Attribute Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBooleanAttributeValue(BooleanAttributeValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Number Attribute Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Number Attribute Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNumberAttributeValue(NumberAttributeValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Float Attribute Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Float Attribute Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFloatAttributeValue(FloatAttributeValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>String Attribute Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>String Attribute Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStringAttributeValue(StringAttributeValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Auto Attribute Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Auto Attribute Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAutoAttributeValue(AutoAttributeValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Os Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Os Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOsRule(OsRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Counter Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Counter Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCounterRule(CounterRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //OilSwitch
