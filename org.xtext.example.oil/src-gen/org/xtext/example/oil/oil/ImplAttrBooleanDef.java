/**
 * generated by Xtext 2.10.0
 */
package org.xtext.example.oil.oil;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Impl Attr Boolean Def</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@link org.xtext.example.oil.oil.ImplAttrBooleanDef#getTrueParameterList <em>True Parameter List</em>}</li>
 *   <li>{@link org.xtext.example.oil.oil.ImplAttrBooleanDef#getTrueDescription <em>True Description</em>}</li>
 *   <li>{@link org.xtext.example.oil.oil.ImplAttrBooleanDef#getFalseParameterList <em>False Parameter List</em>}</li>
 *   <li>{@link org.xtext.example.oil.oil.ImplAttrBooleanDef#getFalseDescription <em>False Description</em>}</li>
 *   <li>{@link org.xtext.example.oil.oil.ImplAttrBooleanDef#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.oil.oil.ImplAttrBooleanDef#isMultiple <em>Multiple</em>}</li>
 *   <li>{@link org.xtext.example.oil.oil.ImplAttrBooleanDef#getValue <em>Value</em>}</li>
 *   <li>{@link org.xtext.example.oil.oil.ImplAttrBooleanDef#getDefault <em>Default</em>}</li>
 * </ul>
 * </p>
 *
 * @see org.xtext.example.oil.oil.OilPackage#getImplAttrBooleanDef()
 * @model
 * @generated
 */
public interface ImplAttrBooleanDef extends ImplAttrDef
{
  /**
   * Returns the value of the '<em><b>True Parameter List</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.example.oil.oil.ImplementationDef}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>True Parameter List</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>True Parameter List</em>' containment reference list.
   * @see org.xtext.example.oil.oil.OilPackage#getImplAttrBooleanDef_TrueParameterList()
   * @model containment="true"
   * @generated
   */
  EList<ImplementationDef> getTrueParameterList();

  /**
   * Returns the value of the '<em><b>True Description</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>True Description</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>True Description</em>' attribute.
   * @see #setTrueDescription(String)
   * @see org.xtext.example.oil.oil.OilPackage#getImplAttrBooleanDef_TrueDescription()
   * @model
   * @generated
   */
  String getTrueDescription();

  /**
   * Sets the value of the '{@link org.xtext.example.oil.oil.ImplAttrBooleanDef#getTrueDescription <em>True Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>True Description</em>' attribute.
   * @see #getTrueDescription()
   * @generated
   */
  void setTrueDescription(String value);

  /**
   * Returns the value of the '<em><b>False Parameter List</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.example.oil.oil.ImplementationDef}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>False Parameter List</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>False Parameter List</em>' containment reference list.
   * @see org.xtext.example.oil.oil.OilPackage#getImplAttrBooleanDef_FalseParameterList()
   * @model containment="true"
   * @generated
   */
  EList<ImplementationDef> getFalseParameterList();

  /**
   * Returns the value of the '<em><b>False Description</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>False Description</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>False Description</em>' attribute.
   * @see #setFalseDescription(String)
   * @see org.xtext.example.oil.oil.OilPackage#getImplAttrBooleanDef_FalseDescription()
   * @model
   * @generated
   */
  String getFalseDescription();

  /**
   * Sets the value of the '{@link org.xtext.example.oil.oil.ImplAttrBooleanDef#getFalseDescription <em>False Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>False Description</em>' attribute.
   * @see #getFalseDescription()
   * @generated
   */
  void setFalseDescription(String value);

  /**
   * Returns the value of the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Name</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Name</em>' attribute.
   * @see #setName(String)
   * @see org.xtext.example.oil.oil.OilPackage#getImplAttrBooleanDef_Name()
   * @model
   * @generated
   */
  String getName();

  /**
   * Sets the value of the '{@link org.xtext.example.oil.oil.ImplAttrBooleanDef#getName <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Name</em>' attribute.
   * @see #getName()
   * @generated
   */
  void setName(String value);

  /**
   * Returns the value of the '<em><b>Multiple</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Multiple</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Multiple</em>' attribute.
   * @see #setMultiple(boolean)
   * @see org.xtext.example.oil.oil.OilPackage#getImplAttrBooleanDef_Multiple()
   * @model
   * @generated
   */
  boolean isMultiple();

  /**
   * Sets the value of the '{@link org.xtext.example.oil.oil.ImplAttrBooleanDef#isMultiple <em>Multiple</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Multiple</em>' attribute.
   * @see #isMultiple()
   * @generated
   */
  void setMultiple(boolean value);

  /**
   * Returns the value of the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Value</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Value</em>' attribute.
   * @see #setValue(String)
   * @see org.xtext.example.oil.oil.OilPackage#getImplAttrBooleanDef_Value()
   * @model
   * @generated
   */
  String getValue();

  /**
   * Sets the value of the '{@link org.xtext.example.oil.oil.ImplAttrBooleanDef#getValue <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Value</em>' attribute.
   * @see #getValue()
   * @generated
   */
  void setValue(String value);

  /**
   * Returns the value of the '<em><b>Default</b></em>' attribute.
   * The literals are from the enumeration {@link org.xtext.example.oil.oil.DefaultEnum}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Default</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Default</em>' attribute.
   * @see org.xtext.example.oil.oil.DefaultEnum
   * @see #setDefault(DefaultEnum)
   * @see org.xtext.example.oil.oil.OilPackage#getImplAttrBooleanDef_Default()
   * @model
   * @generated
   */
  DefaultEnum getDefault();

  /**
   * Sets the value of the '{@link org.xtext.example.oil.oil.ImplAttrBooleanDef#getDefault <em>Default</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Default</em>' attribute.
   * @see org.xtext.example.oil.oil.DefaultEnum
   * @see #getDefault()
   * @generated
   */
  void setDefault(DefaultEnum value);

} // ImplAttrBooleanDef
