/*
 * generated by Xtext 2.10.0
 */
package org.xtext.example.oil.serializer;

import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;
import org.xtext.example.oil.services.OilGrammarAccess;

@SuppressWarnings("all")
public class OilSyntacticSequencer extends AbstractSyntacticSequencer {

	protected OilGrammarAccess grammarAccess;
	protected AbstractElementAlias match_BooleanAttributeValue___BLOCKBEGINTerminalRuleCall_1_0_BLOCKENDTerminalRuleCall_1_2__q;
	protected AbstractElementAlias match_Enumerator___BLOCKBEGINTerminalRuleCall_1_0_BLOCKENDTerminalRuleCall_1_2__q;
	protected AbstractElementAlias match_ImplAttrBooleanDef___BLOCKBEGINTerminalRuleCall_2_2_0_BLOCKENDTerminalRuleCall_2_2_2__q;
	protected AbstractElementAlias match_ImplAttrBooleanDef___BLOCKBEGINTerminalRuleCall_2_6_0_BLOCKENDTerminalRuleCall_2_6_2__q;
	protected AbstractElementAlias match_ImplAttrBooleanDef___LeftSquareBracketKeyword_2_0_T_TRUETerminalRuleCall_2_1___BLOCKBEGINTerminalRuleCall_2_2_0_BLOCKENDTerminalRuleCall_2_2_2__q_CommaKeyword_2_4_T_FALSETerminalRuleCall_2_5___BLOCKBEGINTerminalRuleCall_2_6_0_BLOCKENDTerminalRuleCall_2_6_2__q_RightSquareBracketKeyword_2_8__q;
	protected AbstractElementAlias match_NameAttributeValue___BLOCKBEGINTerminalRuleCall_1_0_BLOCKENDTerminalRuleCall_1_2__q;
	protected AbstractElementAlias match_ObjectDefinition___BLOCKBEGINTerminalRuleCall_2_0_BLOCKENDTerminalRuleCall_2_3__q;
	protected AbstractElementAlias match_ReObjectDefinition___BLOCKBEGINTerminalRuleCall_2_0_BLOCKENDTerminalRuleCall_2_2__q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (OilGrammarAccess) access;
		match_BooleanAttributeValue___BLOCKBEGINTerminalRuleCall_1_0_BLOCKENDTerminalRuleCall_1_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getBooleanAttributeValueAccess().getBLOCKBEGINTerminalRuleCall_1_0()), new TokenAlias(false, false, grammarAccess.getBooleanAttributeValueAccess().getBLOCKENDTerminalRuleCall_1_2()));
		match_Enumerator___BLOCKBEGINTerminalRuleCall_1_0_BLOCKENDTerminalRuleCall_1_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getEnumeratorAccess().getBLOCKBEGINTerminalRuleCall_1_0()), new TokenAlias(false, false, grammarAccess.getEnumeratorAccess().getBLOCKENDTerminalRuleCall_1_2()));
		match_ImplAttrBooleanDef___BLOCKBEGINTerminalRuleCall_2_2_0_BLOCKENDTerminalRuleCall_2_2_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getImplAttrBooleanDefAccess().getBLOCKBEGINTerminalRuleCall_2_2_0()), new TokenAlias(false, false, grammarAccess.getImplAttrBooleanDefAccess().getBLOCKENDTerminalRuleCall_2_2_2()));
		match_ImplAttrBooleanDef___BLOCKBEGINTerminalRuleCall_2_6_0_BLOCKENDTerminalRuleCall_2_6_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getImplAttrBooleanDefAccess().getBLOCKBEGINTerminalRuleCall_2_6_0()), new TokenAlias(false, false, grammarAccess.getImplAttrBooleanDefAccess().getBLOCKENDTerminalRuleCall_2_6_2()));
		match_ImplAttrBooleanDef___LeftSquareBracketKeyword_2_0_T_TRUETerminalRuleCall_2_1___BLOCKBEGINTerminalRuleCall_2_2_0_BLOCKENDTerminalRuleCall_2_2_2__q_CommaKeyword_2_4_T_FALSETerminalRuleCall_2_5___BLOCKBEGINTerminalRuleCall_2_6_0_BLOCKENDTerminalRuleCall_2_6_2__q_RightSquareBracketKeyword_2_8__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getImplAttrBooleanDefAccess().getLeftSquareBracketKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getImplAttrBooleanDefAccess().getT_TRUETerminalRuleCall_2_1()), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getImplAttrBooleanDefAccess().getBLOCKBEGINTerminalRuleCall_2_2_0()), new TokenAlias(false, false, grammarAccess.getImplAttrBooleanDefAccess().getBLOCKENDTerminalRuleCall_2_2_2())), new TokenAlias(false, false, grammarAccess.getImplAttrBooleanDefAccess().getCommaKeyword_2_4()), new TokenAlias(false, false, grammarAccess.getImplAttrBooleanDefAccess().getT_FALSETerminalRuleCall_2_5()), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getImplAttrBooleanDefAccess().getBLOCKBEGINTerminalRuleCall_2_6_0()), new TokenAlias(false, false, grammarAccess.getImplAttrBooleanDefAccess().getBLOCKENDTerminalRuleCall_2_6_2())), new TokenAlias(false, false, grammarAccess.getImplAttrBooleanDefAccess().getRightSquareBracketKeyword_2_8()));
		match_NameAttributeValue___BLOCKBEGINTerminalRuleCall_1_0_BLOCKENDTerminalRuleCall_1_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getNameAttributeValueAccess().getBLOCKBEGINTerminalRuleCall_1_0()), new TokenAlias(false, false, grammarAccess.getNameAttributeValueAccess().getBLOCKENDTerminalRuleCall_1_2()));
		match_ObjectDefinition___BLOCKBEGINTerminalRuleCall_2_0_BLOCKENDTerminalRuleCall_2_3__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getObjectDefinitionAccess().getBLOCKBEGINTerminalRuleCall_2_0()), new TokenAlias(false, false, grammarAccess.getObjectDefinitionAccess().getBLOCKENDTerminalRuleCall_2_3()));
		match_ReObjectDefinition___BLOCKBEGINTerminalRuleCall_2_0_BLOCKENDTerminalRuleCall_2_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getReObjectDefinitionAccess().getBLOCKBEGINTerminalRuleCall_2_0()), new TokenAlias(false, false, grammarAccess.getReObjectDefinitionAccess().getBLOCKENDTerminalRuleCall_2_2()));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (ruleCall.getRule() == grammarAccess.getBLOCKBEGINRule())
			return getBLOCKBEGINToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getBLOCKENDRule())
			return getBLOCKENDToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getMultipleSpecifierRule())
			return getMultipleSpecifierToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getSEMICOLONRule())
			return getSEMICOLONToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getT_CPURule())
			return getT_CPUToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getT_FALSERule())
			return getT_FALSEToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getT_TRUERule())
			return getT_TRUEToken(semanticObject, ruleCall, node);
		return "";
	}
	
	/**
	 * terminal BLOCKBEGIN:
	 *    "{";
	 */
	protected String getBLOCKBEGINToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "{";
	}
	
	/**
	 * terminal BLOCKEND:
	 *    "}";
	 */
	protected String getBLOCKENDToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "}";
	}
	
	/**
	 * MultipleSpecifier:
	 *    "[" "]";
	 */
	protected String getMultipleSpecifierToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "[]";
	}
	
	/**
	 * terminal SEMICOLON:
	 *    ";";
	 */
	protected String getSEMICOLONToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return ";";
	}
	
	/**
	 * terminal T_CPU:
	 *    "CPU";
	 */
	protected String getT_CPUToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "CPU";
	}
	
	/**
	 * terminal T_FALSE:
	 *    "FALSE";
	 */
	protected String getT_FALSEToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "FALSE";
	}
	
	/**
	 * terminal T_TRUE:
	 *    "TRUE";
	 */
	protected String getT_TRUEToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "TRUE";
	}
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_BooleanAttributeValue___BLOCKBEGINTerminalRuleCall_1_0_BLOCKENDTerminalRuleCall_1_2__q.equals(syntax))
				emit_BooleanAttributeValue___BLOCKBEGINTerminalRuleCall_1_0_BLOCKENDTerminalRuleCall_1_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Enumerator___BLOCKBEGINTerminalRuleCall_1_0_BLOCKENDTerminalRuleCall_1_2__q.equals(syntax))
				emit_Enumerator___BLOCKBEGINTerminalRuleCall_1_0_BLOCKENDTerminalRuleCall_1_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ImplAttrBooleanDef___BLOCKBEGINTerminalRuleCall_2_2_0_BLOCKENDTerminalRuleCall_2_2_2__q.equals(syntax))
				emit_ImplAttrBooleanDef___BLOCKBEGINTerminalRuleCall_2_2_0_BLOCKENDTerminalRuleCall_2_2_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ImplAttrBooleanDef___BLOCKBEGINTerminalRuleCall_2_6_0_BLOCKENDTerminalRuleCall_2_6_2__q.equals(syntax))
				emit_ImplAttrBooleanDef___BLOCKBEGINTerminalRuleCall_2_6_0_BLOCKENDTerminalRuleCall_2_6_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ImplAttrBooleanDef___LeftSquareBracketKeyword_2_0_T_TRUETerminalRuleCall_2_1___BLOCKBEGINTerminalRuleCall_2_2_0_BLOCKENDTerminalRuleCall_2_2_2__q_CommaKeyword_2_4_T_FALSETerminalRuleCall_2_5___BLOCKBEGINTerminalRuleCall_2_6_0_BLOCKENDTerminalRuleCall_2_6_2__q_RightSquareBracketKeyword_2_8__q.equals(syntax))
				emit_ImplAttrBooleanDef___LeftSquareBracketKeyword_2_0_T_TRUETerminalRuleCall_2_1___BLOCKBEGINTerminalRuleCall_2_2_0_BLOCKENDTerminalRuleCall_2_2_2__q_CommaKeyword_2_4_T_FALSETerminalRuleCall_2_5___BLOCKBEGINTerminalRuleCall_2_6_0_BLOCKENDTerminalRuleCall_2_6_2__q_RightSquareBracketKeyword_2_8__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_NameAttributeValue___BLOCKBEGINTerminalRuleCall_1_0_BLOCKENDTerminalRuleCall_1_2__q.equals(syntax))
				emit_NameAttributeValue___BLOCKBEGINTerminalRuleCall_1_0_BLOCKENDTerminalRuleCall_1_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ObjectDefinition___BLOCKBEGINTerminalRuleCall_2_0_BLOCKENDTerminalRuleCall_2_3__q.equals(syntax))
				emit_ObjectDefinition___BLOCKBEGINTerminalRuleCall_2_0_BLOCKENDTerminalRuleCall_2_3__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ReObjectDefinition___BLOCKBEGINTerminalRuleCall_2_0_BLOCKENDTerminalRuleCall_2_2__q.equals(syntax))
				emit_ReObjectDefinition___BLOCKBEGINTerminalRuleCall_2_0_BLOCKENDTerminalRuleCall_2_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     (BLOCKBEGIN BLOCKEND)?
	 *
	 * This ambiguous syntax occurs at:
	 *     value=EBoolean (ambiguity) (rule end)
	 */
	protected void emit_BooleanAttributeValue___BLOCKBEGINTerminalRuleCall_1_0_BLOCKENDTerminalRuleCall_1_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (BLOCKBEGIN BLOCKEND)?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=Name (ambiguity) (rule end)
	 *     name=Name (ambiguity) description=EString
	 */
	protected void emit_Enumerator___BLOCKBEGINTerminalRuleCall_1_0_BLOCKENDTerminalRuleCall_1_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (BLOCKBEGIN BLOCKEND)?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'BOOLEAN' '[' T_TRUE (ambiguity) ',' T_FALSE (BLOCKBEGIN BLOCKEND)? falseDescription=EString
	 *     (rule start) 'BOOLEAN' '[' T_TRUE (ambiguity) ',' T_FALSE BLOCKBEGIN falseParameterList+=ImplementationDef
	 *     (rule start) 'BOOLEAN' '[' T_TRUE (ambiguity) trueDescription=EString
	 *     auto?='WITH_AUTO' '[' T_TRUE (ambiguity) ',' T_FALSE (BLOCKBEGIN BLOCKEND)? falseDescription=EString
	 *     auto?='WITH_AUTO' '[' T_TRUE (ambiguity) ',' T_FALSE BLOCKBEGIN falseParameterList+=ImplementationDef
	 *     auto?='WITH_AUTO' '[' T_TRUE (ambiguity) trueDescription=EString
	 */
	protected void emit_ImplAttrBooleanDef___BLOCKBEGINTerminalRuleCall_2_2_0_BLOCKENDTerminalRuleCall_2_2_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (BLOCKBEGIN BLOCKEND)?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'BOOLEAN' '[' T_TRUE (BLOCKBEGIN BLOCKEND)? ',' T_FALSE (ambiguity) falseDescription=EString
	 *     auto?='WITH_AUTO' '[' T_TRUE (BLOCKBEGIN BLOCKEND)? ',' T_FALSE (ambiguity) falseDescription=EString
	 *     trueDescription=EString ',' T_FALSE (ambiguity) ']' name=Name
	 *     trueDescription=EString ',' T_FALSE (ambiguity) ']' name=Object
	 *     trueDescription=EString ',' T_FALSE (ambiguity) falseDescription=EString
	 *     trueParameterList+=ImplementationDef BLOCKEND ',' T_FALSE (ambiguity) ']' name=Name
	 *     trueParameterList+=ImplementationDef BLOCKEND ',' T_FALSE (ambiguity) ']' name=Object
	 *     trueParameterList+=ImplementationDef BLOCKEND ',' T_FALSE (ambiguity) falseDescription=EString
	 */
	protected void emit_ImplAttrBooleanDef___BLOCKBEGINTerminalRuleCall_2_6_0_BLOCKENDTerminalRuleCall_2_6_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         '[' 
	  *         T_TRUE 
	  *         (BLOCKBEGIN BLOCKEND)? 
	  *         ',' 
	  *         T_FALSE 
	  *         (BLOCKBEGIN BLOCKEND)? 
	  *         ']'
	  *     )?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'BOOLEAN' (ambiguity) name=Name
	 *     (rule start) 'BOOLEAN' (ambiguity) name=Object
	 *     auto?='WITH_AUTO' (ambiguity) name=Name
	 *     auto?='WITH_AUTO' (ambiguity) name=Object
	 */
	protected void emit_ImplAttrBooleanDef___LeftSquareBracketKeyword_2_0_T_TRUETerminalRuleCall_2_1___BLOCKBEGINTerminalRuleCall_2_2_0_BLOCKENDTerminalRuleCall_2_2_2__q_CommaKeyword_2_4_T_FALSETerminalRuleCall_2_5___BLOCKBEGINTerminalRuleCall_2_6_0_BLOCKENDTerminalRuleCall_2_6_2__q_RightSquareBracketKeyword_2_8__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (BLOCKBEGIN BLOCKEND)?
	 *
	 * This ambiguous syntax occurs at:
	 *     value=Name (ambiguity) (rule end)
	 */
	protected void emit_NameAttributeValue___BLOCKBEGINTerminalRuleCall_1_0_BLOCKENDTerminalRuleCall_1_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (BLOCKBEGIN BLOCKEND)?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=Name (ambiguity) SEMICOLON (rule end)
	 *     name=Name (ambiguity) descrption=EString
	 */
	protected void emit_ObjectDefinition___BLOCKBEGINTerminalRuleCall_2_0_BLOCKENDTerminalRuleCall_2_3__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (BLOCKBEGIN BLOCKEND)?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=Name (ambiguity) SEMICOLON (rule end)
	 *     name=Name (ambiguity) descrption=EString
	 */
	protected void emit_ReObjectDefinition___BLOCKBEGINTerminalRuleCall_2_0_BLOCKENDTerminalRuleCall_2_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
