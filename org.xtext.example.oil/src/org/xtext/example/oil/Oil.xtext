grammar org.xtext.example.oil.Oil with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
generate oil "http://www.xtext.org/example/oil/Oil"

OILFile:
   (version=OILVersion)?
   (include+=Include)* 
   (implementation=ImplementationDefinition)? 
   application=ApplicationDefinition;

Include:	// ¼öÁ¤
   "#include" ("<" name=FileName ">"|name=STRING)
;

FileName:
   FILEID
;
   
OILVersion:
   "OIL_VERSION" "=" version=STRING (":" description=EString)? ";"
;

ImplementationDefinition:
   "IMPLEMENTATION" name=Name "{" (implementationSpecs+=ImplementationSpec) "}" ";"
;

ImplementationSpec:
   {ImplementationSpec}
   (osRule+=OsRule| taskRule+=TaskRule | counterRule+=CounterRule| isrRule+=IsrRule)+
;

OsRule:
   {OsRule}
   "OS" "{" (implementations+=ImplementationDef)* "}" ";"
;

TaskRule:
   {TaskRule}
   "TASK" "{" (implementations+=ImplementationDef)* "}" ";"
;

CounterRule:
   {CounterRule}
   "COUNTER" "{" (implementations+=ImplementationDef)* "}" ";"
;

ApplicationRule:
	{ApplicationRule}
	"APPLICATION"
	(name=Name)? "{" (appSubOrParam+=(AppSubContainer | ApplicationParam))* "}" ";"
;

AppSubContainer:
	(hasRestartTaskRule=HasRestartTaskRule | trustedRule=TrustedRule)
;

HasRestartTaskRule:
	{HasRestartTaskRule}
	"HAS_RESTARTTASK"
	(name=Name)? "=" ("TRUE" "{" (restartTaskRule=RestartTaskRule) "}"| "FALSE") ";"
;

RestartTaskRule:
	"RESTARTTASK"
	(name=Name)? "=" value=AttributeValue ";"
;

TrustedRule:
	{TrustedRule}
	"TRUSTED" (name=Name)? "=" ("TRUE" | "FALSE") ";"
;

ApplicationParam:
	type=ApplicationParamEnum "=" value=AttributeValue ";"
;

enum ApplicationParamEnum:
	CORE | ALARM | COUNTER | RESOURCE | TASK | ISR | MESSAGE |
	SCHEDULETABLE | IOC | ERRORHOOK | SHUTDOWNHOOK | STARTUPHOOK
;

IsrRule:
   {IsrRule}
   "ISR"
   (name=Name)? "{" (type=IntTypeEnum)? (isrSubOrParam+=(IsrSubContainer | IsrParam))* "}" ";"
;

IsrSubContainer:
	(timingProtectionRule=TimingProtectionRule)
;

TimingProtectionRule:
	{TimingProtectionRule}
	"TIMING_PROTECTION"
	(name=Name)? "=" ("TRUE" "{" (timingProtectionParam+=TimingProtectionParam)* "}" | "FALSE") ";"
;

TimingProtectionParam:
	type=TimingProtectionParamEnum "=" value=AttributeValue ";"
;

enum TimingProtectionParamEnum:
	MAXALLINTERRUPTLOCKTIME | MAXOSINTERRUPTLOCKTIME | EXECUTIONTIME | TIMEFRAME
;

IsrParam:
	type=IsrParamEnum "=" value=AttributeValue ";"
;

enum IsrParamEnum:
	CATEGORY | RESOURCE | MESSAGE | PRIORITY | ENTRY | STACKSIZE | SOURCE
;

MemoryProtectionRule:
	{MemoryProtectionRule}
	"MEMORY_PROTECTION" "{" "}" ";"
;

Object:
   ("OS" | "TASK" | "COUNTER" | "ALARM" | "RESOURCE" |
   "EVENT" | "ISR" | "MESSAGE" | "COM" | "NM" | 
   "APPMODE" | "IPDU" | "NETWORKMESSAGE" | "APPLICATION" | "MEMOTY_PROTECTION" | 
   "SPINLOCK" | "SCHEDULETABLE" | "IOC" | "LIBRARY")
;

ImplementationDef:
   ImplAttrDef | ImplRefDef;

ImplAttrDef:
   ImplAttrIntDef | ImplAttrFloatDef | ImplAttrEnumDef | ImplAttrStringDef | ImplAttrBooleanDef | ImplAttrIdentiFier;

ImplAttrIntDef:
   type=IntTypeEnum
   (auto?="WITH_AUTO")? (range=Range)? name=AttributeName (multiple?=MultipleSpecifier)?
   ("=" (value=Number | default=DefaultEnum))? ";";

enum IntTypeEnum:
   UINT32 | INT32 | UINT64 | INT64;

ImplAttrFloatDef:
   "FLOAT"
   (auto?="WITH_AUTO")? (range=Range)? name=AttributeName (multiple?=MultipleSpecifier)?
   ("=" (value=EFloat | default=DefaultEnum))? ";";

ImplAttrEnumDef:
   "ENUM"
   (auto?="WITH_AUTO")? (enumeration=Enumeration)? name=AttributeName (multiple?=MultipleSpecifier)?
   ("=" (value=Name | default=DefaultEnum))? ";";

ImplAttrStringDef:
   "STRING"
   (auto?="WITH_AUTO")? name=AttributeName (multiple?=MultipleSpecifier)?
   ("=" (value=EString | default=DefaultEnum))? ";";

ImplAttrBooleanDef:
   "BOOLEAN"
   (auto?="WITH_AUTO")? ("[" "TRUE" ("{" (trueParameterList+=ImplementationDef)* "}")?
   (trueDescription=EString)? ","
   "FALSE"
   ("{" (falseParameterList+=ImplementationDef)* "}")? (falseDescription=EString)? "]")? name=(Name | Object)
   (multiple?=MultipleSpecifier)?
   ("=" (value=("TRUE" | "FALSE") | default=DefaultEnum))? ";";

ImplAttrIdentiFier: // possibly change according to implementation grammar.
    "IDENTIFIER"
   (auto?="WITH_AUTO")? name=AttributeName "=" value = ID ";"
;

Range:
   "[" (value=Number | begin=Number ".." end=Number | numbers+=Number ("," numbers+=Number)+) "]";

enum DefaultEnum:
   NO_DEFAULT | AUTO;

Enumeration:
   "[" list+=Enumerator ("," list+=Enumerator)* "]";

Enumerator:
   name=Name ("{" (implParameterList+=ImplementationDef)* "}")? (description=EString)?;

ImplRefDef:
   type=ObjectRefTypeEnum name=AttributeName (multiple?=MultipleSpecifier)? (description=EString)? ";";

enum ObjectRefTypeEnum:
   OS_TYPE | TASK_TYPE | COUNTER_TYPE | ALARM_TYPE | RESOURCE_TYPE | 
   EVENT_TYPE | ISR_TYPE | MESSAGE_TYPE | COM_TYPE |NM_TYPE | 
   APPMODE_TYPE | IPDU_TYPE | NETWORKMESSAGE_TYPE | APPLICATION_TYPE | MEMOTY_PROTECTION_TYPE |
   SPINLOCK_TYPE | SCHEDULETABLE_TYPE | IOC_TYPE|APICONFIG_TYPE|LIBRARY_TYPE;


MultipleSpecifier:
   "[" "]";

ApplicationDefinition:
   "CPU" name=Name "{" (objectDefinitionList+=ObjectDefinition)* "}" ";";

ObjectDefinition:
   ("LIBRARY" name=Name ("{" (LibraryList += Librayattribute)* "}")? ";" |   
   	
   	ApplicationRule |
   object=Object name=Name ("{" (parameterList+=Attribute)* "}")? (descrption=EString)? ";");

Librayattribute :
   
   ("PATH" "=" (description=EString) ";"|
    "CHEADER" "=" (description=EString) ";"|
    "CFILE" "=" (description=EString) ";"   )
;

/************************ 
object=Object name=Name (BLOCKBEGIN (parameterList+=Attribute
   )* (reObjectDefinition=ReObjectDefinition)* BLOCKEND)? (descrption=EString)? SEMICOLON;

ReObjectDefinition://
   reobject=ReObject name=Name (BLOCKBEGIN (parameterList+=Attribute)* BLOCKEND)? (descrption=EString)? SEMICOLON;
Attribute:
   name=AttributeName "=" value=AttributeValue (description=EString)? SEMICOLON;

*************************/

Attribute:
   name=AttributeName ("=")? value=AttributeValue (description=EString)? ";";

AttributeName:
   value=(Name | Object);

AttributeValue:
   NameAttributeValue | BooleanAttributeValue | NumberAttributeValue | FloatAttributeValue | StringAttributeValue |
   AutoAttributeValue;

NameAttributeValue:
   value=Name
;

BooleanAttributeValue:
   value=("TRUE" | "FALSE")
;

NumberAttributeValue:
   value=Number;

FloatAttributeValue:
   value=EFloat;

StringAttributeValue:
   value=EString;

AutoAttributeValue:
   value?="AUTO";

EString returns ecore::EString:
   STRING;

Number returns ecore::EInt:
   T_NUMBER;

terminal T_NUMBER:
   ("+" | "-")? (("0x" ("0".."9" | "a".."f" | "A".."F")+) | (("1".."9") ("0".."9")*) | "0");

EFloat returns ecore::EFloatObject:
   T_FLOAT;

terminal T_FLOAT:
   ("+" | "-")? ("0"..'9')* "." ("0".."9")* (("e" | "E") ("+" | "-")? ("0".."9")+)?;

Name returns ecore::EString:
   ID;

terminal ID:
   ("_" | "a".."z" | "A".."Z") ("_" | "a".."z" | "A".."Z" | "0".."9")*;

terminal FILEID:
   ("_" | "a".."z" | "A".."Z") ("_" | "a".."z" | "A".."Z" | "0".."9")* "."("a".."z" | "A".."Z") ("a".."z" | "A".."Z")*
;